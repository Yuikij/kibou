"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5339],{14260:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>y,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ai/LLM/\u5229\u7528CF\u7684worker\u5b9e\u73b0gemini\u7684key\u6c60\u4ee3\u7406","title":"\u5229\u7528CF\u7684worker\u5b9e\u73b0gemini\u7684key\u6c60\u4ee3\u7406","description":"\u521d\u8877","source":"@site/docs/ai/LLM/\u5229\u7528CF\u7684worker\u5b9e\u73b0gemini\u7684key\u6c60\u4ee3\u7406.mdx","sourceDirName":"ai/LLM","slug":"/ai/LLM/\u5229\u7528CF\u7684worker\u5b9e\u73b0gemini\u7684key\u6c60\u4ee3\u7406","permalink":"/kibou/docs/ai/LLM/\u5229\u7528CF\u7684worker\u5b9e\u73b0gemini\u7684key\u6c60\u4ee3\u7406","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ai","next":{"title":"\u76f8\u5173\u7f51\u7ad9","permalink":"/kibou/docs/ai/SEO/\u76f8\u5173\u7f51\u7ad9"}}');var s=e(74848),a=e(28453),i=e(43165);const o={},l=void 0,d={},c=[{value:"\u521d\u8877",id:"\u521d\u8877",level:2},{value:"\u642d\u5efaworker",id:"\u642d\u5efaworker",level:2},{value:"\u521b\u5efaD1\u6570\u636e\u5e93",id:"\u521b\u5efad1\u6570\u636e\u5e93",level:3},{value:"\u521b\u5efaworker",id:"\u521b\u5efaworker",level:3},{value:"1. \u7ed1\u5b9a\u4e4b\u524d\u521b\u5efa\u597d\u7684D1\u6570\u636e\u5e93",id:"1-\u7ed1\u5b9a\u4e4b\u524d\u521b\u5efa\u597d\u7684d1\u6570\u636e\u5e93",level:4},{value:"2. \u521d\u59cb\u5316\u6570\u636e\u5e93",id:"2-\u521d\u59cb\u5316\u6570\u636e\u5e93",level:4},{value:"3. \u5199\u4e3b\u7a0b\u5e8f",id:"3-\u5199\u4e3b\u7a0b\u5e8f",level:4},{value:"\u5982\u4f55\u4f7f\u7528worker",id:"\u5982\u4f55\u4f7f\u7528worker",level:2},{value:"\u914d\u7f6e\u73af\u5883\u53d8\u91cf",id:"\u914d\u7f6e\u73af\u5883\u53d8\u91cf",level:4},{value:"1. \u5185\u90e8\u4f7f\u7528",id:"1-\u5185\u90e8\u4f7f\u7528",level:4},{value:"2. \u5916\u90e8\u63a5\u53e3\u8c03\u7528",id:"2-\u5916\u90e8\u63a5\u53e3\u8c03\u7528",level:4}];function u(t){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\u521d\u8877",children:"\u521d\u8877"}),"\n",(0,s.jsx)(n.p,{children:"\u867d\u7136\u8c37\u6b4c\u5927\u5584\u4eba\u63d0\u4f9b\u4e86\u514d\u8d39\u7684Gemini APi\uff0c\u4f46\u662f\u6709\u5f88\u5927\u7684\u901f\u7387\u9650\u5236\uff0c\u751a\u81f3\u5728\u6211\u65e5\u5e38\u5f00\u53d1\u4e2d\u90fd\u9047\u5230\u8fc7\u5f88\u591a\u6b21\u8d85\u8fc7\u901f\u7387\u9650\u5236\u7684\u62a5\u9519\u3002\u9605\u8bfb\u6587\u6863\u4e4b\u540e\uff0c\u53d1\u73b0\u901f\u7387\u7684\u9650\u5236\u53ea\u9488\u5bf9project\uff0c\n\u4e8e\u662f\u6253\u7b97\u505a\u4e00\u4e2aGemini APi\u7684\u4ee3\u7406\uff0c\u53bb\u66f4\u597d\u7684\u7ba1\u7406\u548c\u4f7f\u7528key\u3002"}),"\n",(0,s.jsx)(i.A,{style:{paddingBottom:"20px"},src:"https://file.yuisama.top:9009/file//picture/geminiDoc.png"}),"\n",(0,s.jsx)(n.h2,{id:"\u642d\u5efaworker",children:"\u642d\u5efaworker"}),"\n",(0,s.jsx)(n.h3,{id:"\u521b\u5efad1\u6570\u636e\u5e93",children:"\u521b\u5efaD1\u6570\u636e\u5e93"}),"\n",(0,s.jsx)(n.p,{children:"\u6839\u636e\u6587\u6863\u53bb\u5b98\u7f51\u7684\u4eea\u8868\u76d8\u6216\u8005\u7528\u547d\u4ee4\u884c\u521b\u5efaD1 \u6570\u636e\u5e93"}),"\n",(0,s.jsx)(n.h3,{id:"\u521b\u5efaworker",children:"\u521b\u5efaworker"}),"\n",(0,s.jsx)(n.h4,{id:"1-\u7ed1\u5b9a\u4e4b\u524d\u521b\u5efa\u597d\u7684d1\u6570\u636e\u5e93",children:"1. \u7ed1\u5b9a\u4e4b\u524d\u521b\u5efa\u597d\u7684D1\u6570\u636e\u5e93"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonc",metastring:'title="wrangler.jsonc"',children:'// binding \u586b\u672c\u9879\u76ee\u81ea\u5b9a\u4e49\u7684id\uff0cdatabase_name\u548cdatabase_id\u53bb\u4e4b\u524d\u521b\u5efaD1\u6570\u636e\u5e93\u7684\u5730\u65b9\u627e\n\t"d1_databases": [\n\t\t{\n\t\t\t"binding": "d1",\n\t\t\t"database_name": "d1",\n\t\t\t"database_id": "xxx"\n\t\t}\n\t],\n'})}),"\n",(0,s.jsx)(n.h4,{id:"2-\u521d\u59cb\u5316\u6570\u636e\u5e93",children:"2. \u521d\u59cb\u5316\u6570\u636e\u5e93"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- API Key\u7ba1\u7406\u8868\nCREATE TABLE IF NOT EXISTS api_keys (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    api_key TEXT UNIQUE NOT NULL,           -- API\u5bc6\u94a5\n    name TEXT,                              -- \u5bc6\u94a5\u540d\u79f0/\u5907\u6ce8\n    priority INTEGER DEFAULT 100,           -- \u4f18\u5148\u7ea7\u6743\u91cd (\u6570\u503c\u8d8a\u9ad8\u4f18\u5148\u7ea7\u8d8a\u9ad8)\n    status INTEGER DEFAULT 1,              -- \u72b6\u6001: 1=\u6709\u6548, 2=\u6682\u65f6\u5931\u6548, 0=\u5b8c\u5168\u5931\u6548\n    consecutive_failures INTEGER DEFAULT 0, -- \u8fde\u7eed\u5931\u8d25\u6b21\u6570\n    total_calls INTEGER DEFAULT 0,         -- \u603b\u8c03\u7528\u6b21\u6570\n    success_calls INTEGER DEFAULT 0,       -- \u6210\u529f\u8c03\u7528\u6b21\u6570\n    last_used_at DATETIME,                 -- \u6700\u540e\u4f7f\u7528\u65f6\u95f4\n    last_success_at DATETIME,              -- \u6700\u540e\u6210\u529f\u65f6\u95f4\n    last_failure_at DATETIME,              -- \u6700\u540e\u5931\u8d25\u65f6\u95f4\n    disabled_until DATETIME,               -- \u7981\u7528\u622a\u6b62\u65f6\u95f4\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \u521b\u5efa\u7d22\u5f15\u4f18\u5316\u67e5\u8be2\u6027\u80fd\nCREATE INDEX IF NOT EXISTS idx_api_keys_status ON api_keys(status);\nCREATE INDEX IF NOT EXISTS idx_api_keys_disabled_until ON api_keys(disabled_until);\nCREATE INDEX IF NOT EXISTS idx_api_keys_priority ON api_keys(priority);\n\n-- API\u8c03\u7528\u65e5\u5fd7\u8868 (\u53ef\u9009\uff0c\u7528\u4e8e\u66f4\u8be6\u7ec6\u7684\u7edf\u8ba1\u548c\u76d1\u63a7)\nCREATE TABLE IF NOT EXISTS api_call_logs (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    api_key_id INTEGER NOT NULL,\n    success BOOLEAN NOT NULL,\n    response_status INTEGER,\n    error_message TEXT,\n    response_time_ms INTEGER,\n    called_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (api_key_id) REFERENCES api_keys(id)\n);\n\n-- \u4e3a\u65e5\u5fd7\u8868\u521b\u5efa\u7d22\u5f15\nCREATE INDEX IF NOT EXISTS idx_logs_api_key_id ON api_call_logs(api_key_id);\nCREATE INDEX IF NOT EXISTS idx_logs_called_at ON api_call_logs(called_at);\nCREATE INDEX IF NOT EXISTS idx_logs_success ON api_call_logs(success);\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u7136\u540e\u4f7f\u7528\u547d\u4ee4"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# \u6ce8\u610f\u5c06d1\u66ff\u6362\u6210\u81ea\u5df1\u586b\u7684binding\nnpx wrangler d1 execute d1 --remote --file=./schema.sql \n"})}),"\n",(0,s.jsx)(n.h4,{id:"3-\u5199\u4e3b\u7a0b\u5e8f",children:"3. \u5199\u4e3b\u7a0b\u5e8f"}),"\n",(0,s.jsx)(n.p,{children:"\u6839\u636e\u60c5\u51b5\u81ea\u5df1\u6539\uff0c\u6211\u8fd9\u4e5f\u662fAI\u751f\u6210\u7684\uff0copenai\u8303\u5f0f\u7684\u63a5\u53e3"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:'title="\u76ee\u5f55\u7ed3\u6784"',children:"\u2514\u2500src\n    index.js\n    keyManager.js\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="index.js"',children:"// Cloudflare Workers - Gemini API \u4ee3\u7406\u670d\u52a1\n// \u7528\u4e8e\u9690\u85cf\u524d\u7aef API Key\uff0c\u63d0\u4f9b\u5b89\u5168\u7684 API \u8c03\u7528\n// \u6dfb\u52a0\u4e86\u57df\u540d\u767d\u540d\u5355\u529f\u80fd\u548c\u667a\u80fdAPI Key\u7ba1\u7406\n\nimport { KeyManager } from './keyManager.js';\n\nexport default {\n\tasync fetch(request, env, ctx) {\n\t\t// \u521d\u59cb\u5316KeyManager\n\t\tconst keyManager = new KeyManager(env.d1);\n\t\t\n\t\t// \u5982\u679c\u8bbe\u7f6e\u4e86GEMINI_API_KEY\u73af\u5883\u53d8\u91cf\uff0c\u81ea\u52a8\u5bfc\u5165\u5230\u6570\u636e\u5e93\n\t\tif (env.GEMINI_API_KEY) {\n\t\t\ttry {\n\t\t\t\tawait keyManager.initializeKeysFromEnv(env.GEMINI_API_KEY);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error initializing keys from environment:', error);\n\t\t\t}\n\t\t}\n\n\t\t// \u57df\u540d\u767d\u540d\u5355\u68c0\u67e5\n\t\t// if (!isAllowedOrigin(request, env)) {\n\t\t// \treturn createErrorResponse('Access denied: Origin not allowed', 403);\n\t\t// }\n\n\t\t// API Token \u6821\u9a8c\n\t\tif (!isValidApiToken(request, env)) {\n\t\t\treturn createErrorResponse('Access denied: Invalid or missing API token', 400);\n\t\t}\n\t\n\t\t// CORS \u9884\u68c0\u8bf7\u6c42\u5904\u7406\n\t\tif (request.method === 'OPTIONS') {\n\t\t\treturn handleCors(request, env);\n\t\t}\n\n\t\t// \u53ea\u5141\u8bb8 POST \u8bf7\u6c42\n\t\tif (request.method !== 'POST') {\n\t\t\treturn createErrorResponse('Method not allowed', 405);\n\t\t}\n\n\t\t// \u68c0\u67e5\u8bf7\u6c42\u8def\u5f84\n\t\tconst url = new URL(request.url);\n\t\t\n\t\t// \u6dfb\u52a0\u7ba1\u7406\u63a5\u53e3 - \u67e5\u770bKey\u72b6\u6001\n\t\tif (url.pathname === '/api/keys/status') {\n\t\t\ttry {\n\t\t\t\tconst keysStatus = await keyManager.getAllKeysStatus();\n\t\t\t\treturn new Response(JSON.stringify({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata: keysStatus\n\t\t\t\t}), {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t...getCorsHeaders(request, env)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn createErrorResponse('Failed to get keys status', 500);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// \u4e3b\u8981\u7684\u804a\u5929API\u8def\u5f84\n\t\tif (url.pathname !== '/v1/chat/completions') {\n\t\t\treturn createErrorResponse('Not found', 404);\n\t\t}\n\n\t\ttry {\n\t\t\t// \u9009\u62e9API Key\n\t\t\tconst selectedKey = await keyManager.selectKey();\n\t\t\tif (!selectedKey) {\n\t\t\t\treturn createErrorResponse('No available API keys', 503);\n\t\t\t}\n\n\t\t\tconsole.log(`Using API key: ${selectedKey.name || selectedKey.id} (Priority: ${selectedKey.priority})`);\n\n\t\t\t// \u83b7\u53d6 OpenAI API \u7aef\u70b9\u548c\u6a21\u578b\n\t\t\tconst apiEndpoint = env.LLM_API_ENDPOINT || 'https://generativelanguage.googleapis.com/v1beta/openai/chat/completions';\n\t\t\tconst model = env.LLM_MODEL || 'gemini-2.0-flash';\n\n\t\t\t// \u89e3\u6790\u8bf7\u6c42\u4f53\n\t\t\tconst requestBody = await request.json();\n\t\t\t\n\t\t\t// \u9a8c\u8bc1\u8bf7\u6c42\u4f53\u683c\u5f0f\n\t\t\tif (!requestBody.messages || !Array.isArray(requestBody.messages)) {\n\t\t\t\treturn createErrorResponse('Invalid request format: \"messages\" is required and must be an array.', 400);\n\t\t\t}\n\n\t\t\t// \u53ef\u9009\uff1a\u6dfb\u52a0\u8bf7\u6c42\u9891\u7387\u9650\u5236\uff08\u6839\u636e IP\uff09\n\t\t\tconst clientIP = request.headers.get('CF-Connecting-IP') || request.headers.get('X-Forwarded-For');\n\t\t\tif (clientIP && !(await checkRateLimit(clientIP, env))) {\n\t\t\t\treturn createErrorResponse('Rate limit exceeded', 429);\n\t\t\t}\n\n\t\t\t// \u6784\u5efa\u53d1\u9001\u5230 OpenAI API \u7684\u8bf7\u6c42\u4f53\n\t\t\tconst body = {\n\t\t\t\tmodel: requestBody.model || model,\n\t\t\t\tmessages: requestBody.messages,\n\t\t\t\tstream: requestBody.stream || false,\n\t\t\t};\n\n\t\t\t// \u6dfb\u52a0\u53ef\u9009\u53c2\u6570\uff08\u5982\u679c\u8bf7\u6c42\u4e2d\u5b58\u5728\uff09\n\t\t\tif (requestBody.temperature !== undefined) body.temperature = requestBody.temperature;\n\t\t\tif (requestBody.max_tokens !== undefined) body.max_tokens = requestBody.max_tokens;\n\t\t\tif (requestBody.top_p !== undefined) body.top_p = requestBody.top_p;\n\t\t\tif (requestBody.frequency_penalty !== undefined) body.frequency_penalty = requestBody.frequency_penalty;\n\t\t\tif (requestBody.presence_penalty !== undefined) body.presence_penalty = requestBody.presence_penalty;\n\t\t\tif (requestBody.stop !== undefined) body.stop = requestBody.stop;\n\n\n\t\t\t// \u6784\u5efa\u53d1\u9001\u5230 OpenAI API \u7684\u8bf7\u6c42\n\t\t\tconst openaiRequest = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': `Bearer ${selectedKey.api_key}`,\n\t\t\t\t\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(body)\n\t\t\t};\n\n\t\t\t// \u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4\u7528\u4e8e\u8ba1\u7b97\u54cd\u5e94\u65f6\u95f4\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// \u8c03\u7528 OpenAI API\n\t\t\tconst openaiResponse = await fetch(apiEndpoint, openaiRequest);\n\t\t\t\n\t\t\t// \u8ba1\u7b97\u54cd\u5e94\u65f6\u95f4\n\t\t\tconst responseTime = Date.now() - startTime;\n\t\t\t\n\t\t\t// \u83b7\u53d6\u54cd\u5e94\u6570\u636e\n\t\t\tconst responseData = await openaiResponse.json();\n\n\t\t\t// \u68c0\u67e5 API \u54cd\u5e94\u72b6\u6001\n\t\t\tif (!openaiResponse.ok) {\n\t\t\t\tconsole.error('OpenAI API Error:', responseData);\n\t\t\t\t\n\t\t\t\t// \u8bb0\u5f55\u5931\u8d25\n\t\t\t\tawait keyManager.recordFailure(\n\t\t\t\t\tselectedKey.id, \n\t\t\t\t\topenaiResponse.status, \n\t\t\t\t\tresponseData.error?.message || 'API request failed'\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\treturn createErrorResponse(\n\t\t\t\t\tresponseData.error?.message || 'API request failed', \n\t\t\t\t\topenaiResponse.status\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// \u8bb0\u5f55\u6210\u529f\n\t\t\tawait keyManager.recordSuccess(selectedKey.id, responseTime);\n\n\t\t\t// \u8fd4\u56de\u6210\u529f\u54cd\u5e94\uff08\u4f7f\u7528\u52a8\u6001 CORS \u5934\uff09\n\t\t\treturn new Response(JSON.stringify(responseData), {\n\t\t\t\tstatus: 200,\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t...getCorsHeaders(request, env),\n\t\t\t\t\t'Cache-Control': 'no-cache'\n\t\t\t\t}\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Worker Error:', error);\n\t\t\treturn createErrorResponse('Internal server error', 500);\n\t\t}\n\t}\n};\n\n// API Token \u6821\u9a8c\u51fd\u6570\nfunction isValidApiToken(request, env) {\n\t// \u83b7\u53d6\u73af\u5883\u53d8\u91cf\u4e2d\u7684API Token\n\tconst expectedToken = env.MY_API_TOKEN;\n\t\n\tif (!expectedToken) {\n\t\tconsole.warn('MY_API_TOKEN not configured, denying all requests');\n\t\treturn false;\n\t}\n\t\n\t// \u83b7\u53d6\u8bf7\u6c42\u5934\u4e2d\u7684 Authorization\n\tconst authHeader = request.headers.get('Authorization');\n\t\n\tif (!authHeader) {\n\t\tconsole.warn('Missing Authorization header');\n\t\treturn false;\n\t}\n\t\n\t// \u68c0\u67e5\u662f\u5426\u4ee5 \"Bearer \" \u5f00\u5934\n\tif (!authHeader.startsWith('Bearer ')) {\n\t\tconsole.warn('Invalid Authorization header format');\n\t\treturn false;\n\t}\n\t\n\t// \u63d0\u53d6token\n\tconst token = authHeader.substring(7); // \u53bb\u6389 \"Bearer \" \u524d\u7f00\n\t\n\t// \u6bd4\u8f83token\n\tif (token !== expectedToken) {\n\t\tconsole.warn('Invalid API token');\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\n\n// \u57df\u540d\u767d\u540d\u5355\u68c0\u67e5\u51fd\u6570\nfunction isAllowedOrigin(request, env) {\n\t// \u4ece\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u5141\u8bb8\u7684\u57df\u540d\u5217\u8868\n\tconst allowedOrigins = env.ALLOWED_ORIGINS;\n\n\tconsole.log(allowedOrigins);\n\t\n\tif (!allowedOrigins) {\n\t  // \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u767d\u540d\u5355\uff0c\u9ed8\u8ba4\u62d2\u7edd\u6240\u6709\u8bf7\u6c42\n\t  console.warn('ALLOWED_ORIGINS not configured, denying all requests');\n\t  return false;\n\t}\n  \n\t// \u89e3\u6790\u5141\u8bb8\u7684\u57df\u540d\uff08\u652f\u6301\u591a\u4e2a\u57df\u540d\uff0c\u7528\u9017\u53f7\u5206\u9694\uff09\n\tconst allowedList = allowedOrigins.split(',').map(origin => origin.trim().toLowerCase());\n\t\n\t// \u83b7\u53d6\u8bf7\u6c42\u6765\u6e90\n\tconst origin = request.headers.get('Origin');\n\tconst referer = request.headers.get('Referer');\n\tconsole.log(origin);\n\tconsole.log(referer);\n\n\t// \u68c0\u67e5 Origin \u5934\uff08\u4f18\u5148\uff09\n\tif (origin) {\n\t  const originLower = origin.toLowerCase();\n\t  if (allowedList.includes(originLower)) {\n\t\treturn true;\n\t  }\n\t  \n\t  // \u68c0\u67e5\u662f\u5426\u5305\u542b\u901a\u914d\u7b26\u57df\u540d\n\t  for (const allowed of allowedList) {\n\t\tif (allowed.startsWith('*.')) {\n\t\t  const domain = allowed.substring(2);\n\t\t  if (originLower.endsWith('.' + domain) || originLower === domain) {\n\t\t\treturn true;\n\t\t  }\n\t\t}\n\t  }\n\t}\n\t\n\t// \u5982\u679c\u6ca1\u6709 Origin\uff0c\u68c0\u67e5 Referer\n\tif (referer) {\n\n\t  try {\n\t\tconst refererUrl = new URL(referer);\n\t\tconst refererOrigin = refererUrl.origin.toLowerCase();\n\t\t\n\t\tif (allowedList.includes(refererOrigin)) {\n\t\t  return true;\n\t\t}\n\t\t\n\t\t// \u68c0\u67e5\u901a\u914d\u7b26\u57df\u540d\n\t\tfor (const allowed of allowedList) {\n\t\t  if (allowed.startsWith('*.')) {\n\t\t\tconst domain = allowed.substring(2);\n\t\t\tif (refererOrigin.endsWith('.' + domain) || refererOrigin === `https://${domain}` || refererOrigin === `http://${domain}`) {\n\t\t\t  return true;\n\t\t\t}\n\t\t  }\n\t\t}\n\t  } catch (e) {\n\t\tconsole.error('Invalid referer URL:', referer);\n\t  }\n\t}\n\t\n\treturn false;\n  }\n  \n  // \u83b7\u53d6 CORS \u5934\u51fd\u6570\n  function getCorsHeaders(request, env) {\n\tconst origin = request.headers.get('Origin');\n\t\n\t// \u5982\u679c\u6765\u6e90\u5728\u767d\u540d\u5355\u4e2d\uff0c\u8fd4\u56de\u5177\u4f53\u7684 Origin\n\tif (origin && isAllowedOrigin(request, env)) {\n\t  return {\n\t\t'Access-Control-Allow-Origin': origin,\n\t\t'Access-Control-Allow-Methods': 'POST, OPTIONS',\n\t\t'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n\t\t'Access-Control-Allow-Credentials': 'true'\n\t  };\n\t}\n\t\n\t// \u5426\u5219\u8fd4\u56de\u9650\u5236\u6027\u7684\u5934\n\treturn {\n\t  'Access-Control-Allow-Origin': 'null',\n\t  'Access-Control-Allow-Methods': 'POST, OPTIONS',\n\t  'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n\t};\n  }\n  \n  // CORS \u5904\u7406\u51fd\u6570\uff08\u66f4\u65b0\u7248\uff09\n  function handleCors(request, env) {\n\treturn new Response(null, {\n\t  status: 200,\n\t  headers: {\n\t\t...getCorsHeaders(request, env),\n\t\t'Access-Control-Max-Age': '86400'\n\t  }\n\t});\n  }\n  \n  // \u9519\u8bef\u54cd\u5e94\u521b\u5efa\u51fd\u6570\uff08\u66f4\u65b0\u7248\uff09\n  function createErrorResponse(message, status = 400) {\n\treturn new Response(JSON.stringify({ \n\t  error: { \n\t\tmessage,\n\t\tstatus \n\t  } \n\t}), {\n\t  status,\n\t  headers: {\n\t\t'Content-Type': 'application/json',\n\t\t'Access-Control-Allow-Origin': 'null',\n\t\t'Access-Control-Allow-Methods': 'POST, OPTIONS',\n\t\t'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n\t  }\n\t});\n  }\n  \n  // \u7b80\u5355\u7684\u9891\u7387\u9650\u5236\u68c0\u67e5\uff08\u53ef\u9009\u529f\u80fd\uff09\n  async function checkRateLimit(clientIP, env) {\n\ttry {\n\t  // \u4f7f\u7528 Cloudflare KV \u5b58\u50a8\u8fdb\u884c\u9891\u7387\u9650\u5236\n\t  // \u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u6bcf\u5206\u949f\u6700\u591a 10 \u6b21\u8bf7\u6c42\n\t  const key = `rate_limit:${clientIP}`;\n\t  const current = await env.RATE_LIMIT?.get(key);\n\t  const now = Date.now();\n\t  const windowStart = Math.floor(now / 60000) * 60000; // 1\u5206\u949f\u7a97\u53e3\n\t  \n\t  if (current) {\n\t\tconst data = JSON.parse(current);\n\t\tif (data.windowStart === windowStart && data.count >= 10) {\n\t\t  return false; // \u8d85\u8fc7\u9650\u5236\n\t\t}\n\t\t\n\t\tif (data.windowStart === windowStart) {\n\t\t  await env.RATE_LIMIT?.put(key, JSON.stringify({\n\t\t\twindowStart,\n\t\t\tcount: data.count + 1\n\t\t  }), { expirationTtl: 120 });\n\t\t} else {\n\t\t  await env.RATE_LIMIT?.put(key, JSON.stringify({\n\t\t\twindowStart,\n\t\t\tcount: 1\n\t\t  }), { expirationTtl: 120 });\n\t\t}\n\t  } else {\n\t\tawait env.RATE_LIMIT?.put(key, JSON.stringify({\n\t\t  windowStart,\n\t\t  count: 1\n\t\t}), { expirationTtl: 120 });\n\t  }\n\t  \n\t  return true;\n\t} catch (error) {\n\t  console.error('Rate limit check failed:', error);\n\t  return true; // \u5982\u679c\u68c0\u67e5\u5931\u8d25\uff0c\u5141\u8bb8\u8bf7\u6c42\u901a\u8fc7\n\t}\n  }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="keyManager.js"',children:"/**\n * Gemini API Key\u7ba1\u7406\u5668\n * \u8d1f\u8d23API Key\u7684\u9009\u62e9\u3001\u72b6\u6001\u7ba1\u7406\u548c\u6570\u636e\u5e93\u64cd\u4f5c\n */\n\n// Key\u72b6\u6001\u5e38\u91cf\nexport const KEY_STATUS = {\n  ACTIVE: 1,        // \u6709\u6548\n  TEMP_DISABLED: 2, // \u6682\u65f6\u5931\u6548\n  DISABLED: 0       // \u5b8c\u5168\u5931\u6548\n};\n\n// \u914d\u7f6e\u5e38\u91cf\nconst CONFIG = {\n  MAX_CONSECUTIVE_FAILURES: 5,     // \u6700\u5927\u8fde\u7eed\u5931\u8d25\u6b21\u6570\n  TEMP_DISABLE_MINUTES: 30,        // \u6682\u65f6\u7981\u7528\u65f6\u95f4\uff08\u5206\u949f\uff09\n  FAILURE_PENALTY_WEIGHT: 10,      // \u5931\u8d25\u60e9\u7f5a\u6743\u91cd\n  MAX_TIME_WEIGHT: 24,              // \u6700\u5927\u65f6\u95f4\u6743\u91cd\uff08\u5c0f\u65f6\uff09\n  NEW_KEY_BONUS: 50                 // \u65b0Key\u989d\u5916\u6743\u91cd\n};\n\nexport class KeyManager {\n  constructor(db) {\n    this.db = db;\n  }\n\n  /**\n   * \u9009\u62e9\u6700\u9002\u5408\u7684API Key\n   * @returns {Promise<Object|null>} \u9009\u4e2d\u7684Key\u5bf9\u8c61\u6216null\n   */\n  async selectKey() {\n    try {\n      const availableKeys = await this.getAvailableKeys();\n      \n      if (availableKeys.length === 0) {\n        console.warn('No available API keys found');\n        return null;\n      }\n\n      if (availableKeys.length === 1) {\n        return availableKeys[0];\n      }\n\n      // \u4f7f\u7528\u52a0\u6743\u968f\u673a\u9009\u62e9\u7b97\u6cd5\n      return this.weightedRandomSelect(availableKeys);\n    } catch (error) {\n      console.error('Error selecting API key:', error);\n      return null;\n    }\n  }\n\n  /**\n   * \u83b7\u53d6\u6240\u6709\u53ef\u7528\u7684Key\n   * @returns {Promise<Array>} \u53ef\u7528\u7684Key\u5217\u8868\n   */\n  async getAvailableKeys() {\n    const now = new Date().toISOString();\n    \n    const query = `\n      SELECT * FROM api_keys \n      WHERE status = ? \n      AND (disabled_until IS NULL OR disabled_until < ?)\n      ORDER BY priority DESC, last_used_at ASC\n    `;\n    \n    const result = await this.db.prepare(query)\n      .bind(KEY_STATUS.ACTIVE, now)\n      .all();\n    \n    return result.results || [];\n  }\n\n  /**\n   * \u52a0\u6743\u968f\u673a\u9009\u62e9\u7b97\u6cd5\n   * @param {Array} keys \u53ef\u7528\u7684Key\u5217\u8868\n   * @returns {Object} \u9009\u4e2d\u7684Key\n   */\n  weightedRandomSelect(keys) {\n    const weights = keys.map(key => this.calculateWeight(key));\n    const totalWeight = weights.reduce((sum, weight) => sum + weight, 0);\n    \n    if (totalWeight === 0) {\n      // \u5982\u679c\u6240\u6709\u6743\u91cd\u90fd\u662f0\uff0c\u968f\u673a\u9009\u62e9\n      return keys[Math.floor(Math.random() * keys.length)];\n    }\n\n    let random = Math.random() * totalWeight;\n    \n    for (let i = 0; i < keys.length; i++) {\n      random -= weights[i];\n      if (random <= 0) {\n        return keys[i];\n      }\n    }\n    \n    // \u5907\u7528\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\n    return keys[keys.length - 1];\n  }\n\n  /**\n   * \u8ba1\u7b97Key\u7684\u6743\u91cd\n   * @param {Object} key Key\u5bf9\u8c61\n   * @returns {number} \u6743\u91cd\u503c\n   */\n  calculateWeight(key) {\n    let weight = key.priority || 100;\n\n    // \u5931\u8d25\u60e9\u7f5a\n    const failurePenalty = key.consecutive_failures * CONFIG.FAILURE_PENALTY_WEIGHT;\n    weight -= failurePenalty;\n\n    // \u65f6\u95f4\u52a0\u6743 - \u6700\u8fd1\u4f7f\u7528\u65f6\u95f4\u8d8a\u65e9\uff0c\u6743\u91cd\u7a0d\u5fae\u63d0\u9ad8\n    if (key.last_used_at) {\n      const hoursSinceLastUse = this.getHoursDifference(key.last_used_at, new Date());\n      const timeBonus = Math.min(hoursSinceLastUse, CONFIG.MAX_TIME_WEIGHT);\n      weight += timeBonus;\n    } else {\n      // \u65b0Key\u83b7\u5f97\u989d\u5916\u6743\u91cd\n      weight += CONFIG.NEW_KEY_BONUS;\n    }\n\n    // \u6743\u91cd\u4e0d\u80fd\u5c0f\u4e8e0\n    return Math.max(weight, 0);\n  }\n\n  /**\n   * \u8bb0\u5f55\u6210\u529f\u8c03\u7528\n   * @param {number} keyId Key ID\n   * @param {number} responseTime \u54cd\u5e94\u65f6\u95f4\uff08\u6beb\u79d2\uff09\n   */\n  async recordSuccess(keyId, responseTime = null) {\n    const now = new Date().toISOString();\n    \n    try {\n      // \u66f4\u65b0Key\u72b6\u6001\n      await this.db.prepare(`\n        UPDATE api_keys \n        SET \n          consecutive_failures = 0,\n          total_calls = total_calls + 1,\n          success_calls = success_calls + 1,\n          last_used_at = ?,\n          last_success_at = ?,\n          status = ?,\n          disabled_until = NULL,\n          updated_at = ?\n        WHERE id = ?\n      `).bind(now, now, KEY_STATUS.ACTIVE, now, keyId).run();\n\n      // \u8bb0\u5f55\u65e5\u5fd7\n      await this.db.prepare(`\n        INSERT INTO api_call_logs \n        (api_key_id, success, response_time_ms, called_at)\n        VALUES (?, ?, ?, ?)\n      `).bind(keyId, true, responseTime, now).run();\n\n      console.log(`API key ${keyId} success recorded`);\n    } catch (error) {\n      console.error('Error recording success:', error);\n    }\n  }\n\n  /**\n   * \u8bb0\u5f55\u5931\u8d25\u8c03\u7528\n   * @param {number} keyId Key ID\n   * @param {number} statusCode HTTP\u72b6\u6001\u7801\n   * @param {string} errorMessage \u9519\u8bef\u4fe1\u606f\n   */\n  async recordFailure(keyId, statusCode, errorMessage = null) {\n    const now = new Date().toISOString();\n    \n    try {\n      // \u83b7\u53d6\u5f53\u524dKey\u72b6\u6001\n      const keyResult = await this.db.prepare(\n        'SELECT consecutive_failures FROM api_keys WHERE id = ?'\n      ).bind(keyId).first();\n      \n      if (!keyResult) {\n        console.error(`API key ${keyId} not found`);\n        return;\n      }\n\n      const newFailureCount = keyResult.consecutive_failures + 1;\n      let newStatus = KEY_STATUS.ACTIVE;\n      let disabledUntil = null;\n\n      // \u6839\u636e\u5931\u8d25\u7c7b\u578b\u548c\u6b21\u6570\u51b3\u5b9a\u72b6\u6001\n      if (statusCode === 400) {\n        // 400\u9519\u8bef\u7acb\u5373\u8bbe\u4e3a\u5b8c\u5168\u5931\u6548\n        newStatus = KEY_STATUS.DISABLED;\n      } else if (newFailureCount >= CONFIG.MAX_CONSECUTIVE_FAILURES) {\n        // \u8fde\u7eed5\u6b21\u5931\u8d25\u8bbe\u4e3a\u5b8c\u5168\u5931\u6548\n        newStatus = KEY_STATUS.DISABLED;\n      } else if (newFailureCount >= 2) {\n        // \u8fde\u7eed2-4\u6b21\u5931\u8d25\u8bbe\u4e3a\u6682\u65f6\u5931\u6548\uff0c\u7981\u752830\u5206\u949f\n        newStatus = KEY_STATUS.TEMP_DISABLED;\n        disabledUntil = new Date(Date.now() + CONFIG.TEMP_DISABLE_MINUTES * 60 * 1000).toISOString();\n      }\n\n      // \u66f4\u65b0Key\u72b6\u6001\n      await this.db.prepare(`\n        UPDATE api_keys \n        SET \n          consecutive_failures = ?,\n          total_calls = total_calls + 1,\n          last_used_at = ?,\n          last_failure_at = ?,\n          status = ?,\n          disabled_until = ?,\n          updated_at = ?\n        WHERE id = ?\n      `).bind(newFailureCount, now, now, newStatus, disabledUntil, now, keyId).run();\n\n      // \u8bb0\u5f55\u65e5\u5fd7\n      await this.db.prepare(`\n        INSERT INTO api_call_logs \n        (api_key_id, success, response_status, error_message, called_at)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(keyId, false, statusCode, errorMessage, now).run();\n\n      console.log(`API key ${keyId} failure recorded: ${newFailureCount} consecutive failures, status: ${newStatus}`);\n    } catch (error) {\n      console.error('Error recording failure:', error);\n    }\n  }\n\n  /**\n   * \u83b7\u53d6Key\u7edf\u8ba1\u4fe1\u606f\n   * @param {number} keyId Key ID\n   * @returns {Promise<Object>} \u7edf\u8ba1\u4fe1\u606f\n   */\n  async getKeyStats(keyId) {\n    try {\n      const result = await this.db.prepare(\n        'SELECT * FROM api_keys WHERE id = ?'\n      ).bind(keyId).first();\n      \n      return result;\n    } catch (error) {\n      console.error('Error getting key stats:', error);\n      return null;\n    }\n  }\n\n  /**\n   * \u91cd\u7f6eKey\u72b6\u6001\n   * @param {number} keyId Key ID\n   */\n  async resetKeyStatus(keyId) {\n    const now = new Date().toISOString();\n    \n    try {\n      await this.db.prepare(`\n        UPDATE api_keys \n        SET \n          consecutive_failures = 0,\n          status = ?,\n          disabled_until = NULL,\n          updated_at = ?\n        WHERE id = ?\n      `).bind(KEY_STATUS.ACTIVE, now, keyId).run();\n\n      console.log(`API key ${keyId} status reset`);\n    } catch (error) {\n      console.error('Error resetting key status:', error);\n    }\n  }\n\n  /**\n   * \u6dfb\u52a0\u65b0\u7684API Key\n   * @param {string} apiKey API\u5bc6\u94a5\n   * @param {string} name \u5907\u6ce8\u540d\u79f0\n   * @param {number} priority \u4f18\u5148\u7ea7\n   */\n  async addKey(apiKey, name = null, priority = 100) {\n    const now = new Date().toISOString();\n    \n    try {\n      await this.db.prepare(`\n        INSERT INTO api_keys \n        (api_key, name, priority, created_at, updated_at)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(apiKey, name, priority, now, now).run();\n\n      console.log(`New API key added: ${name || apiKey.substring(0, 10)}...`);\n    } catch (error) {\n      console.error('Error adding API key:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * \u6279\u91cf\u4ece\u73af\u5883\u53d8\u91cf\u521d\u59cb\u5316Keys\n   * @param {string} keysString \u9017\u53f7\u5206\u9694\u7684Key\u5b57\u7b26\u4e32\n   */\n  async initializeKeysFromEnv(keysString) {\n    if (!keysString) return;\n    \n    const keys = keysString.split(',').map(key => key.trim()).filter(key => key);\n    \n    for (let i = 0; i < keys.length; i++) {\n      try {\n        // \u68c0\u67e5Key\u662f\u5426\u5df2\u5b58\u5728\n        const existing = await this.db.prepare(\n          'SELECT id FROM api_keys WHERE api_key = ?'\n        ).bind(keys[i]).first();\n        \n        if (!existing) {\n          await this.addKey(keys[i], `Auto-imported Key ${i + 1}`, 100 - i * 10);\n        }\n      } catch (error) {\n        console.error(`Error initializing key ${i + 1}:`, error);\n      }\n    }\n  }\n\n  /**\n   * \u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u4e4b\u95f4\u7684\u5c0f\u65f6\u5dee\n   * @param {string|Date} dateTime1 \n   * @param {string|Date} dateTime2 \n   * @returns {number} \u5c0f\u65f6\u5dee\n   */\n  getHoursDifference(dateTime1, dateTime2) {\n    const date1 = new Date(dateTime1);\n    const date2 = new Date(dateTime2);\n    const diffMs = Math.abs(date2 - date1);\n    return diffMs / (1000 * 60 * 60);\n  }\n\n  /**\n   * \u83b7\u53d6\u6240\u6709Key\u7684\u72b6\u6001\u6982\u89c8\n   * @returns {Promise<Array>} Key\u72b6\u6001\u5217\u8868\n   */\n  async getAllKeysStatus() {\n    try {\n      const result = await this.db.prepare(`\n        SELECT \n          id, name, status, consecutive_failures, \n          total_calls, success_calls, last_used_at,\n          ROUND(CAST(success_calls AS FLOAT) / NULLIF(total_calls, 0) * 100, 2) as success_rate\n        FROM api_keys \n        ORDER BY priority DESC, id ASC\n      `).all();\n      \n      return result.results || [];\n    } catch (error) {\n      console.error('Error getting all keys status:', error);\n      return [];\n    }\n  }\n} \n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u5982\u4f55\u4f7f\u7528worker",children:"\u5982\u4f55\u4f7f\u7528worker"}),"\n",(0,s.jsx)(n.h4,{id:"\u914d\u7f6e\u73af\u5883\u53d8\u91cf",children:"\u914d\u7f6e\u73af\u5883\u53d8\u91cf"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// \u5141\u8bb8\u7684\u57df\u540d\uff0c\u8fd9\u4e2a\u7684\u8fc7\u6ee4\u6211\u5728\u4e3b\u4ee3\u7801\u91cc\u6ce8\u6389\u4e86\nALLOWED_ORIGINS= \n// \u6709\u9ed8\u8ba4\u503c\uff0c\u5c31\u662fgemini\u7684\u7aef\u70b9\nLLM_API_ENDPOINT=\n// \u6a21\u578bid\uff0c\u9ed8\u8ba4gemini-2.0-flash\nLLM_MODEL=\n// \u6211\u4eec\u6536\u96c6\u7684key\uff0c\u9700\u8981\u662f\u4e0d\u540c\u9879\u76ee\nGEMINI_API_KEY=k1,k2,k3\n// \u6211\u4eec\u81ea\u5b9a\u4e49\u7684token,\u653e\u5728header\u91cc\u9762,openai\u7684\u89c4\u5219\nMY_API_TOKEN=\n"})}),"\n",(0,s.jsx)(n.h4,{id:"1-\u5185\u90e8\u4f7f\u7528",children:"1. \u5185\u90e8\u4f7f\u7528"}),"\n",(0,s.jsx)(n.p,{children:"page\u6216\u8005worker\u5185\u90e8\u8c03\u7528\uff0c\u9700\u8981\u7ed1\u5b9a\u7136\u540e\u7528\u73af\u5883\u53d8\u91cf\u8bf7\u6c42\uff0c\u6ca1\u8bd5\u8fc7"}),"\n",(0,s.jsx)(n.h4,{id:"2-\u5916\u90e8\u63a5\u53e3\u8c03\u7528",children:"2. \u5916\u90e8\u63a5\u53e3\u8c03\u7528"}),"\n",(0,s.jsx)(n.p,{children:"\u76f4\u63a5\u7528\u7ed1\u5b9a\u7684\u57df\u540d\u8bbf\u95ee\u5373\u53ef\uff0c\u548c\u8c03\u7528\u5176\u4ed6openai\u7c7b\u7684api\u4e00\u6837\uff0c\u524d\u7aef\u76f4\u63a5\u8c03\u7528\u7684\u8bdd\u6ce8\u610fMY_API_TOKEN\u4e0d\u8981\u6cc4\u9732"})]})}function y(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(u,{...t})}):u(t)}},28453:(t,n,e)=>{e.d(n,{R:()=>i,x:()=>o});var r=e(96540);const s={},a=r.createContext(s);function i(t){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),r.createElement(a.Provider,{value:n},t.children)}}}]);