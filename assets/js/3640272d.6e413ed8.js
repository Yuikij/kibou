"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[807],{16849:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u7ebf\u7a0b\u6c60","title":"\u7ebf\u7a0b\u6c60","description":"Todo","source":"@site/docs/basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u7ebf\u7a0b\u6c60.mdx","sourceDirName":"basicKnowledge/programmingLanguage/Java/\u5e76\u53d1","slug":"/basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u7ebf\u7a0b\u6c60","permalink":"/kibou/docs/basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u7ebf\u7a0b\u6c60","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"programmingLanguage","previous":{"title":"ReentrantLock","permalink":"/kibou/docs/basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u9501/ReentrantLock"},"next":{"title":"\u5e76\u53d1\u7f16\u7a0b\u5bb9\u5668\u548c\u5de5\u5177","permalink":"/kibou/docs/basicKnowledge/programmingLanguage/Java/\u5e76\u53d1/\u5e76\u53d1\u7f16\u7a0b\u5bb9\u5668\u548c\u5de5\u5177"}}');var i=r(74848),t=r(28453);const o={sidebar_position:3},s=void 0,a={},c=[{value:"Todo",id:"todo",level:2},{value:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u7a0b\u6c60",id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u7a0b\u6c60",level:2},{value:"\u5982\u4f55\u521b\u5efa\u7ebf\u7a0b\u6c60",id:"\u5982\u4f55\u521b\u5efa\u7ebf\u7a0b\u6c60",level:2},{value:"\u6d41\u7a0b",id:"\u6d41\u7a0b",level:2},{value:"\u90e8\u5206\u6e90\u7801",id:"\u90e8\u5206\u6e90\u7801",level:2},{value:"ThreadPoolExecutor",id:"threadpoolexecutor",level:3},{value:"\u72b6\u6001",id:"\u72b6\u6001",level:2},{value:"\u53c2\u6570",id:"\u53c2\u6570",level:2},{value:"corePoolSize",id:"corepoolsize",level:3},{value:"maximumPoolSize",id:"maximumpoolsize",level:3},{value:"keepAliveTime",id:"keepalivetime",level:3},{value:"unit:",id:"unit",level:3},{value:"workQueue\uff08BlockingQueue\uff09\uff1a",id:"workqueueblockingqueue",level:3},{value:"threadFactory",id:"threadfactory",level:3},{value:"handler",id:"handler",level:3},{value:"Callable\u4e0eFuture",id:"callable\u4e0efuture",level:2},{value:"Callable",id:"callable",level:3},{value:"Future",id:"future",level:3},{value:"FutureTask",id:"futuretask",level:4},{value:"CompletableFuture",id:"completablefuture",level:3},{value:"\u51e0\u79cdExecutor",id:"\u51e0\u79cdexecutor",level:2},{value:"ForkJoinPool",id:"forkjoinpool",level:3},{value:"ScheduledThreadPoolExecutor",id:"scheduledthreadpoolexecutor",level:3},{value:"Executors\u5927\u5bb6\u5ead",id:"executors\u5927\u5bb6\u5ead",level:3},{value:"FixedThreadPool",id:"fixedthreadpool",level:4},{value:"SingleThreadScheduled",id:"singlethreadscheduled",level:4},{value:"CachedThreadPool",id:"cachedthreadpool",level:4}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",input:"input",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"todo",children:"Todo"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u7ebf\u7a0b\u6c60\u7684\u521b\u5efa\u65b9\u6cd5"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","SynchronousQueue\u7684\u5e94\u7528,SynchronousQueue\u7684\u60c5\u51b5\u4e0b,\u7ebf\u7a0b\u6c60\u5728\u4ec0\u4e48\u65f6\u673a\u89e6\u53d1\u62d2\u7edd\u7b56\u7565"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u7a0b\u6c60",children:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u7a0b\u6c60"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5c06\u6267\u884c\u673a\u5236\u548c\u5de5\u4f5c\u5355\u5143\u5206\u79bb"}),"\n",(0,i.jsx)(n.li,{children:"\u51cf\u5c11\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f00\u9500"}),"\n",(0,i.jsx)(n.li,{children:"\u53ef\u63a7\u6027\u5f3a\uff0c\u53ef\u5bf9\u7ebf\u7a0b\u6c60\u8fdb\u884c\u914d\u7f6e\uff0c\u76d1\u63a7"}),"\n",(0,i.jsx)(n.li,{children:"\u53ef\u6269\u5c55\u6027\u5f3a\uff0c\u5982\u4f18\u5148\u7ea7\uff0c\u53ef\u5ef6\u8fdf\uff0c\u5b9a\u65f6\u7ebf\u7a0b\u6c60"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5982\u4f55\u521b\u5efa\u7ebf\u7a0b\u6c60",children:"\u5982\u4f55\u521b\u5efa\u7ebf\u7a0b\u6c60"}),"\n",(0,i.jsx)(n.h2,{id:"\u6d41\u7a0b",children:"\u6d41\u7a0b"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"\u5c55\u5f00"}),(0,i.jsx)(n.mermaid,{value:"graph TD\n  Submit[\u63d0\u4ea4\u4efb\u52a1] \n  CorePoolSize[\u5224\u65ad\u6838\u5fc3\u7ebf\u7a0b\u6570] \n  Create[\u521b\u5efa\u7ebf\u7a0b] \n  Add[\u5c06\u4efb\u52a1\u5b58\u50a8\u5230\u961f\u5217] \n  WorkQueue[\u5224\u65ad\u963b\u585e\u961f\u5217\u5269\u4f59\u5bb9\u91cf]  \n  MaximumPoolSize[\u5224\u65ad\u6700\u5927\u7ebf\u7a0b\u6570] \n  Handler[\u62d2\u7edd\u7b56\u7565] \n  \n  Submit --\x3e  CorePoolSize\n  CorePoolSize --\x3e |\u6ee1\u4e86|WorkQueue\n  CorePoolSize --\x3e |\u6ca1\u6ee1|Create\n  WorkQueue --\x3e |\u65e0\u754c\u6216\u8005\u6ca1\u6ee1|Add\n  WorkQueue --\x3e |\u6ee1\u4e86|MaximumPoolSize\n  MaximumPoolSize --\x3e |\u6ee1\u4e86|Handler\n  MaximumPoolSize --\x3e |\u6ca1\u6ee1|Create\n\n"})]}),"\n",(0,i.jsx)(n.h2,{id:"\u90e8\u5206\u6e90\u7801",children:"\u90e8\u5206\u6e90\u7801"}),"\n",(0,i.jsx)(n.h3,{id:"threadpoolexecutor",children:"ThreadPoolExecutor"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"\u5c55\u5f00"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="execute"',children:"    public void execute(Runnable command) {\n        if (command == null)\n            throw new NullPointerException();\n        /*\n         * Proceed in 3 steps:\n         *\n         * 1. If fewer than corePoolSize threads are running, try to\n         * start a new thread with the given command as its first\n         * task.  The call to addWorker atomically checks runState and\n         * workerCount, and so prevents false alarms that would add\n         * threads when it shouldn't, by returning false.\n         *\n         * 2. If a task can be successfully queued, then we still need\n         * to double-check whether we should have added a thread\n         * (because existing ones died since last checking) or that\n         * the pool shut down since entry into this method. So we\n         * recheck state and if necessary roll back the enqueuing if\n         * stopped, or start a new thread if there are none.\n         *\n         * 3. If we cannot queue task, then we try to add a new\n         * thread.  If it fails, we know we are shut down or saturated\n         * and so reject the task.\n         */\n        int c = ctl.get();\n        // \u5c0f\u4e8e\u6838\u5fc3\u7ebf\u7a0b\uff0c\u5c1d\u8bd5\u6dfb\u52a0\u7ebf\u7a0b\n        if (workerCountOf(c) < corePoolSize) {\n            if (addWorker(command, true))\n                return;\n            c = ctl.get();\n        }\n        // offer \u4e0d\u963b\u585e\u7684\u90a3\u4e2a\uff0c\u5c1d\u8bd5\u52a0\u5165\u961f\u5217\n        if (isRunning(c) && workQueue.offer(command)) {\n            int recheck = ctl.get();\n            // double-check \u5982\u679c\u7ebf\u7a0b\u6c60\u505c\u4e86\uff0c\u79fb\u9664\uff0c\u5e76\u62d2\u7edd\n            if (! isRunning(recheck) && remove(command))\n                reject(command);\n            else if (workerCountOf(recheck) == 0)\n                addWorker(null, false);\n        }\n        // \u65e0\u6cd5\u6392\u961f\uff0ccheck\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u5f00\u65b0\u7ebf\u7a0b\n        else if (!addWorker(command, false))\n            reject(command);\n    }\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="addWorker"',children:"    /**\n     * \u5c1d\u8bd5\u521b\u5efa\u65b0\u7ebf\u7a0b\n     *   \n     * \n     * Checks if a new worker can be added with respect to current\n     * pool state and the given bound (either core or maximum). If so,\n     * the worker count is adjusted accordingly, and, if possible, a\n     * new worker is created and started, running firstTask as its\n     * first task. This method returns false if the pool is stopped or\n     * eligible to shut down. It also returns false if the thread\n     * factory fails to create a thread when asked.  If the thread\n     * creation fails, either due to the thread factory returning\n     * null, or due to an exception (typically OutOfMemoryError in\n     * Thread.start()), we roll back cleanly.\n     *\n     * @param firstTask the task the new thread should run first (or\n     * null if none). Workers are created with an initial first task\n     * (in method execute()) to bypass queuing when there are fewer\n     * than corePoolSize threads (in which case we always start one),\n     * or when the queue is full (in which case we must bypass queue).\n     * Initially idle threads are usually created via\n     * prestartCoreThread or to replace other dying workers.\n     *\n     * @param core if true use corePoolSize as bound, else\n     * maximumPoolSize. (A boolean indicator is used here rather than a\n     * value to ensure reads of fresh values after checking other pool\n     * state).\n     * @return true if successful\n     */\n    private boolean addWorker(Runnable firstTask, boolean core) {\n        retry:\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);\n\n            // Check if queue empty only if necessary.\n            if (rs >= SHUTDOWN &&\n                ! (rs == SHUTDOWN &&\n                   firstTask == null &&\n                   ! workQueue.isEmpty()))\n                return false;\n\n            for (;;) {\n                int wc = workerCountOf(c);\n                // \u6570\u91cf\u8fbe\u5230\u4e0a\u9650\n                if (wc >= CAPACITY ||\n                    wc >= (core ? corePoolSize : maximumPoolSize))\n                    return false;\n                // cas\u589e\u52a0\u7ebf\u7a0b\u6570   \u6210\u529f\u5c31\u8df3\u51fa\u5faa\u73af             \n                if (compareAndIncrementWorkerCount(c))\n                    break retry;\n                c = ctl.get();  // Re-read ctl\n                // \u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u91cd\u65b0\u5faa\u73af\n                if (runStateOf(c) != rs)\n                    continue retry;\n                // else CAS failed due to workerCount change; retry inner loop\n            }\n        }\n        // \u6210\u529f+1\u4e4b\u540e\n        boolean workerStarted = false;\n        boolean workerAdded = false;\n        Worker w = null;\n        try {\n            w = new Worker(firstTask);\n            final Thread t = w.thread;\n            if (t != null) {\n                final ReentrantLock mainLock = this.mainLock;\n                mainLock.lock();\n                // \u5c1d\u8bd5\u52a0\u5165\u5230workers\n                try {\n                    // Recheck while holding lock.\n                    // Back out on ThreadFactory failure or if\n                    // shut down before lock acquired.\n                    int rs = runStateOf(ctl.get());\n\n                    if (rs < SHUTDOWN ||\n                        (rs == SHUTDOWN && firstTask == null)) {\n                        if (t.isAlive()) // precheck that t is startable\n                            throw new IllegalThreadStateException();\n                        workers.add(w);\n                        int s = workers.size();\n                        if (s > largestPoolSize)\n                            largestPoolSize = s;\n                        workerAdded = true;\n                    }\n                } finally {\n                    mainLock.unlock();\n                }\n                // \u7ebf\u7a0b\u542f\u52a8\n                if (workerAdded) {\n                    t.start();\n                    workerStarted = true;\n                }\n            }\n        } finally {\n            if (! workerStarted)\n                addWorkerFailed(w);\n        }\n        return workerStarted;\n    }\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="runWorker \u4efb\u52a1\u7684run\u7684\u59d4\u6258\u65b9\u6cd5"',children:"    final void runWorker(Worker w) {\n        Thread wt = Thread.currentThread();\n        Runnable task = w.firstTask;\n        w.firstTask = null;\n        w.unlock(); // allow interrupts\n        boolean completedAbruptly = true;\n        try {\n            // getTask \u5f88\u91cd\u8981\uff0c\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u6570\u5927\u4e8e\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u5c31\u8fd4\u56denull\uff0c\u5c31\u9500\u6bc1\u4e86\u8be5\u7ebf\u7a0b\uff0c\u6267\u884c\u5b8c\u6210\u4e86\n            // \u5f53\u524d\u7ebf\u7a0b\u6570\u5c0f\u4e8e\u6838\u5fc3\u7ebf\u7a0b\u6570\u7684\u8bdd\uff0c\u5c31\u4e00\u76f4\u5faa\u73af\uff0c\u6267\u884c\u4e24\u4e2a\u94a9\u5b50\u51fd\u6570\n            while (task != null || (task = getTask()) != null) {\n                w.lock();\n                // If pool is stopping, ensure thread is interrupted;\n                // if not, ensure thread is not interrupted.  This\n                // requires a recheck in second case to deal with\n                // shutdownNow race while clearing interrupt\n                if ((runStateAtLeast(ctl.get(), STOP) ||\n                     (Thread.interrupted() &&\n                      runStateAtLeast(ctl.get(), STOP))) &&\n                    !wt.isInterrupted())\n                    wt.interrupt();\n                try {\n                    beforeExecute(wt, task);                   \n                    Throwable thrown = null;\n                    try {\n                        task.run();\n                    } catch (RuntimeException x) {\n                        thrown = x; throw x;\n                    } catch (Error x) {\n                        thrown = x; throw x;\n                    } catch (Throwable x) {\n                        thrown = x; throw new Error(x);\n                    } finally {\n                        afterExecute(task, thrown);\n                    }\n                } finally {\n                    task = null;\n                    w.completedTasks++;\n                    w.unlock();\n                }\n            }\n            completedAbruptly = false;\n        } finally {\n            processWorkerExit(w, completedAbruptly);\n        }\n    }\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="getTask"',children:"    /**\n     * Performs blocking or timed wait for a task, depending on\n     * current configuration settings, or returns null if this worker\n     * must exit because of any of:\n     * 1. There are more than maximumPoolSize workers (due to\n     *    a call to setMaximumPoolSize).\n     * 2. The pool is stopped.\n     * 3. The pool is shutdown and the queue is empty.\n     * 4. This worker timed out waiting for a task, and timed-out\n     *    workers are subject to termination (that is,\n     *    {@code allowCoreThreadTimeOut || workerCount > corePoolSize})\n     *    both before and after the timed wait, and if the queue is\n     *    non-empty, this worker is not the last thread in the pool.\n     *\n     * @return task, or null if the worker must exit, in which case\n     *         workerCount is decremented\n     */\n    private Runnable getTask() {\n        boolean timedOut = false; // Did the last poll() time out?\n\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);\n\n            // Check if queue empty only if necessary.\n            if (rs >= SHUTDOWN && (rs >= STOP || workQueue.isEmpty())) {\n                decrementWorkerCount();\n                return null;\n            }\n\n            int wc = workerCountOf(c);\n\n            // Are workers subject to culling?\n            // allowCoreThreadTimeOut\uff0c\u4e00\u822c\u90fd\u662ffalse\uff0c\u9664\u975e\u65b9\u6cd5\u6539\u8fc7\n            boolean timed = allowCoreThreadTimeOut || wc > corePoolSize;\n\n            // \u7a7a\u95f2\uff0c\u5e76\u4e14\u4e0a\u6b21\u5728\u961f\u5217\u91cc\u6ca1\u62ff\u5230worker\uff0c\u6dd8\u6c70\n            if ((wc > maximumPoolSize || (timed && timedOut))\n                && (wc > 1 || workQueue.isEmpty())) {\n                if (compareAndDecrementWorkerCount(c))\n                    return null;\n                continue;\n            }\n            // \u5f00\u59cb\u4ece\u961f\u5217\u91cc\u53d6\u4efb\u52a1\u4e86\n            try {\n                Runnable r = timed ?\n                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :\n                    workQueue.take();\n                if (r != null)\n                    return r;\n                timedOut = true;\n            } catch (InterruptedException retry) {\n                timedOut = false;\n            }\n        }\n    }\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"\u72b6\u6001",children:"\u72b6\u6001"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"\u5c55\u5f00"}),(0,i.jsx)(n.mermaid,{value:'graph TD\n  RUNNING\n  SHUTDOWN\n  STOP\n  TIDYING\n  TERMINATED\n\n  RUNNING --\x3e  SHUTDOWN\n  SHUTDOWN --\x3e |"\u8c03\u7528shutdown()\uff0c\u4e0d\u518d\u63a5\u6536\u65b0\u4efb\u52a1\uff0c\u5904\u7406\u5269\u4f59\u4efb\u52a1"|TIDYING\n  RUNNING --\x3e |"shutdownNow()\uff0c\u4e0d\u518d\u63a5\u6536\u65b0\u4efb\u52a1\uff0c\u4e2d\u65ad\u5269\u4f59\u4efb\u52a1"|STOP\n  STOP --\x3e |"\u5269\u4f59\u4efb\u52a1\u5df2\u7ecf\u7ec8\u6b62\uff0c\u51c6\u5907\u8c03\u7528terminated()\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u81ea\u5df1\u53bb\u91cd\u5199"|TIDYING\n  TIDYING --\x3e |"\u8c03\u7528\u5b8c\u94a9\u5b50\u51fd\u6570terminated()"|TERMINATED\n'})]}),"\n",(0,i.jsx)(n.h2,{id:"\u53c2\u6570",children:"\u53c2\u6570"}),"\n",(0,i.jsx)(n.h3,{id:"corepoolsize",children:"corePoolSize"}),"\n",(0,i.jsx)(n.p,{children:"\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u59cb\u7ec8\u7ef4\u62a4\u7684\uff0c\u5b58\u6d3b\u7684\u7ebf\u7a0b\u6570\uff0c\u6838\u5fc3\u7ebf\u7a0b\u6570,\u6838\u5fc3\u7ebf\u7a0b\u4e00\u65e6\u521b\u5efa\u5c31\u4e0d\u9500\u6bc1\n\u5b58\u6d3b\u662f\u6307\u4e0d\u65ad\u8c03\u7528\u963b\u585e\u961f\u5217\u7684take\u65b9\u6cd5\uff0c\u5982\u679c\u961f\u5217\u91cc\u4e5f\u6ca1\u6709\u503c\u5c31\u4f1a\u963b\u585e"}),"\n",(0,i.jsx)(n.h3,{id:"maximumpoolsize",children:"maximumPoolSize"}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u5728corePooSize\u5df2\u6ee1\u3001\u961f\u5217\u4e5f\u6ee1\u7684\u60c5\u51b5\u4e0b\uff0c\u6269\u5145\u7ebf\u7a0b\u81f3\u6b64\u503c\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"keepalivetime",children:"keepAliveTime"}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u5927\u7ebf\u7a0b\u6570\u53ef\u4ee5\u5b58\u6d3b\u7684\u65f6\u95f4\uff0c\u5f53\u7ebf\u7a0b\u4e2d\u6ca1\u6709\u4efb\u52a1\u6267\u884c\u65f6\uff0c\u6700\u5927\u7ebf\u7a0b\u5c31\u4f1a\u9500\u6bc1\u4e00\u90e8\u5206\uff0c\u6700\u7ec8\u4fdd\u6301\u6838\u5fc3\u7ebf\u7a0b\u6570\u91cf\u7684\u7ebf\u7a0b\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"unit",children:"unit:"}),"\n",(0,i.jsx)(n.p,{children:"\u5355\u4f4d"}),"\n",(0,i.jsx)(n.h3,{id:"workqueueblockingqueue",children:"workQueue\uff08BlockingQueue\uff09\uff1a"}),"\n",(0,i.jsx)(n.p,{children:"\u963b\u585e\u961f\u5217\uff0c\u5f53\u65b0\u4efb\u52a1\u6765\u7684\u65f6\u5019\u4f1a\u5148\u5224\u65ad\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8fbe\u5230\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u5982\u679c\u8fbe\u5230\u7684\u8bdd\uff0c\u4efb\u52a1\u5c31\u4f1a\u88ab\u5b58\u653e\u5728\u961f\u5217\u4e2d\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"BlockingQueue"}),"\uff1a","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"put\u548ctake\uff1a\u963b\u585e\u5f0f\u7684"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ArrayBlockingQueue"})," \uff1a\u662f\u4e00\u4e2a\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\u73af\u5f62\u961f\u5217\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u4f1a\u8981\u6c42\u4f20\u5165\u6570\u7ec4\u7684\u5bb9\u91cf"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LinkedBlockingQueue"}),"\uff1a\u662f\u4e00\u79cd\u57fa\u4e8e\u5355\u5411\u94fe\u8868\u7684\u963b\u585e\u961f\u5217\u3002","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u53ef\u4ee5\u65e0\u754c"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PriorityQueue"}),"\uff1a\u662f\u6309\u7167\u5143\u7d20\u7684\u4f18\u5148\u7ea7\u4ece\u5c0f\u5230\u5927\u51fa\u961f\u5217\u7684\u4e8c\u53c9\u5806\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cPriorityQueue\u4e2d\u76842\u4e2a\u5143\u7d20\u4e4b\u95f4\u9700\u8981\u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f\uff0c\u5e76\u5b9e\u73b0Comparable\u63a5\u53e3\uff08\u5728\u6784\u9020\u65b9\u6cd5\u4f20\u6bd4\u8f83\u5668\uff09\uff0c\u5f53\u5143\u7d20\u4e2a\u6570\u8d85\u51fa\u6570\u7ec4\u957f\u5ea6\u65f6\uff0c\u6267\u884c\u6269\u5bb9\u64cd\u4f5c\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DelayQueue"}),"\uff1a\u5373\u5ef6\u8fdf\u961f\u5217\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6309\u5ef6\u8fdf\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u51fa\u961f\u7684PriorityQueue\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SynchronousQueue"}),"\uff1a\u4e00\u4e2a\u4e0d\u5b58\u50a8\u5143\u7d20\u7684\u963b\u585e\u961f\u5217","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u76f8\u5f53\u4e8e\u628a\u5143\u7d20\u5148\u5b58\u5728TransferQueue\u6216\u8005TransferStack"}),"\n",(0,i.jsx)(n.li,{children:"put\u548ctake\uff1a\u4f1a\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\uff0c\u77e5\u9053\u6709\u5bf9\u5e94\u7684\u5b58\u6216\u53d6\u64cd\u4f5c"}),"\n",(0,i.jsxs)(n.li,{children:["offer\u548cpoll\uff1a\u5982\u679c\u6709\u5bf9\u5e94\u7684\u5b58\u53d6\u64cd\u4f5c\u5728\u7b49\u5f85\uff0c\u5219\u6d88\u8d39\u5b8c\u8fd4\u56detrue\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u76f4\u63a5\u8fd4\u56defalse","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4ec5\u4f7f\u7528\u65e0\u6cd5\u963b\u585e\u7684offer\u548cpoll\uff0c\u662f\u65e0\u6548\u7684\uff0c\u90fd\u4f1a\u5931\u8d25"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"\u76f4\u63a5\u8f6c\u53d1\u7ed9maxPoolSize\u7b56\u7565"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LinkedTransferQueue"}),"\uff1a\u4e00\u4e2a\u7531\u94fe\u8868\u7ed3\u6784\u7ec4\u6210\u7684\u65e0\u754c\u963b\u585e\u961f\u5217\u3002\u4e0eSynchronousQueue\u7c7b\u4f3c\uff0c\u8fd8\u542b\u6709\u975e\u963b\u585e\u65b9\u6cd5\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LinkedBlockingDeque"}),"\uff1a\u4e00\u4e2a\u7531\u94fe\u8868\u7ed3\u6784\u7ec4\u6210\u7684\u53cc\u5411\u963b\u585e\u961f\u5217\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"threadfactory",children:"threadFactory"}),"\n",(0,i.jsx)(n.p,{children:"\u7ebf\u7a0b\u5de5\u5382\uff0c\u4e3b\u8981\u7528\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u9ed8\u8ba4\u4e3a\u6b63\u5e38\u4f18\u5148\u7ea7\u3001\u975e\u5b88\u62a4\u7ebf\u7a0b\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"handler",children:"handler"}),"\n",(0,i.jsx)(n.p,{children:"\u7ebf\u7a0b\u6c60\u4efb\u52a1\u961f\u5217\u8d85\u8fc7 maxinumPoolSize \u4e4b\u540e\u7684\u62d2\u7edd\u7b56\u7565"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AbortPolicy\uff1a\u62d2\u7edd\u5e76\u629b\u51fa\u5f02\u5e38\u3002"}),"\n",(0,i.jsx)(n.li,{children:"CallerRunsPolicy\uff1a\u4f7f\u7528\u5f53\u524d\u8c03\u7528\u7684\u7ebf\u7a0b\u6765\u6267\u884c\u6b64\u4efb\u52a1\u3002"}),"\n",(0,i.jsx)(n.li,{children:"DiscardOldestPolicy\uff1a\u629b\u5f03\u961f\u5217\u5934\u90e8\uff08\u6700\u65e7\uff09\u7684\u4e00\u4e2a\u4efb\u52a1\uff0c\u5e76\u6267\u884c\u5f53\u524d\u4efb\u52a1\u3002"}),"\n",(0,i.jsx)(n.li,{children:"DiscardPolicy\uff1a\u5ffd\u7565\u5e76\u629b\u5f03\u5f53\u524d\u4efb\u52a1\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"callable\u4e0efuture",children:"Callable\u4e0eFuture"}),"\n",(0,i.jsx)(n.h3,{id:"callable",children:"Callable"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@FunctionalInterface\npublic interface Callable<V> {\n    /**\n     * Computes a result, or throws an exception if unable to do so.\n     *\n     * @return computed result\n     * @throws Exception if unable to compute a result\n     */\n    V call() throws Exception;\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u6709\u8fd4\u56de\u503c\u7684Runnable\uff0c\u672c\u8eab\u662f\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u51fd\u6570\u5f0f\u63a5\u53e3"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"future",children:"Future"}),"\n",(0,i.jsx)(n.h4,{id:"futuretask",children:"FutureTask"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"implements RunnableFuture<V>\ninterface RunnableFuture<V> extends Runnable, Future<V>"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FutureTask \u63a5\u6536\u4e00\u4e2aCallable\uff0c\u5e76\u4e14\u5728run\u7684\u65f6\u5019\u8c03\u7528call\uff0c\u63a5\u6536\u8fd4\u56de\u503c\u3002\u7528get\u53bb\u62ff\u8fd4\u56de\u503c"}),"\n",(0,i.jsx)(n.li,{children:"FutureTask\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\u7ed9Thread"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"completablefuture",children:"CompletableFuture"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"implements Future<T>, CompletionStage<T>"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5904\u7406\u5f02\u6b65\u4efb\u52a1\u7684\u7ed3\u679c,\u591a\u4efb\u52a1"}),"\n",(0,i.jsxs)(n.li,{children:["\u5404\u79cd\u65b9\u6cd5","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"supplyAsync: \u5f02\u6b65\u7acb\u523b\u6267\u884c"}),"\n",(0,i.jsx)(n.li,{children:"completedFuture: \u4e0d\u6267\u884c\u4efb\u52a1\uff0c\u76f4\u63a5\u8fd4\u56de T"}),"\n",(0,i.jsx)(n.li,{children:"thenApplyAsync: \u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u5f02\u6b65\u5904\u7406\u4e0a\u4e2a\u4efb\u52a1\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c"}),"\n",(0,i.jsx)(n.li,{children:"thenApply: \u540c\u6b65"}),"\n",(0,i.jsxs)(n.li,{children:["henAccept: \u6267\u884c\u5b8c\u6210\u540e\uff0c\u63a5\u6536\u8fd4\u56de\u7ed3\u679c\uff0c\u4e0d\u8fd4\u56de","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4e0a\u4e2a\u4efb\u52a1\u629b\u51fa\u5f02\u5e38\u5c31\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2athen*"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"get:\u3000\u963b\u585e\u83b7\u53d6\u5f02\u6b65\u7ed3\u679c"}),"\n",(0,i.jsx)(n.li,{children:"complete(T):  \u4e3b\u52a8\u5b8c\u6210"}),"\n",(0,i.jsx)(n.li,{children:"completeExceptionally: \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38"}),"\n",(0,i.jsx)(n.li,{children:"exceptionally((ex) -> ()): thenApplyAsync\u7b49\u5982\u679c\u5f02\u5e38\u4e86\u4f1a\u8fdb\u5165"}),"\n",(0,i.jsx)(n.li,{children:"handle((result, fail) -> ()): \u90fd\u4f1a\u8fdb\u5165"}),"\n",(0,i.jsx)(n.li,{children:"thenComplete: \u6ca1\u6709\u8fd4\u56de\u503c"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u51e0\u79cdexecutor",children:"\u51e0\u79cdExecutor"}),"\n",(0,i.jsx)(n.h3,{id:"forkjoinpool",children:"ForkJoinPool"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="\u4f8b\u5b50"',children:'import java.util.concurrent.ForkJoinPool;\nimport java.util.concurrent.RecursiveTask;\n\npublic class FibonacciCalculator extends RecursiveTask<Integer> {\n    private final int n;\n\n    public FibonacciCalculator(int n) {\n        this.n = n;\n    }\n\n    @Override\n    protected Integer compute() {\n        // \u7ec8\u6b62\u6761\u4ef6\n        if (n <= 1) {\n            return n;\n        } else {\n            FibonacciCalculator fib1 = new FibonacciCalculator(n - 1);\n            fib1.fork(); // \u5728\u65b0\u7684\u7ebf\u7a0b\u4e2d\u5f02\u6b65\u6267\u884c fib(n-1)\n\n            FibonacciCalculator fib2 = new FibonacciCalculator(n - 2);\n            // \u5408\u5e76\u4efb\u52a1\uff0c\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u8ba1\u7b97 fib(n-2)\uff0c\u7136\u540e\u7b49\u5f85 fib(n-1) \u5b8c\u6210\u5e76\u83b7\u53d6\u5176\u7ed3\u679c\n            return fib2.compute() + fib1.join(); \n        }\n    }\n\n    public static void main(String[] args) {\n        int n = 10;\n        ForkJoinPool forkJoinPool = ForkJoinPool.commonPool();\n        FibonacciCalculator calculator = new FibonacciCalculator(n);\n        int result = forkJoinPool.invoke(calculator);\n        System.out.println("The " + n + "th Fibonacci number is: " + result);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"scheduledthreadpoolexecutor",children:"ScheduledThreadPoolExecutor"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u7528\u4e86DelayedWorkQueue \u5ef6\u8fdf\u961f\u5217"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5ef6\u8fdf\u961f\u5217\u65e0\u754c\uff0cmaximumPoolSize\u6ca1\u7528\u5230"}),"\n",(0,i.jsx)(n.li,{children:"DelayedWorkQueue take\u7684\u65f6\u5019\u4f1a\u8c03\u7528Condition.await\uff0c\u7b49\u5f85\u5ef6\u8fdf\u65f6\u95f4"}),"\n",(0,i.jsxs)(n.li,{children:["\u65b9\u6cd5\uff1a","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"schedule"}),"\n",(0,i.jsxs)(n.li,{children:["scheduleAtFixedRate(Runnable command, long initialDelay,long period,TimeUnit unit)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4e0d\u8003\u8651\u4efb\u52a1\u65f6\u95f4\uff08\u4efb\u52a1\u65f6\u95f4\u5c0f\u4e8e\u8bbe\u7f6e\u7684\u95f4\u9694\u65f6\u95f4\uff09\uff0c\u5982\uff1a\u4efb\u52a13s,\u8bbe\u7f6e\u95f4\u96942s -> \u5b9e\u9645\u95f4\u96943s"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["scheduleWithFixedDelay(Runnable command,long initialDelay, ong delay,TimeUnit unit)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u8003\u8651\u4efb\u52a1\u65f6\u95f4\uff1a\u5982\uff1a\u4efb\u52a13s,\u8bbe\u7f6e\u95f4\u96942s -> \u5b9e\u9645\u95f4\u96945s"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"executors\u5927\u5bb6\u5ead",children:"Executors\u5927\u5bb6\u5ead"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5de5\u5177\u7c7b\uff0c\u8c03\u7528\u7684ThreadPoolExecutor,ForkJoinPool\u7684\u6784\u9020\u51fd\u6570"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"fixedthreadpool",children:"FixedThreadPool"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u53ef\u914d\u7f6e\u7684\uff0c\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u65e0\u754c\u961f\u5217\u7684"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["corePoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"nThreads \u56fa\u5b9a\u5927\u5c0f\uff08fixed\uff09\uff0c\u7ebf\u7a0b\u6570\u6709\u4e0a\u9650"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["maximumPoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"nThreads \u6ca1\u7528\uff0c\u53cd\u6b63\u4f1a\u8fdb\u961f\u5217"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"keepAliveTime"}),"\n",(0,i.jsxs)(n.li,{children:["workQueue","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"LinkedBlockingQueue \u65e0\u754c\u7684\uff0c\u591a\u51fa\u6765\u7684\u4f1a\u4e00\u76f4\u585e\u5230\u961f\u5217"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["handler","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AbortPolicy \u6ca1\u6709\u89e6\u53d1\u6761\u4ef6"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"singlethreadscheduled",children:"SingleThreadScheduled"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u65e0\u754c\u961f\u5217\u7684"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["corePoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1 \u6700\u591a\u5c31\u4e00\u4e2a\u7ebf\u7a0b"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["maximumPoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1 \u6ca1\u7528\uff0c\u53cd\u6b63\u4f1a\u8fdb\u961f\u5217"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"keepAliveTime"}),"\n",(0,i.jsxs)(n.li,{children:["workQueue","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"LinkedBlockingQueue \u65e0\u754c\u7684\uff0c\u591a\u51fa\u6765\u7684\u4f1a\u4e00\u76f4\u585e\u5230\u961f\u5217"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["handler","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AbortPolicy \u6ca1\u6709\u89e6\u53d1\u6761\u4ef6"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cachedthreadpool",children:"CachedThreadPool"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u5df2\u521b\u5efa\u7ebf\u7a0b\u6ca1\u8dd1\u5b8c\uff0c\u540e\u9762\u63d0\u4ea4\u4efb\u52a1\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5982\u679c\u6ca1\u751f\u4ea7\u8005\u4e86\uff0c\u7ebf\u7a0b60s\u540e\u4f1a\u88ab\u6dd8\u6c70"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["corePoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["maximumPoolSize","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Integer.MAX_VALUE"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["keepAliveTime","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"60s"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["workQueue","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["SynchronousQueue","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5f00\u59cb\u5148offer\u80af\u5b9a\u662f\u5931\u8d25\u7684\uff0c\u6240\u4ee5\u5f00\u59cb\u7684\u65f6\u5019\u7528\u4e0d\u5230\u8fd9\u4e2a\u961f\u5217\uff0c\u76f4\u63a5addWorkers\u4e86"}),"\n",(0,i.jsx)(n.li,{children:"\u540e\u9762\u6709\u7ebf\u7a0b\u5728poll(timeout)\u961f\u5217\u4e86\uff0c\u518doffer\u7684\u8bdd\u4f1a\u76f4\u63a5\u8ba9\u7b49\u5f85\u7684\u7ebf\u7a0b\u53d6\u8d70\u4efb\u52a1"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["handler","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AbortPolicy \u6ca1\u6709\u89e6\u53d1\u6761\u4ef6"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var l=r(96540);const i={},t=l.createContext(i);function o(e){const n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);