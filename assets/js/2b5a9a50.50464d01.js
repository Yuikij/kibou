"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1480],{28453:(n,e,r)=>{r.d(e,{R:()=>a,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function a(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),t.createElement(s.Provider,{value:e},n.children)}},31573:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u5408141-160","title":"\u7efc\u5408141-160","description":"141. \u4ec0\u4e48\u662f AOP\uff1f","source":"@site/docs/prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u5408141-160.md","sourceDirName":"prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587","slug":"/prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u5408141-160","permalink":"/kibou/docs/prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u5408141-160","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"prepareExam","previous":{"title":"\u7efc\u5408121-140","permalink":"/kibou/docs/prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u5408121-140"},"next":{"title":"\u7efc\u540821-40","permalink":"/kibou/docs/prepareExam/\u9762\u8bd5/\u516b\u80a1\u6587/\u7efc\u540821-40"}}');var i=r(74848),s=r(28453);const a={},l=void 0,c={},o=[{value:"141. \u4ec0\u4e48\u662f AOP\uff1f",id:"141-\u4ec0\u4e48\u662f-aop",level:3},{value:"142. \u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7\uff1f",id:"142-\u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7",level:3},{value:"143. Synchronized \u548c ReentrantLock \u6709\u4ec0\u4e48\u533a\u522b\uff1f",id:"143-synchronized-\u548c-reentrantlock-\u6709\u4ec0\u4e48\u533a\u522b",level:3},{value:"144. Redis \u7684 Lua \u811a\u672c\u529f\u80fd\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u4f7f\u7528\uff1f",id:"144-redis-\u7684-lua-\u811a\u672c\u529f\u80fd\u662f\u4ec0\u4e48\u5982\u4f55\u4f7f\u7528",level:3},{value:"145. HTTP 2.0 \u548c 3.0 \u6709\u4ec0\u4e48\u533a\u522b\uff1f",id:"145-http-20-\u548c-30-\u6709\u4ec0\u4e48\u533a\u522b",level:3},{value:"146. \u5355\u4f8b\u6a21\u5f0f\u6709\u54ea\u51e0\u79cd\u5b9e\u73b0\uff1f\u5982\u4f55\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff1f",id:"146-\u5355\u4f8b\u6a21\u5f0f\u6709\u54ea\u51e0\u79cd\u5b9e\u73b0\u5982\u4f55\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168",level:3},{value:"147. Java \u7684 synchronized \u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f",id:"147-java-\u7684-synchronized-\u662f\u600e\u4e48\u5b9e\u73b0\u7684",level:3},{value:"148. \u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u79d2\u6740\u529f\u80fd\uff1f",id:"148-\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u79d2\u6740\u529f\u80fd",level:3},{value:"149. \u4e3a\u4ec0\u4e48\u4e0d\u9009\u62e9\u4f7f\u7528\u539f\u751f\u7684 NIO \u800c\u9009\u62e9\u4f7f\u7528 Netty \u5462\uff1f",id:"149-\u4e3a\u4ec0\u4e48\u4e0d\u9009\u62e9\u4f7f\u7528\u539f\u751f\u7684-nio-\u800c\u9009\u62e9\u4f7f\u7528-netty-\u5462",level:3},{value:"150. \u770b\u8fc7\u6e90\u7801\u5417\uff1f\u8bf4\u4e0b Spring \u7531\u54ea\u4e9b\u91cd\u8981\u7684\u6a21\u5757\u7ec4\u6210\uff1f",id:"150-\u770b\u8fc7\u6e90\u7801\u5417\u8bf4\u4e0b-spring-\u7531\u54ea\u4e9b\u91cd\u8981\u7684\u6a21\u5757\u7ec4\u6210",level:3},{value:"151. \u5982\u4f55\u4f18\u5316 Java \u4e2d\u7684\u9501\u7684\u4f7f\u7528\uff1f",id:"151-\u5982\u4f55\u4f18\u5316-java-\u4e2d\u7684\u9501\u7684\u4f7f\u7528",level:3},{value:"152. Redis \u7684 Pipeline \u529f\u80fd\u662f\u4ec0\u4e48\uff1f",id:"152-redis-\u7684-pipeline-\u529f\u80fd\u662f\u4ec0\u4e48",level:3},{value:"153. \u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f ID \u53d1\u53f7\u5668\uff0c\u600e\u4e48\u8bbe\u8ba1\uff1f",id:"153-\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f-id-\u53d1\u53f7\u5668\u600e\u4e48\u8bbe\u8ba1",level:3},{value:"154. \u4ec0\u4e48\u662f\u670d\u52a1\u96ea\u5d29\uff1f",id:"154-\u4ec0\u4e48\u662f\u670d\u52a1\u96ea\u5d29",level:3},{value:"155. JVM \u7531\u54ea\u4e9b\u90e8\u5206\u7ec4\u6210\uff1f",id:"155-jvm-\u7531\u54ea\u4e9b\u90e8\u5206\u7ec4\u6210",level:3},{value:"156. Redis \u901a\u5e38\u5e94\u7528\u4e8e\u54ea\u4e9b\u573a\u666f\uff1f",id:"156-redis-\u901a\u5e38\u5e94\u7528\u4e8e\u54ea\u4e9b\u573a\u666f",level:3},{value:"157. \u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u77ed\u94fe\u7cfb\u7edf\uff0c\u600e\u4e48\u8bbe\u8ba1\uff1f",id:"157-\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u77ed\u94fe\u7cfb\u7edf\u600e\u4e48\u8bbe\u8ba1",level:3},{value:"158. \u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\uff08\u5e38\u95ee\uff09\uff1f",id:"158-\u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\u5e38\u95ee",level:3},{value:"159. JVM \u5783\u573e\u56de\u6536\u8c03\u4f18\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4ec0\u4e48\uff1f",id:"159-jvm-\u5783\u573e\u56de\u6536\u8c03\u4f18\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4ec0\u4e48",level:3},{value:"160. Redis \u4e2d\u7684 Big Key \u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u89e3\u51b3\uff1f",id:"160-redis-\u4e2d\u7684-big-key-\u95ee\u9898\u662f\u4ec0\u4e48\u5982\u4f55\u89e3\u51b3",level:3}];function d(n){const e={code:"code",details:"details",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",summary:"summary",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"141-\u4ec0\u4e48\u662f-aop",children:"141. \u4ec0\u4e48\u662f AOP\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Spring"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"AOP\u5b9a\u4e49\uff1a"}),"\nAOP\uff08Aspect-Oriented Programming\uff09\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff0c\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u901a\u8fc7\u9884\u7f16\u8bd1\u65b9\u5f0f\u548c\u8fd0\u884c\u671f\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7a0b\u5e8f\u529f\u80fd\u7684\u7edf\u4e00\u7ef4\u62a4\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6838\u5fc3\u6982\u5ff5\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u5207\u9762\uff08Aspect\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u6a2a\u5207\u5173\u6ce8\u70b9\u7684\u6a21\u5757\u5316"}),"\n",(0,i.jsx)(e.li,{children:"\u5305\u542b\u901a\u77e5\u548c\u5207\u70b9\u7684\u5b9a\u4e49"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8fde\u63a5\u70b9\uff08Join Point\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u80fd\u591f\u5e94\u7528\u901a\u77e5\u7684\u6240\u6709\u70b9"}),"\n",(0,i.jsx)(e.li,{children:"Spring AOP\u4e2d\u53ea\u652f\u6301\u65b9\u6cd5\u6267\u884c\u8fde\u63a5\u70b9"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5207\u70b9\uff08Pointcut\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5339\u914d\u8fde\u63a5\u70b9\u7684\u65ad\u8a00"}),"\n",(0,i.jsx)(e.li,{children:"\u5b9a\u4e49\u5728\u54ea\u4e9b\u8fde\u63a5\u70b9\u4e0a\u5e94\u7528\u901a\u77e5"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u901a\u77e5\uff08Advice\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5728\u7279\u5b9a\u8fde\u63a5\u70b9\u6267\u884c\u7684\u4ee3\u7801"}),"\n",(0,i.jsx)(e.li,{children:"\u4e94\u79cd\u7c7b\u578b\uff1a\u524d\u7f6e\u3001\u540e\u7f6e\u3001\u8fd4\u56de\u3001\u5f02\u5e38\u3001\u73af\u7ed5"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u76ee\u6807\u5bf9\u8c61\uff08Target Object\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u5207\u9762\u6240\u901a\u77e5\u7684\u5bf9\u8c61"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u7ec7\u5165\uff08Weaving\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5c06\u5207\u9762\u4e0e\u76ee\u6807\u5bf9\u8c61\u94fe\u63a5\uff0c\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\u7684\u8fc7\u7a0b"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Spring AOP\u5b9e\u73b0\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6ce8\u89e3\u65b9\u5f0f\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Aspect\n@Component\npublic class LoggingAspect {\n    \n    // \u5207\u70b9\u5b9a\u4e49\n    @Pointcut("execution(* com.example.service.*.*(..))")\n    public void serviceLayer() {}\n    \n    // \u524d\u7f6e\u901a\u77e5\n    @Before("serviceLayer()")\n    public void logBefore(JoinPoint joinPoint) {\n        log.info("Method {} called with args: {}", \n                joinPoint.getSignature().getName(), \n                Arrays.toString(joinPoint.getArgs()));\n    }\n    \n    // \u540e\u7f6e\u901a\u77e5\n    @After("serviceLayer()")\n    public void logAfter(JoinPoint joinPoint) {\n        log.info("Method {} execution completed", \n                joinPoint.getSignature().getName());\n    }\n    \n    // \u8fd4\u56de\u901a\u77e5\n    @AfterReturning(pointcut = "serviceLayer()", returning = "result")\n    public void logAfterReturning(JoinPoint joinPoint, Object result) {\n        log.info("Method {} returned: {}", \n                joinPoint.getSignature().getName(), result);\n    }\n    \n    // \u5f02\u5e38\u901a\u77e5\n    @AfterThrowing(pointcut = "serviceLayer()", throwing = "ex")\n    public void logAfterThrowing(JoinPoint joinPoint, Exception ex) {\n        log.error("Method {} threw exception: {}", \n                joinPoint.getSignature().getName(), ex.getMessage());\n    }\n    \n    // \u73af\u7ed5\u901a\u77e5\n    @Around("serviceLayer()")\n    public Object logAround(ProceedingJoinPoint joinPoint) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        try {\n            Object result = joinPoint.proceed();\n            long endTime = System.currentTimeMillis();\n            log.info("Method {} executed in {} ms", \n                    joinPoint.getSignature().getName(), \n                    endTime - startTime);\n            return result;\n        } catch (Exception e) {\n            log.error("Method {} execution failed", \n                    joinPoint.getSignature().getName(), e);\n            throw e;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5207\u70b9\u8868\u8fbe\u5f0f\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u6267\u884c\u65b9\u6cd5\u5207\u70b9\n@Pointcut("execution(public * com.example.service.*.*(..))")\n\n// \u6ce8\u89e3\u5207\u70b9\n@Pointcut("@annotation(org.springframework.transaction.annotation.Transactional)")\n\n// \u7c7b\u578b\u5207\u70b9\n@Pointcut("within(com.example.service.*)")\n\n// Bean\u540d\u79f0\u5207\u70b9\n@Pointcut("bean(*Service)")\n\n// \u7ec4\u5408\u5207\u70b9\n@Pointcut("serviceLayer() && @annotation(org.springframework.cache.annotation.Cacheable)")\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u65e5\u5fd7\u8bb0\u5f55"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Aspect\n@Component\npublic class AuditAspect {\n    \n    @Around("@annotation(Auditable)")\n    public Object auditMethod(ProceedingJoinPoint joinPoint) throws Throwable {\n        String methodName = joinPoint.getSignature().getName();\n        String className = joinPoint.getTarget().getClass().getSimpleName();\n        \n        // \u8bb0\u5f55\u64cd\u4f5c\u65e5\u5fd7\n        AuditLog auditLog = AuditLog.builder()\n                .operation(className + "." + methodName)\n                .startTime(LocalDateTime.now())\n                .build();\n        \n        try {\n            Object result = joinPoint.proceed();\n            auditLog.setStatus("SUCCESS");\n            return result;\n        } catch (Exception e) {\n            auditLog.setStatus("FAILED");\n            auditLog.setErrorMessage(e.getMessage());\n            throw e;\n        } finally {\n            auditLog.setEndTime(LocalDateTime.now());\n            auditLogService.save(auditLog);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u6743\u9650\u63a7\u5236"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Aspect\n@Component\npublic class SecurityAspect {\n    \n    @Before("@annotation(requiresRole)")\n    public void checkPermission(JoinPoint joinPoint, RequiresRole requiresRole) {\n        String[] roles = requiresRole.value();\n        String currentUser = SecurityContextHolder.getContext()\n                                                  .getAuthentication()\n                                                  .getName();\n        \n        if (!userService.hasAnyRole(currentUser, roles)) {\n            throw new AccessDeniedException("Access denied for user: " + currentUser);\n        }\n    }\n}\n\n// \u4f7f\u7528\u793a\u4f8b\n@Service\npublic class UserService {\n    \n    @RequiresRole({"ADMIN", "USER_MANAGER"})\n    public void deleteUser(Long userId) {\n        // \u5220\u9664\u7528\u6237\u903b\u8f91\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u7f13\u5b58\u7ba1\u7406"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Aspect\n@Component\npublic class CacheAspect {\n    \n    @Around("@annotation(cacheable)")\n    public Object cache(ProceedingJoinPoint joinPoint, Cacheable cacheable) throws Throwable {\n        String key = generateCacheKey(joinPoint, cacheable.key());\n        \n        // \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\n        Object cached = redisTemplate.opsForValue().get(key);\n        if (cached != null) {\n            return cached;\n        }\n        \n        // \u6267\u884c\u65b9\u6cd5\u5e76\u7f13\u5b58\u7ed3\u679c\n        Object result = joinPoint.proceed();\n        redisTemplate.opsForValue().set(key, result, \n                Duration.ofSeconds(cacheable.expire()));\n        \n        return result;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"AOP\u4f18\u52bf\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u51cf\u5c11\u4ee3\u7801\u91cd\u590d"}),"\n",(0,i.jsx)(e.li,{children:"\u63d0\u9ad8\u6a21\u5757\u5316\u7a0b\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55"}),"\n",(0,i.jsx)(e.li,{children:"\u5173\u6ce8\u70b9\u5206\u79bb"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"142-\u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7",children:"142. \u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Spring Cloud"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u5fae\u670d\u52a1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u670d\u52a1\u964d\u7ea7"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u670d\u52a1\u964d\u7ea7\u5b9a\u4e49\uff1a"}),"\n\u670d\u52a1\u964d\u7ea7\u662f\u6307\u5728\u7cfb\u7edf\u538b\u529b\u5267\u589e\u6216\u90e8\u5206\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\uff0c\u4e3b\u52a8\u5173\u95ed\u90e8\u5206\u975e\u6838\u5fc3\u529f\u80fd\u6216\u8fd4\u56de\u7b80\u5316\u7ed3\u679c\uff0c\u4ee5\u4fdd\u8bc1\u6838\u5fc3\u529f\u80fd\u6b63\u5e38\u8fd0\u884c\u7684\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u964d\u7ea7\u7b56\u7565\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u529f\u80fd\u964d\u7ea7"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5173\u95ed\u975e\u6838\u5fc3\u529f\u80fd"}),"\n",(0,i.jsx)(e.li,{children:"\u7b80\u5316\u4e1a\u52a1\u903b\u8f91"}),"\n",(0,i.jsx)(e.li,{children:"\u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u7f13\u5b58\u6570\u636e"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u6027\u80fd\u964d\u7ea7"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u964d\u4f4e\u6570\u636e\u7cbe\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u51cf\u5c11\u67e5\u8be2\u8303\u56f4"}),"\n",(0,i.jsx)(e.li,{children:"\u7b80\u5316\u8ba1\u7b97\u903b\u8f91"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5bb9\u91cf\u964d\u7ea7"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u9650\u5236\u5e76\u53d1\u8bf7\u6c42\u6570"}),"\n",(0,i.jsx)(e.li,{children:"\u4e22\u5f03\u90e8\u5206\u8bf7\u6c42"}),"\n",(0,i.jsx)(e.li,{children:"\u5ef6\u8fdf\u5904\u7406\u975e\u7d27\u6025\u4efb\u52a1"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u73b0\u65b9\u5f0f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. Hystrix\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class UserService {\n    \n    @HystrixCommand(\n        fallbackMethod = "getUserFallback",\n        commandProperties = {\n            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "3000"),\n            @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),\n            @HystrixProperty(name = "circuitBreaker.errorThresholdPercentage", value = "50")\n        }\n    )\n    public User getUser(Long userId) {\n        // \u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\n        return userClient.getUser(userId);\n    }\n    \n    // \u964d\u7ea7\u65b9\u6cd5\n    public User getUserFallback(Long userId) {\n        return User.builder()\n                .id(userId)\n                .name("\u9ed8\u8ba4\u7528\u6237")\n                .email("default@example.com")\n                .build();\n    }\n    \n    // \u964d\u7ea7\u539f\u56e0\n    public User getUserFallback(Long userId, Throwable ex) {\n        log.error("Get user failed, fallback triggered", ex);\n        return getUserFallback(userId);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. Sentinel\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class OrderService {\n    \n    @SentinelResource(\n        value = "getOrder",\n        fallback = "getOrderFallback",\n        blockHandler = "getOrderBlocked"\n    )\n    public Order getOrder(Long orderId) {\n        return orderClient.getOrder(orderId);\n    }\n    \n    // \u964d\u7ea7\u65b9\u6cd5\uff08\u5f02\u5e38\u964d\u7ea7\uff09\n    public Order getOrderFallback(Long orderId, Throwable ex) {\n        log.warn("Get order fallback triggered for orderId: {}", orderId, ex);\n        return Order.builder()\n                .id(orderId)\n                .status("UNKNOWN")\n                .build();\n    }\n    \n    // \u9650\u6d41\u964d\u7ea7\n    public Order getOrderBlocked(Long orderId, BlockException ex) {\n        log.warn("Get order blocked for orderId: {}", orderId);\n        return Order.builder()\n                .id(orderId)\n                .status("BUSY")\n                .message("\u7cfb\u7edf\u7e41\u5fd9\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5")\n                .build();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u81ea\u5b9a\u4e49\u964d\u7ea7\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class DegradationManager {\n    \n    private final Map<String, Boolean> degradationFlags = new ConcurrentHashMap<>();\n    private final RedisTemplate<String, Object> redisTemplate;\n    \n    // \u68c0\u67e5\u662f\u5426\u9700\u8981\u964d\u7ea7\n    public boolean shouldDegrade(String service) {\n        // \u672c\u5730\u7f13\u5b58\u68c0\u67e5\n        Boolean localFlag = degradationFlags.get(service);\n        if (localFlag != null) {\n            return localFlag;\n        }\n        \n        // Redis\u914d\u7f6e\u68c0\u67e5\n        Boolean redisFlag = (Boolean) redisTemplate.opsForValue()\n                .get("degradation:" + service);\n        \n        if (redisFlag != null) {\n            degradationFlags.put(service, redisFlag);\n            return redisFlag;\n        }\n        \n        return false;\n    }\n    \n    // \u52a8\u6001\u8bbe\u7f6e\u964d\u7ea7\u72b6\u6001\n    public void setDegradation(String service, boolean degrade) {\n        degradationFlags.put(service, degrade);\n        redisTemplate.opsForValue().set("degradation:" + service, degrade);\n    }\n}\n\n@Service\npublic class ProductService {\n    \n    @Autowired\n    private DegradationManager degradationManager;\n    \n    public ProductDetails getProductDetails(Long productId) {\n        if (degradationManager.shouldDegrade("product-detail")) {\n            // \u964d\u7ea7\uff1a\u8fd4\u56de\u57fa\u672c\u4fe1\u606f\n            return getBasicProductInfo(productId);\n        }\n        \n        // \u6b63\u5e38\uff1a\u8fd4\u56de\u5b8c\u6574\u4fe1\u606f\n        return getFullProductDetails(productId);\n    }\n    \n    private ProductDetails getBasicProductInfo(Long productId) {\n        // \u4ece\u7f13\u5b58\u6216\u6570\u636e\u5e93\u83b7\u53d6\u57fa\u672c\u4fe1\u606f\n        Product product = productRepository.findById(productId);\n        return ProductDetails.builder()\n                .id(product.getId())\n                .name(product.getName())\n                .price(product.getPrice())\n                .build();\n    }\n    \n    private ProductDetails getFullProductDetails(Long productId) {\n        // \u83b7\u53d6\u5b8c\u6574\u4fe1\u606f\uff08\u53ef\u80fd\u8c03\u7528\u591a\u4e2a\u670d\u52a1\uff09\n        Product product = productRepository.findById(productId);\n        List<Review> reviews = reviewService.getReviews(productId);\n        List<Recommendation> recommendations = recommendationService.getRecommendations(productId);\n        \n        return ProductDetails.builder()\n                .id(product.getId())\n                .name(product.getName())\n                .price(product.getPrice())\n                .description(product.getDescription())\n                .reviews(reviews)\n                .recommendations(recommendations)\n                .build();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u964d\u7ea7\u7ea7\u522b\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u9875\u9762\u964d\u7ea7"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Controller\npublic class HomeController {\n    \n    @GetMapping("/")\n    public String home(Model model) {\n        if (degradationManager.shouldDegrade("homepage")) {\n            // \u8fd4\u56de\u7b80\u5316\u9875\u9762\n            return "home-simple";\n        }\n        \n        // \u8fd4\u56de\u5b8c\u6574\u9875\u9762\n        loadRecommendations(model);\n        loadPersonalizedContent(model);\n        return "home-full";\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u63a5\u53e3\u964d\u7ea7"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@RestController\npublic class ApiController {\n    \n    @GetMapping("/api/search")\n    public SearchResult search(@RequestParam String keyword) {\n        if (degradationManager.shouldDegrade("search")) {\n            // \u964d\u7ea7\uff1a\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n            return getCachedSearchResult(keyword);\n        }\n        \n        // \u6b63\u5e38\uff1a\u5b9e\u65f6\u641c\u7d22\n        return searchService.search(keyword);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u6570\u636e\u964d\u7ea7"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class ReportService {\n    \n    public Report generateReport(String type, Date startDate, Date endDate) {\n        if (degradationManager.shouldDegrade("report")) {\n            // \u964d\u7ea7\uff1a\u51cf\u5c11\u6570\u636e\u7cbe\u5ea6\n            return generateSimplifiedReport(type, startDate, endDate);\n        }\n        \n        return generateDetailedReport(type, startDate, endDate);\n    }\n    \n    private Report generateSimplifiedReport(String type, Date startDate, Date endDate) {\n        // \u6309\u5929\u805a\u5408\u800c\u4e0d\u662f\u6309\u5c0f\u65f6\n        return reportRepository.findDailyReport(type, startDate, endDate);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u964d\u7ea7\u76d1\u63a7\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class DegradationMonitor {\n    \n    @EventListener\n    public void onDegradationTriggered(DegradationEvent event) {\n        // \u8bb0\u5f55\u964d\u7ea7\u4e8b\u4ef6\n        log.warn("Degradation triggered for service: {}, reason: {}", \n                event.getService(), event.getReason());\n        \n        // \u53d1\u9001\u544a\u8b66\n        alertService.sendAlert("Service degradation", event);\n        \n        // \u8bb0\u5f55\u6307\u6807\n        meterRegistry.counter("degradation.triggered", \n                "service", event.getService())\n                .increment();\n    }\n    \n    @Scheduled(fixedRate = 30000)\n    public void checkSystemHealth() {\n        double cpuUsage = systemMetrics.getCpuUsage();\n        double memoryUsage = systemMetrics.getMemoryUsage();\n        \n        if (cpuUsage > 80 || memoryUsage > 85) {\n            // \u81ea\u52a8\u89e6\u53d1\u964d\u7ea7\n            degradationManager.setDegradation("non-essential", true);\n        } else if (cpuUsage < 60 && memoryUsage < 70) {\n            // \u6062\u590d\u670d\u52a1\n            degradationManager.setDegradation("non-essential", false);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u660e\u786e\u6838\u5fc3\u548c\u975e\u6838\u5fc3\u529f\u80fd"}),"\n",(0,i.jsx)(e.li,{children:"\u8bbe\u8ba1\u4f18\u96c5\u7684\u964d\u7ea7\u7b56\u7565"}),"\n",(0,i.jsx)(e.li,{children:"\u5efa\u7acb\u81ea\u52a8\u5316\u964d\u7ea7\u673a\u5236"}),"\n",(0,i.jsx)(e.li,{children:"\u76d1\u63a7\u964d\u7ea7\u6548\u679c"}),"\n",(0,i.jsx)(e.li,{children:"\u53ca\u65f6\u6062\u590d\u670d\u52a1"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"143-synchronized-\u548c-reentrantlock-\u6709\u4ec0\u4e48\u533a\u522b",children:"143. Synchronized \u548c ReentrantLock \u6709\u4ec0\u4e48\u533a\u522b\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java\u5e76\u53d1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u57fa\u672c\u5bf9\u6bd4\uff1a"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"\u7279\u6027"}),(0,i.jsx)(e.th,{children:"synchronized"}),(0,i.jsx)(e.th,{children:"ReentrantLock"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u9501\u7c7b\u578b"}),(0,i.jsx)(e.td,{children:"\u5185\u7f6e\u9501\uff08\u76d1\u89c6\u5668\u9501\uff09"}),(0,i.jsx)(e.td,{children:"\u663e\u5f0f\u9501"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u4f7f\u7528\u65b9\u5f0f"}),(0,i.jsx)(e.td,{children:"\u5173\u952e\u5b57"}),(0,i.jsx)(e.td,{children:"API\u8c03\u7528"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u91ca\u653e\u65b9\u5f0f"}),(0,i.jsx)(e.td,{children:"\u81ea\u52a8\u91ca\u653e"}),(0,i.jsx)(e.td,{children:"\u624b\u52a8\u91ca\u653e"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u53ef\u4e2d\u65ad\u6027"}),(0,i.jsx)(e.td,{children:"\u4e0d\u53ef\u4e2d\u65ad"}),(0,i.jsx)(e.td,{children:"\u53ef\u4e2d\u65ad"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u8d85\u65f6\u83b7\u53d6"}),(0,i.jsx)(e.td,{children:"\u4e0d\u652f\u6301"}),(0,i.jsx)(e.td,{children:"\u652f\u6301"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u516c\u5e73\u6027"}),(0,i.jsx)(e.td,{children:"\u975e\u516c\u5e73"}),(0,i.jsx)(e.td,{children:"\u53ef\u9009\u516c\u5e73/\u975e\u516c\u5e73"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u6761\u4ef6\u53d8\u91cf"}),(0,i.jsx)(e.td,{children:"\u5355\u4e00\u6761\u4ef6\uff08wait/notify\uff09"}),(0,i.jsx)(e.td,{children:"\u591a\u6761\u4ef6\u53d8\u91cf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u6027\u80fd"}),(0,i.jsx)(e.td,{children:"JVM\u4f18\u5316\uff0c\u8f83\u597d"}),(0,i.jsx)(e.td,{children:"\u7528\u6237\u6001\u5b9e\u73b0"})]})]})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4f7f\u7528\u793a\u4f8b\u5bf9\u6bd4\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"synchronized\u4f7f\u7528\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class SynchronizedExample {\n    private final Object lock = new Object();\n    private int count = 0;\n    \n    // \u65b9\u6cd5\u540c\u6b65\n    public synchronized void increment() {\n        count++;\n    }\n    \n    // \u4ee3\u7801\u5757\u540c\u6b65\n    public void decrement() {\n        synchronized (lock) {\n            count--;\n        }\n    }\n    \n    // \u9759\u6001\u65b9\u6cd5\u540c\u6b65\n    public static synchronized void staticMethod() {\n        // \u9501\u7684\u662f\u7c7b\u5bf9\u8c61\n    }\n    \n    public synchronized void waitExample() throws InterruptedException {\n        while (condition) {\n            wait(); // \u7b49\u5f85\u6761\u4ef6\n        }\n        // \u6267\u884c\u903b\u8f91\n        notifyAll(); // \u5524\u9192\u6240\u6709\u7b49\u5f85\u7ebf\u7a0b\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"ReentrantLock\u4f7f\u7528\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class ReentrantLockExample {\n    private final ReentrantLock lock = new ReentrantLock();\n    private final Condition condition = lock.newCondition();\n    private int count = 0;\n    \n    // \u57fa\u672c\u52a0\u9501\n    public void increment() {\n        lock.lock();\n        try {\n            count++;\n        } finally {\n            lock.unlock(); // \u5fc5\u987b\u5728finally\u4e2d\u91ca\u653e\n        }\n    }\n    \n    // \u53ef\u4e2d\u65ad\u9501\n    public void interruptibleIncrement() throws InterruptedException {\n        lock.lockInterruptibly();\n        try {\n            count++;\n        } finally {\n            lock.unlock();\n        }\n    }\n    \n    // \u5c1d\u8bd5\u83b7\u53d6\u9501\n    public boolean tryIncrement() {\n        if (lock.tryLock()) {\n            try {\n                count++;\n                return true;\n            } finally {\n                lock.unlock();\n            }\n        }\n        return false;\n    }\n    \n    // \u8d85\u65f6\u83b7\u53d6\u9501\n    public boolean timeoutIncrement(long timeout, TimeUnit unit) {\n        try {\n            if (lock.tryLock(timeout, unit)) {\n                try {\n                    count++;\n                    return true;\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n        return false;\n    }\n    \n    // \u6761\u4ef6\u53d8\u91cf\u4f7f\u7528\n    public void conditionExample() throws InterruptedException {\n        lock.lock();\n        try {\n            while (someCondition) {\n                condition.await(); // \u7b49\u5f85\u6761\u4ef6\n            }\n            // \u6267\u884c\u903b\u8f91\n            condition.signalAll(); // \u5524\u9192\u6240\u6709\u7b49\u5f85\u7ebf\u7a0b\n        } finally {\n            lock.unlock();\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9ad8\u7ea7\u7279\u6027\u5bf9\u6bd4\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u516c\u5e73\u6027"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// ReentrantLock\u652f\u6301\u516c\u5e73\u9501\nReentrantLock fairLock = new ReentrantLock(true); // \u516c\u5e73\u9501\nReentrantLock unfairLock = new ReentrantLock(false); // \u975e\u516c\u5e73\u9501\n\n// synchronized\u603b\u662f\u975e\u516c\u5e73\u7684\npublic synchronized void method() {\n    // \u975e\u516c\u5e73\u9501\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u591a\u6761\u4ef6\u53d8\u91cf"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class MultiConditionExample {\n    private final ReentrantLock lock = new ReentrantLock();\n    private final Condition notFull = lock.newCondition();\n    private final Condition notEmpty = lock.newCondition();\n    private final Object[] buffer = new Object[10];\n    private int count, putIndex, takeIndex;\n    \n    public void put(Object x) throws InterruptedException {\n        lock.lock();\n        try {\n            while (count == buffer.length) {\n                notFull.await(); // \u7b49\u5f85\u4e0d\u6ee1\u6761\u4ef6\n            }\n            buffer[putIndex] = x;\n            if (++putIndex == buffer.length) putIndex = 0;\n            ++count;\n            notEmpty.signal(); // \u901a\u77e5\u4e0d\u7a7a\u6761\u4ef6\n        } finally {\n            lock.unlock();\n        }\n    }\n    \n    public Object take() throws InterruptedException {\n        lock.lock();\n        try {\n            while (count == 0) {\n                notEmpty.await(); // \u7b49\u5f85\u4e0d\u7a7a\u6761\u4ef6\n            }\n            Object x = buffer[takeIndex];\n            if (++takeIndex == buffer.length) takeIndex = 0;\n            --count;\n            notFull.signal(); // \u901a\u77e5\u4e0d\u6ee1\u6761\u4ef6\n            return x;\n        } finally {\n            lock.unlock();\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u9501\u72b6\u6001\u67e5\u8be2"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class LockInfoExample {\n    private final ReentrantLock lock = new ReentrantLock();\n    \n    public void showLockInfo() {\n        System.out.println("Hold count: " + lock.getHoldCount());\n        System.out.println("Queue length: " + lock.getQueueLength());\n        System.out.println("Is fair: " + lock.isFair());\n        System.out.println("Is locked: " + lock.isLocked());\n        System.out.println("Is held by current thread: " + lock.isHeldByCurrentThread());\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u5bf9\u6bd4\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. JVM\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// synchronized\u4eab\u53d7JVM\u5c42\u9762\u7684\u4f18\u5316\n// - \u504f\u5411\u9501\uff1a\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9501\u4e0d\u5b58\u5728\u7ade\u4e89\n// - \u8f7b\u91cf\u7ea7\u9501\uff1a\u5c11\u91cf\u7ade\u4e89\u65f6\u4f7f\u7528CAS\n// - \u91cd\u91cf\u7ea7\u9501\uff1a\u6fc0\u70c8\u7ade\u4e89\u65f6\u624d\u5347\u7ea7\npublic synchronized void optimizedByJVM() {\n    // JVM\u4f1a\u6839\u636e\u7ade\u4e89\u60c5\u51b5\u81ea\u52a8\u4f18\u5316\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u7528\u6237\u6001\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// ReentrantLock\u662fJava\u5c42\u9762\u5b9e\u73b0\n// - \u57fa\u4e8eAQS\uff08AbstractQueuedSynchronizer\uff09\n// - \u66f4\u591a\u529f\u80fd\u4f46\u5f00\u9500\u7a0d\u5927\npublic void reentrantLockMethod() {\n    lock.lock();\n    try {\n        // \u7528\u6237\u6001\u5b9e\u73b0\uff0c\u529f\u80fd\u66f4\u4e30\u5bcc\n    } finally {\n        lock.unlock();\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9009\u62e9\u5efa\u8bae\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4f7f\u7528synchronized\u7684\u573a\u666f\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7b80\u5355\u7684\u540c\u6b65\u9700\u6c42"}),"\n",(0,i.jsx)(e.li,{children:"\u4e0d\u9700\u8981\u8d85\u65f6\u6216\u4e2d\u65ad"}),"\n",(0,i.jsx)(e.li,{children:"\u4ee3\u7801\u7b80\u6d01\u6027\u8981\u6c42\u9ad8"}),"\n",(0,i.jsx)(e.li,{children:"JVM\u81ea\u52a8\u4f18\u5316\u573a\u666f"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4f7f\u7528ReentrantLock\u7684\u573a\u666f\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u53ef\u4e2d\u65ad\u7684\u9501\u83b7\u53d6"}),"\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u8d85\u65f6\u7684\u9501\u83b7\u53d6"}),"\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u516c\u5e73\u9501"}),"\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u591a\u4e2a\u6761\u4ef6\u53d8\u91cf"}),"\n",(0,i.jsx)(e.li,{children:"\u9700\u8981\u9501\u72b6\u6001\u67e5\u8be2"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u5e94\u7528\u793a\u4f8b\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class OrderService {\n    private final Map<String, ReentrantLock> orderLocks = new ConcurrentHashMap<>();\n    \n    // \u4f7f\u7528ReentrantLock\u5b9e\u73b0\u8ba2\u5355\u7ea7\u522b\u7684\u9501\n    public void processOrder(String orderId) {\n        ReentrantLock orderLock = orderLocks.computeIfAbsent(orderId, k -> new ReentrantLock());\n        \n        try {\n            // \u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u6700\u591a\u7b49\u5f855\u79d2\n            if (orderLock.tryLock(5, TimeUnit.SECONDS)) {\n                try {\n                    // \u5904\u7406\u8ba2\u5355\n                    handleOrder(orderId);\n                } finally {\n                    orderLock.unlock();\n                }\n            } else {\n                throw new OrderProcessingException("Order is being processed by another thread");\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new OrderProcessingException("Order processing interrupted");\n        }\n    }\n    \n    // \u4f7f\u7528synchronized\u5b9e\u73b0\u7b80\u5355\u7684\u8ba1\u6570\n    private final Object countLock = new Object();\n    private int processedCount = 0;\n    \n    public void incrementProcessedCount() {\n        synchronized (countLock) {\n            processedCount++;\n        }\n    }\n}\n'})}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"144-redis-\u7684-lua-\u811a\u672c\u529f\u80fd\u662f\u4ec0\u4e48\u5982\u4f55\u4f7f\u7528",children:"144. Redis \u7684 Lua \u811a\u672c\u529f\u80fd\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u4f7f\u7528\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Redis"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Lua\u811a\u672c\u7b80\u4ecb\uff1a"}),"\nRedis\u7684Lua\u811a\u672c\u529f\u80fd\u5141\u8bb8\u5728Redis\u670d\u52a1\u5668\u7aef\u6267\u884cLua\u811a\u672c\uff0c\u786e\u4fdd\u591a\u4e2aRedis\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c\u51cf\u5c11\u7f51\u7edc\u5f80\u8fd4\u6b21\u6570\uff0c\u63d0\u9ad8\u6027\u80fd\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6838\u5fc3\u7279\u6027\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u539f\u5b50\u6027"}),"\uff1a\u811a\u672c\u6267\u884c\u671f\u95f4\u4e0d\u4f1a\u88ab\u5176\u4ed6\u547d\u4ee4\u6253\u65ad"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u670d\u52a1\u5668\u7aef\u6267\u884c"}),"\uff1a\u51cf\u5c11\u7f51\u7edc\u5f00\u9500"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u53ef\u590d\u7528"}),"\uff1a\u811a\u672c\u53ef\u4ee5\u88ab\u7f13\u5b58\u548c\u91cd\u590d\u4f7f\u7528"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7075\u6d3b\u6027"}),"\uff1a\u652f\u6301\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u57fa\u672c\u4f7f\u7528\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. EVAL\u547d\u4ee4"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-redis",children:"# \u57fa\u672c\u8bed\u6cd5\nEVAL script numkeys key [key ...] arg [arg ...]\n\n# \u7b80\u5355\u793a\u4f8b\nEVAL \"return redis.call('set', KEYS[1], ARGV[1])\" 1 mykey myvalue\n\n# \u590d\u6742\u793a\u4f8b\uff1a\u539f\u5b50\u6027\u589e\u52a0\u5e76\u83b7\u53d6\u503c\nEVAL \"\nlocal current = redis.call('get', KEYS[1])\nif current == false then\n    current = 0\nelse\n    current = tonumber(current)\nend\ncurrent = current + tonumber(ARGV[1])\nredis.call('set', KEYS[1], current)\nreturn current\n\" 1 counter 5\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. EVALSHA\u547d\u4ee4"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-redis",children:'# \u52a0\u8f7d\u811a\u672c\u83b7\u53d6SHA1\nSCRIPT LOAD "return redis.call(\'get\', KEYS[1])"\n# \u8fd4\u56de: "6b1bf486c81ceb7edf3c093f4c48582e38c0e791"\n\n# \u4f7f\u7528SHA1\u6267\u884c\u811a\u672c\nEVALSHA 6b1bf486c81ceb7edf3c093f4c48582e38c0e791 1 mykey\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java\u5ba2\u6237\u7aef\u4f7f\u7528\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. Jedis\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class RedisLuaService {\n    \n    @Autowired\n    private JedisPool jedisPool;\n    \n    // \u5206\u5e03\u5f0f\u9501\u811a\u672c\n    private static final String LOCK_SCRIPT = \n        "if redis.call(\'get\', KEYS[1]) == ARGV[1] then " +\n        "    return redis.call(\'del\', KEYS[1]) " +\n        "else " +\n        "    return 0 " +\n        "end";\n    \n    // \u9650\u6d41\u811a\u672c\n    private static final String RATE_LIMIT_SCRIPT = \n        "local key = KEYS[1] " +\n        "local limit = tonumber(ARGV[1]) " +\n        "local window = tonumber(ARGV[2]) " +\n        "local current = redis.call(\'get\', key) " +\n        "if current == false then " +\n        "    redis.call(\'setex\', key, window, 1) " +\n        "    return 1 " +\n        "elseif tonumber(current) < limit then " +\n        "    return redis.call(\'incr\', key) " +\n        "else " +\n        "    return 0 " +\n        "end";\n    \n    public boolean releaseLock(String lockKey, String lockValue) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            Object result = jedis.eval(LOCK_SCRIPT, \n                    Collections.singletonList(lockKey), \n                    Collections.singletonList(lockValue));\n            return "1".equals(result.toString());\n        }\n    }\n    \n    public boolean isAllowed(String key, int limit, int windowSeconds) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            Object result = jedis.eval(RATE_LIMIT_SCRIPT,\n                    Collections.singletonList(key),\n                    Arrays.asList(String.valueOf(limit), String.valueOf(windowSeconds)));\n            return !"0".equals(result.toString());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. RedisTemplate\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class RedisScriptService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    // \u539f\u5b50\u6027\u589e\u51cf\u5e93\u5b58\u811a\u672c\n    private static final String STOCK_SCRIPT = \n        "local stock = redis.call(\'get\', KEYS[1]) " +\n        "if stock == false then " +\n        "    return {-1, \'Stock not found\'} " +\n        "end " +\n        "stock = tonumber(stock) " +\n        "local quantity = tonumber(ARGV[1]) " +\n        "if stock >= quantity then " +\n        "    redis.call(\'decrby\', KEYS[1], quantity) " +\n        "    return {stock - quantity, \'Success\'} " +\n        "else " +\n        "    return {stock, \'Insufficient stock\'} " +\n        "end";\n    \n    // \u6279\u91cf\u64cd\u4f5c\u811a\u672c\n    private static final String BATCH_SET_SCRIPT = \n        "for i=1,#KEYS do " +\n        "    redis.call(\'set\', KEYS[i], ARGV[i]) " +\n        "end " +\n        "return #KEYS";\n    \n    public StockResult decreaseStock(String productId, int quantity) {\n        DefaultRedisScript<List> script = new DefaultRedisScript<>();\n        script.setScriptText(STOCK_SCRIPT);\n        script.setResultType(List.class);\n        \n        List<Object> result = redisTemplate.execute(script, \n                Collections.singletonList(productId), \n                String.valueOf(quantity));\n        \n        if (result != null && result.size() == 2) {\n            return new StockResult(\n                Integer.parseInt(result.get(0).toString()),\n                result.get(1).toString()\n            );\n        }\n        \n        return new StockResult(-1, "Script execution failed");\n    }\n    \n    public int batchSet(Map<String, String> keyValues) {\n        DefaultRedisScript<Long> script = new DefaultRedisScript<>();\n        script.setScriptText(BATCH_SET_SCRIPT);\n        script.setResultType(Long.class);\n        \n        List<String> keys = new ArrayList<>(keyValues.keySet());\n        List<String> values = new ArrayList<>(keyValues.values());\n        \n        Long result = redisTemplate.execute(script, keys, values.toArray());\n        return result != null ? result.intValue() : 0;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u5206\u5e03\u5f0f\u9501"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class DistributedLock {\n    \n    // \u83b7\u53d6\u9501\u811a\u672c\n    private static final String ACQUIRE_LOCK_SCRIPT = \n        "if redis.call(\'setnx\', KEYS[1], ARGV[1]) == 1 then " +\n        "    redis.call(\'expire\', KEYS[1], ARGV[2]) " +\n        "    return 1 " +\n        "else " +\n        "    return 0 " +\n        "end";\n    \n    // \u91ca\u653e\u9501\u811a\u672c\n    private static final String RELEASE_LOCK_SCRIPT = \n        "if redis.call(\'get\', KEYS[1]) == ARGV[1] then " +\n        "    return redis.call(\'del\', KEYS[1]) " +\n        "else " +\n        "    return 0 " +\n        "end";\n    \n    public boolean acquireLock(String lockKey, String lockValue, int expireSeconds) {\n        DefaultRedisScript<Long> script = new DefaultRedisScript<>();\n        script.setScriptText(ACQUIRE_LOCK_SCRIPT);\n        script.setResultType(Long.class);\n        \n        Long result = redisTemplate.execute(script,\n                Collections.singletonList(lockKey),\n                lockValue, String.valueOf(expireSeconds));\n        \n        return Long.valueOf(1L).equals(result);\n    }\n    \n    public boolean releaseLock(String lockKey, String lockValue) {\n        DefaultRedisScript<Long> script = new DefaultRedisScript<>();\n        script.setScriptText(RELEASE_LOCK_SCRIPT);\n        script.setResultType(Long.class);\n        \n        Long result = redisTemplate.execute(script,\n                Collections.singletonList(lockKey),\n                lockValue);\n        \n        return Long.valueOf(1L).equals(result);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u6ed1\u52a8\u7a97\u53e3\u9650\u6d41"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class SlidingWindowRateLimit {\n    \n    private static final String SLIDING_WINDOW_SCRIPT = \n        "local key = KEYS[1] " +\n        "local window = tonumber(ARGV[1]) " +\n        "local limit = tonumber(ARGV[2]) " +\n        "local now = tonumber(ARGV[3]) " +\n        \n        "-- \u6e05\u7406\u8fc7\u671f\u6570\u636e " +\n        "redis.call(\'zremrangebyscore\', key, 0, now - window * 1000) " +\n        \n        "-- \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u5185\u7684\u8bf7\u6c42\u6570 " +\n        "local current = redis.call(\'zcard\', key) " +\n        \n        "if current < limit then " +\n        "    -- \u6dfb\u52a0\u5f53\u524d\u8bf7\u6c42 " +\n        "    redis.call(\'zadd\', key, now, now) " +\n        "    redis.call(\'expire\', key, window) " +\n        "    return {1, limit - current - 1} " +\n        "else " +\n        "    return {0, 0} " +\n        "end";\n    \n    public RateLimitResult checkLimit(String key, int windowSeconds, int limit) {\n        DefaultRedisScript<List> script = new DefaultRedisScript<>();\n        script.setScriptText(SLIDING_WINDOW_SCRIPT);\n        script.setResultType(List.class);\n        \n        long now = System.currentTimeMillis();\n        List<Object> result = redisTemplate.execute(script,\n                Collections.singletonList(key),\n                String.valueOf(windowSeconds),\n                String.valueOf(limit),\n                String.valueOf(now));\n        \n        if (result != null && result.size() == 2) {\n            boolean allowed = "1".equals(result.get(0).toString());\n            int remaining = Integer.parseInt(result.get(1).toString());\n            return new RateLimitResult(allowed, remaining);\n        }\n        \n        return new RateLimitResult(false, 0);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u6392\u884c\u699c\u64cd\u4f5c"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class LeaderboardService {\n    \n    // \u66f4\u65b0\u6392\u884c\u699c\u811a\u672c\n    private static final String UPDATE_LEADERBOARD_SCRIPT = \n        "local key = KEYS[1] " +\n        "local member = ARGV[1] " +\n        "local score = tonumber(ARGV[2]) " +\n        "local maxSize = tonumber(ARGV[3]) " +\n        \n        "-- \u6dfb\u52a0\u6216\u66f4\u65b0\u6210\u5458\u5206\u6570 " +\n        "redis.call(\'zadd\', key, score, member) " +\n        \n        "-- \u83b7\u53d6\u6392\u884c\u699c\u5927\u5c0f " +\n        "local size = redis.call(\'zcard\', key) " +\n        \n        "-- \u5982\u679c\u8d85\u8fc7\u6700\u5927\u5927\u5c0f\uff0c\u79fb\u9664\u6700\u4f4e\u5206\u6570\u7684\u6210\u5458 " +\n        "if size > maxSize then " +\n        "    redis.call(\'zremrangebyrank\', key, 0, size - maxSize - 1) " +\n        "end " +\n        \n        "-- \u8fd4\u56de\u6210\u5458\u5f53\u524d\u6392\u540d\uff08\u4ece1\u5f00\u59cb\uff09 " +\n        "return redis.call(\'zrevrank\', key, member) + 1";\n    \n    public int updateScore(String leaderboard, String member, double score, int maxSize) {\n        DefaultRedisScript<Long> script = new DefaultRedisScript<>();\n        script.setScriptText(UPDATE_LEADERBOARD_SCRIPT);\n        script.setResultType(Long.class);\n        \n        Long rank = redisTemplate.execute(script,\n                Collections.singletonList(leaderboard),\n                member, String.valueOf(score), String.valueOf(maxSize));\n        \n        return rank != null ? rank.intValue() : -1;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u811a\u672c\u7ba1\u7406\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class ScriptManager {\n    \n    private final Map<String, String> scriptShas = new ConcurrentHashMap<>();\n    \n    @PostConstruct\n    public void loadScripts() {\n        // \u9884\u52a0\u8f7d\u811a\u672c\n        loadScript("rate_limit", RATE_LIMIT_SCRIPT);\n        loadScript("distributed_lock", LOCK_SCRIPT);\n    }\n    \n    private void loadScript(String name, String script) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            String sha = jedis.scriptLoad(script);\n            scriptShas.put(name, sha);\n            log.info("Loaded script \'{}\' with SHA: {}", name, sha);\n        }\n    }\n    \n    public Object executeScript(String scriptName, List<String> keys, List<String> args) {\n        String sha = scriptShas.get(scriptName);\n        if (sha == null) {\n            throw new IllegalArgumentException("Script not found: " + scriptName);\n        }\n        \n        try (Jedis jedis = jedisPool.getResource()) {\n            return jedis.evalsha(sha, keys, args);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u9884\u52a0\u8f7d\u5e38\u7528\u811a\u672c\u63d0\u9ad8\u6027\u80fd"}),"\n",(0,i.jsx)(e.li,{children:"\u5408\u7406\u4f7f\u7528KEYS\u548cARGV\u53c2\u6570"}),"\n",(0,i.jsx)(e.li,{children:"\u6ce8\u610f\u811a\u672c\u7684\u539f\u5b50\u6027\u7279\u6027"}),"\n",(0,i.jsx)(e.li,{children:"\u907f\u514d\u5728\u811a\u672c\u4e2d\u6267\u884c\u8017\u65f6\u64cd\u4f5c"}),"\n",(0,i.jsx)(e.li,{children:"\u5904\u7406\u811a\u672c\u6267\u884c\u5f02\u5e38\u60c5\u51b5"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"145-http-20-\u548c-30-\u6709\u4ec0\u4e48\u533a\u522b",children:"145. HTTP 2.0 \u548c 3.0 \u6709\u4ec0\u4e48\u533a\u522b\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u7f51\u7edc"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4e3b\u8981\u533a\u522b\u5bf9\u6bd4\uff1a"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"\u7279\u6027"}),(0,i.jsx)(e.th,{children:"HTTP/2.0"}),(0,i.jsx)(e.th,{children:"HTTP/3.0"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u4f20\u8f93\u534f\u8bae"}),(0,i.jsx)(e.td,{children:"TCP"}),(0,i.jsx)(e.td,{children:"QUIC (UDP)"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u8fde\u63a5\u5efa\u7acb"}),(0,i.jsx)(e.td,{children:"TCP\u63e1\u624b + TLS\u63e1\u624b"}),(0,i.jsx)(e.td,{children:"QUIC\u63e1\u624b\uff08\u5408\u5e76\uff09"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u961f\u5934\u963b\u585e"}),(0,i.jsx)(e.td,{children:"\u5e94\u7528\u5c42\u89e3\u51b3\uff0c\u4f20\u8f93\u5c42\u4ecd\u5b58\u5728"}),(0,i.jsx)(e.td,{children:"\u5b8c\u5168\u89e3\u51b3"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u8fde\u63a5\u8fc1\u79fb"}),(0,i.jsx)(e.td,{children:"\u4e0d\u652f\u6301"}),(0,i.jsx)(e.td,{children:"\u652f\u6301"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"0-RTT"}),(0,i.jsx)(e.td,{children:"TLS 1.3\u652f\u6301"}),(0,i.jsx)(e.td,{children:"\u539f\u751f\u652f\u6301"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u62e5\u585e\u63a7\u5236"}),(0,i.jsx)(e.td,{children:"TCP\u5185\u6838\u5b9e\u73b0"}),(0,i.jsx)(e.td,{children:"\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0"})]})]})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/2.0\u7279\u6027\u56de\u987e\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u591a\u8def\u590d\u7528"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// HTTP/2\u5728\u5355\u4e2aTCP\u8fde\u63a5\u4e0a\u591a\u8def\u590d\u7528\n// \u4f46TCP\u5c42\u9762\u4ecd\u53ef\u80fd\u6709\u961f\u5934\u963b\u585e\n\u8fde\u63a5: TCP Connection\n\u251c\u2500\u2500 Stream 1: GET /api/users\n\u251c\u2500\u2500 Stream 3: GET /api/orders  \n\u251c\u2500\u2500 Stream 5: POST /api/products\n\u2514\u2500\u2500 Stream 7: GET /api/stats\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u5934\u90e8\u538b\u7f29\uff08HPACK\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-http",children:"# HTTP/2 HPACK\u538b\u7f29\n:method: GET\n:path: /api/users\n:authority: api.example.com\n# \u91cd\u590d\u5934\u90e8\u4f7f\u7528\u7d22\u5f15\u5f15\u7528\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/3.0\u9769\u65b0\u7279\u6027\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. QUIC\u534f\u8bae\u57fa\u7840"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"HTTP/3 over QUIC over UDP\n\n\u5e94\u7528\u5c42:    HTTP/3\n\u4f20\u8f93\u5c42:    QUIC\n\u7f51\u7edc\u5c42:    UDP\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8fde\u63a5\u5efa\u7acb\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"# HTTP/2 (TCP + TLS)\n\u5ba2\u6237\u7aef -> \u670d\u52a1\u5668: SYN\n\u670d\u52a1\u5668 -> \u5ba2\u6237\u7aef: SYN-ACK  \n\u5ba2\u6237\u7aef -> \u670d\u52a1\u5668: ACK\n\u5ba2\u6237\u7aef -> \u670d\u52a1\u5668: TLS Client Hello\n\u670d\u52a1\u5668 -> \u5ba2\u6237\u7aef: TLS Server Hello + Certificate\n... (\u66f4\u591aTLS\u63e1\u624b)\n\u603b\u8ba1: 2-3 RTT\n\n# HTTP/3 (QUIC)\n\u5ba2\u6237\u7aef -> \u670d\u52a1\u5668: QUIC Initial Packet (\u5305\u542b\u52a0\u5bc6\u63e1\u624b)\n\u670d\u52a1\u5668 -> \u5ba2\u6237\u7aef: QUIC Response\n\u5ba2\u6237\u7aef\u53ef\u7acb\u5373\u53d1\u9001\u5e94\u7528\u6570\u636e\n\u603b\u8ba1: 1 RTT (0-RTT \u91cd\u8fde)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u771f\u6b63\u89e3\u51b3\u961f\u5934\u963b\u585e"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// HTTP/2: TCP\u5c42\u9762\u4ecd\u6709\u961f\u5934\u963b\u585e\nTCP\u4e22\u5305\u5f71\u54cd\u6240\u6709Stream \u274c\n\n// HTTP/3: \u72ec\u7acb\u7684Stream\nStream 1: \u6b63\u5e38\u4f20\u8f93 \u2705\nStream 2: \u4e22\u5305\u91cd\u4f20 \ud83d\udd04  \nStream 3: \u6b63\u5e38\u4f20\u8f93 \u2705  \nStream 4: \u6b63\u5e38\u4f20\u8f93 \u2705\n// Stream\u95f4\u76f8\u4e92\u72ec\u7acb\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u90e8\u7f72\u5dee\u5f02\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/2\u914d\u7f6e\uff08Nginx\uff09\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nginx",children:"server {\n    listen 443 ssl http2;\n    server_name example.com;\n    \n    ssl_certificate /path/to/cert.pem;\n    ssl_certificate_key /path/to/key.pem;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    \n    # HTTP/2 push\n    location / {\n        http2_push /css/style.css;\n        http2_push /js/app.js;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/3\u914d\u7f6e\uff08Nginx\uff09\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nginx",children:"server {\n    listen 443 ssl http2;          # HTTP/2 \u56de\u9000\n    listen 443 http3 reuseport;    # HTTP/3\n    server_name example.com;\n    \n    ssl_certificate /path/to/cert.pem;\n    ssl_certificate_key /path/to/key.pem;\n    ssl_protocols TLSv1.3;         # HTTP/3\u9700\u8981TLS 1.3\n    \n    # \u6dfb\u52a0Alt-Svc\u5934\u544a\u77e5\u5ba2\u6237\u7aef\u652f\u6301HTTP/3\n    add_header Alt-Svc 'h3=\":443\"; ma=86400';\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u8fde\u63a5\u8fc1\u79fb\u7279\u6027\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// HTTP/3\u652f\u6301\u8fde\u63a5\u8fc1\u79fb\n// \u7528\u6237\u4eceWiFi\u5207\u6362\u5230\u79fb\u52a8\u7f51\u7edc\n\u539f\u8fde\u63a5ID: Connection-ID-12345\n\u65b0IP\u5730\u5740: 192.168.1.100 -> 10.0.0.50\n\u8fde\u63a5\u72b6\u6001: \u4fdd\u6301\u4e0d\u53d8 \u2705\n\n// HTTP/2\u9700\u8981\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\n\u539fTCP\u8fde\u63a5: WiFi IP + Port\n\u65b0\u8fde\u63a5: \u79fb\u52a8\u7f51\u7edc IP + Port  \n\u9700\u8981: \u91cd\u65b0\u63e1\u624b \u274c\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"0-RTT\u8fde\u63a5\u6062\u590d\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// HTTP/3 0-RTT\u6062\u590d\n\u5ba2\u6237\u7aef\u7f13\u5b58: \u670d\u52a1\u5668\u914d\u7f6e + \u4f1a\u8bdd\u7968\u636e\n\u91cd\u8fde\u65f6: \u7acb\u5373\u53d1\u9001\u5e94\u7528\u6570\u636e\n\u670d\u52a1\u5668: \u7acb\u5373\u5904\u7406\u8bf7\u6c42\n\n// \u793a\u4f8b\u65f6\u5e8f\nT0: \u5ba2\u6237\u7aef\u53d1\u90010-RTT\u6570\u636e + \u63e1\u624b\nT1: \u670d\u52a1\u5668\u54cd\u5e94\u6570\u636e + \u63e1\u624b\u786e\u8ba4\n// \u65e0\u9700\u7b49\u5f85\u63e1\u624b\u5b8c\u6210\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u4f18\u52bf\u5bf9\u6bd4\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5ef6\u8fdf\u6bd4\u8f83\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\u9996\u6b21\u8fde\u63a5\u5efa\u7acb:\nHTTP/2: 2-3 RTT\nHTTP/3: 1 RTT\n\n\u91cd\u8fde:\nHTTP/2: 2-3 RTT  \nHTTP/3: 0 RTT\n\n\u5f31\u7f51\u7edc\u73af\u5883:\nHTTP/2: \u53d7TCP\u961f\u5934\u963b\u585e\u5f71\u54cd\u4e25\u91cd\nHTTP/3: \u72ec\u7acbStream\uff0c\u5f71\u54cd\u8f83\u5c0f\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java\u5ba2\u6237\u7aef\u652f\u6301\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/2\u5ba2\u6237\u7aef\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Java 11+ HttpClient\nHttpClient client = HttpClient.newBuilder()\n    .version(HttpClient.Version.HTTP_2)\n    .build();\n\nHttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create("https://api.example.com/users"))\n    .build();\n\nHttpResponse<String> response = client.send(request, \n    HttpResponse.BodyHandlers.ofString());\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/3\u5ba2\u6237\u7aef\uff08\u5b9e\u9a8c\u6027\uff09\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u4f7f\u7528\u652f\u6301QUIC\u7684\u5ba2\u6237\u7aef\u5e93\n// \u4f8b\u5982\uff1aquiche-java, netty-quic\u7b49\nQuicClient client = QuicClient.newBuilder()\n    .serverName("example.com")\n    .build();\n\nQuicConnection connection = client.connect()\n    .join();\n\nQuicStream stream = connection.createStream()\n    .join();\n\n// \u53d1\u9001HTTP/3\u8bf7\u6c42\nstream.writeData(httpRequestBytes);\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6d4f\u89c8\u5668\u652f\u6301\u68c0\u6d4b\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// \u68c0\u6d4bHTTP/3\u652f\u6301\nif ('serviceWorker' in navigator) {\n    // \u73b0\u4ee3\u6d4f\u89c8\u5668\u53ef\u80fd\u652f\u6301HTTP/3\n    fetch('/api/test', {\n        // \u6d4f\u89c8\u5668\u81ea\u52a8\u534f\u5546\u6700\u4f73\u534f\u8bae\u7248\u672c\n    }).then(response => {\n        console.log('Protocol:', response.headers.get('alt-svc'));\n    });\n}\n\n// \u68c0\u67e5\u8fde\u63a5\u4fe1\u606f\uff08Chrome DevTools\uff09\n// Network -> \u8fde\u63a5ID\u5217\u53ef\u4ee5\u770b\u5230h3/h2\u6807\u8bc6\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u90e8\u7f72\u6ce8\u610f\u4e8b\u9879\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HTTP/3\u90e8\u7f72\u6311\u6218\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# 1. \u9632\u706b\u5899\u914d\u7f6e\n# \u9700\u8981\u5f00\u653eUDP 443\u7aef\u53e3\niptables -A INPUT -p udp --dport 443 -j ACCEPT\n\n# 2. \u8d1f\u8f7d\u5747\u8861\u5668\u652f\u6301\n# \u9700\u8981\u652f\u6301QUIC\u7684\u8d1f\u8f7d\u5747\u8861\u5668\n# \u5982\uff1aCloudflare, AWS ALB\u7b49\n\n# 3. CDN\u652f\u6301\n# \u9700\u8981CDN\u63d0\u4f9b\u5546\u652f\u6301HTTP/3\n# \u5982\uff1aCloudflare, AWS CloudFront\u7b49\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6e10\u8fdb\u5f0f\u5347\u7ea7\u7b56\u7565\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// \u670d\u52a1\u7aef\u652f\u6301\u591a\u534f\u8bae\nserver {\n    listen 443 ssl http2;           # HTTP/2\n    listen 443 http3 reuseport;     # HTTP/3  \n    \n    # \u534f\u8bae\u534f\u5546\n    add_header Alt-Svc \'h3=":443"; ma=86400, h2=":443"; ma=86400\';\n}\n\n// \u5ba2\u6237\u7aef\u81ea\u52a8\u964d\u7ea7\nHTTP/3\u5c1d\u8bd5 -> HTTP/2\u56de\u9000 -> HTTP/1.1\u515c\u5e95\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u548c\u8c03\u8bd5\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// \u76d1\u63a7HTTP\u7248\u672c\u5206\u5e03\nconst protocolMetrics = {\n    'http/1.1': 0,\n    'http/2': 0, \n    'http/3': 0\n};\n\n// Chrome DevTools\n// Network\u9762\u677f -> Protocol\u5217\n// \u53ef\u770b\u5230\u6bcf\u4e2a\u8bf7\u6c42\u4f7f\u7528\u7684\u534f\u8bae\u7248\u672c\n\n// \u670d\u52a1\u5668\u65e5\u5fd7\nlog_format http3 '$remote_addr - $remote_user [$time_local] '\n                '\"$request\" $status $body_bytes_sent '\n                '\"$http_referer\" \"$http_user_agent\" '\n                'protocol=$server_protocol';\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u672a\u6765\u53d1\u5c55\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"HTTP/3\u751f\u6001\u9010\u6b65\u6210\u719f"}),"\n",(0,i.jsx)(e.li,{children:"QUIC\u534f\u8bae\u4e0d\u65ad\u4f18\u5316"}),"\n",(0,i.jsx)(e.li,{children:"\u66f4\u591a\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u652f\u6301"}),"\n",(0,i.jsx)(e.li,{children:"\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u9010\u6b65\u5347\u7ea7"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"146-\u5355\u4f8b\u6a21\u5f0f\u6709\u54ea\u51e0\u79cd\u5b9e\u73b0\u5982\u4f55\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168",children:"146. \u5355\u4f8b\u6a21\u5f0f\u6709\u54ea\u51e0\u79cd\u5b9e\u73b0\uff1f\u5982\u4f55\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u8bbe\u8ba1\u6a21\u5f0f"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5355\u4f8b\u6a21\u5f0f\u5b9e\u73b0\u65b9\u5f0f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u997f\u6c49\u5f0f\uff08\u7ebf\u7a0b\u5b89\u5168\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class EagerSingleton {\n    // \u7c7b\u52a0\u8f7d\u65f6\u5c31\u521b\u5efa\u5b9e\u4f8b\n    private static final EagerSingleton INSTANCE = new EagerSingleton();\n    \n    private EagerSingleton() {\n        // \u79c1\u6709\u6784\u9020\u51fd\u6570\n    }\n    \n    public static EagerSingleton getInstance() {\n        return INSTANCE;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u7ebf\u7a0b\u5b89\u5168\uff0c\u5b9e\u73b0\u7b80\u5355"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7f3a\u70b9"}),"\uff1a\u4e0d\u80fd\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u53ef\u80fd\u6d6a\u8d39\u5185\u5b58"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class LazySingleton {\n    private static LazySingleton instance;\n    \n    private LazySingleton() {}\n    \n    public static LazySingleton getInstance() {\n        if (instance == null) {  // \u591a\u7ebf\u7a0b\u95ee\u9898\n            instance = new LazySingleton();\n        }\n        return instance;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u5ef6\u8fdf\u52a0\u8f7d"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7f3a\u70b9"}),"\uff1a\u7ebf\u7a0b\u4e0d\u5b89\u5168"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u61d2\u6c49\u5f0f\uff08\u540c\u6b65\u65b9\u6cd5\uff0c\u7ebf\u7a0b\u5b89\u5168\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class SynchronizedLazySingleton {\n    private static SynchronizedLazySingleton instance;\n    \n    private SynchronizedLazySingleton() {}\n    \n    public static synchronized SynchronizedLazySingleton getInstance() {\n        if (instance == null) {\n            instance = new SynchronizedLazySingleton();\n        }\n        return instance;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u7ebf\u7a0b\u5b89\u5168\uff0c\u5ef6\u8fdf\u52a0\u8f7d"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7f3a\u70b9"}),"\uff1a\u6027\u80fd\u5dee\uff0c\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u540c\u6b65"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u53cc\u91cd\u68c0\u67e5\u9501\u5b9a\uff08DCL\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class DoubleCheckedLockingSingleton {\n    // volatile\u4fdd\u8bc1\u53ef\u89c1\u6027\u548c\u7981\u6b62\u91cd\u6392\u5e8f\n    private static volatile DoubleCheckedLockingSingleton instance;\n    \n    private DoubleCheckedLockingSingleton() {}\n    \n    public static DoubleCheckedLockingSingleton getInstance() {\n        if (instance == null) {                    // \u7b2c\u4e00\u6b21\u68c0\u67e5\n            synchronized (DoubleCheckedLockingSingleton.class) {\n                if (instance == null) {            // \u7b2c\u4e8c\u6b21\u68c0\u67e5\n                    instance = new DoubleCheckedLockingSingleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6027\u80fd\u597d\uff0c\u7ebf\u7a0b\u5b89\u5168"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6ce8\u610f"}),"\uff1a\u5fc5\u987b\u4f7f\u7528volatile\u5173\u952e\u5b57"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u9759\u6001\u5185\u90e8\u7c7b\uff08\u63a8\u8350\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class StaticInnerClassSingleton {\n    \n    private StaticInnerClassSingleton() {}\n    \n    // \u9759\u6001\u5185\u90e8\u7c7b\uff0c\u61d2\u52a0\u8f7d\n    private static class SingletonHolder {\n        private static final StaticInnerClassSingleton INSTANCE = \n                new StaticInnerClassSingleton();\n    }\n    \n    public static StaticInnerClassSingleton getInstance() {\n        return SingletonHolder.INSTANCE;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u6027\u80fd\u597d"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u539f\u7406"}),"\uff1a\u5229\u7528JVM\u7c7b\u52a0\u8f7d\u673a\u5236\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u679a\u4e3e\u5b9e\u73b0\uff08\u6700\u5b89\u5168\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public enum EnumSingleton {\n    INSTANCE;\n    \n    public void doSomething() {\n        System.out.println("Doing something...");\n    }\n}\n\n// \u4f7f\u7528\nEnumSingleton.INSTANCE.doSomething();\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"}),"\uff1a\u7ebf\u7a0b\u5b89\u5168\uff0c\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u548c\u53cd\u5c04\u653b\u51fb"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7f3a\u70b9"}),"\uff1a\u4e0d\u80fd\u5ef6\u8fdf\u52a0\u8f7d"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7ebf\u7a0b\u5b89\u5168\u5206\u6790\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"DCL\u4e2dvolatile\u7684\u91cd\u8981\u6027\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u6ca1\u6709volatile\u7684\u95ee\u9898\ninstance = new Singleton(); // \u53ef\u80fd\u91cd\u6392\u5e8f\u4e3a\uff1a\n// 1. \u5206\u914d\u5185\u5b58\u7a7a\u95f4\n// 2. \u8bbe\u7f6einstance\u6307\u5411\u5185\u5b58\uff08\u6b64\u65f6\u5bf9\u8c61\u8fd8\u672a\u521d\u59cb\u5316\uff09\n// 3. \u521d\u59cb\u5316\u5bf9\u8c61\n\n// \u5176\u4ed6\u7ebf\u7a0b\u53ef\u80fd\u770b\u5230\u672a\u5b8c\u5168\u521d\u59cb\u5316\u7684\u5bf9\u8c61\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7c7b\u52a0\u8f7d\u673a\u5236\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u73b0\u539f\u7406\npublic class Outer {\n    static class Inner {\n        static final Object INSTANCE = new Object(); // \u7c7b\u52a0\u8f7d\u65f6\u6267\u884c\n    }\n}\n// JVM\u4fdd\u8bc1\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\u7684\u7ebf\u7a0b\u5b89\u5168\u6027\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9632\u6b62\u53cd\u5c04\u653b\u51fb\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class ReflectionProofSingleton {\n    private static volatile ReflectionProofSingleton instance;\n    private static boolean created = false;\n    \n    private ReflectionProofSingleton() {\n        synchronized (ReflectionProofSingleton.class) {\n            if (created) {\n                throw new RuntimeException("Use getInstance() method to create");\n            }\n            created = true;\n        }\n    }\n    \n    public static ReflectionProofSingleton getInstance() {\n        if (instance == null) {\n            synchronized (ReflectionProofSingleton.class) {\n                if (instance == null) {\n                    instance = new ReflectionProofSingleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9632\u6b62\u5e8f\u5217\u5316\u653b\u51fb\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class SerializationProofSingleton implements Serializable {\n    private static volatile SerializationProofSingleton instance;\n    \n    private SerializationProofSingleton() {}\n    \n    public static SerializationProofSingleton getInstance() {\n        if (instance == null) {\n            synchronized (SerializationProofSingleton.class) {\n                if (instance == null) {\n                    instance = new SerializationProofSingleton();\n                }\n            }\n        }\n        return instance;\n    }\n    \n    // \u9632\u6b62\u5e8f\u5217\u5316\u7834\u574f\u5355\u4f8b\n    private Object readResolve() {\n        return getInstance();\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u6d4b\u8bd5\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class SingletonPerformanceTest {\n    \n    public static void main(String[] args) throws InterruptedException {\n        int threadCount = 100;\n        int iterations = 1000000;\n        \n        // \u6d4b\u8bd5\u4e0d\u540c\u5b9e\u73b0\u7684\u6027\u80fd\n        testPerformance("Eager", EagerSingleton::getInstance, threadCount, iterations);\n        testPerformance("DCL", DoubleCheckedLockingSingleton::getInstance, threadCount, iterations);\n        testPerformance("Static Inner", StaticInnerClassSingleton::getInstance, threadCount, iterations);\n        testPerformance("Synchronized", SynchronizedLazySingleton::getInstance, threadCount, iterations);\n    }\n    \n    private static void testPerformance(String name, Supplier<Object> supplier, \n                                       int threadCount, int iterations) throws InterruptedException {\n        CountDownLatch latch = new CountDownLatch(threadCount);\n        long startTime = System.nanoTime();\n        \n        for (int i = 0; i < threadCount; i++) {\n            new Thread(() -> {\n                for (int j = 0; j < iterations; j++) {\n                    supplier.get();\n                }\n                latch.countDown();\n            }).start();\n        }\n        \n        latch.await();\n        long endTime = System.nanoTime();\n        \n        System.out.printf("%s: %.2f ms%n", name, (endTime - startTime) / 1_000_000.0);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u5e94\u7528\u793a\u4f8b\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u5355\u4f8b\npublic class DatabaseConnectionPool {\n    private static volatile DatabaseConnectionPool instance;\n    private final DataSource dataSource;\n    \n    private DatabaseConnectionPool() {\n        // \u521d\u59cb\u5316\u8fde\u63a5\u6c60\n        HikariConfig config = new HikariConfig();\n        config.setJdbcUrl("jdbc:mysql://localhost:3306/db");\n        config.setUsername("user");\n        config.setPassword("password");\n        config.setMaximumPoolSize(20);\n        this.dataSource = new HikariDataSource(config);\n    }\n    \n    public static DatabaseConnectionPool getInstance() {\n        if (instance == null) {\n            synchronized (DatabaseConnectionPool.class) {\n                if (instance == null) {\n                    instance = new DatabaseConnectionPool();\n                }\n            }\n        }\n        return instance;\n    }\n    \n    public Connection getConnection() throws SQLException {\n        return dataSource.getConnection();\n    }\n}\n\n// \u914d\u7f6e\u7ba1\u7406\u5355\u4f8b\npublic class ConfigManager {\n    private static class Holder {\n        private static final ConfigManager INSTANCE = new ConfigManager();\n    }\n    \n    private final Properties properties;\n    \n    private ConfigManager() {\n        properties = new Properties();\n        loadConfiguration();\n    }\n    \n    public static ConfigManager getInstance() {\n        return Holder.INSTANCE;\n    }\n    \n    public String getProperty(String key) {\n        return properties.getProperty(key);\n    }\n    \n    private void loadConfiguration() {\n        // \u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\n        try (InputStream is = getClass().getResourceAsStream("/application.properties")) {\n            properties.load(is);\n        } catch (Exception e) {\n            throw new RuntimeException("Failed to load configuration", e);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9009\u62e9\u5efa\u8bae\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4e00\u822c\u60c5\u51b5"}),"\uff1a\u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u73b0"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Spring\u7b49\u6846\u67b6"}),"\uff1a\u4ea4\u7ed9\u5bb9\u5668\u7ba1\u7406"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9632\u653b\u51fb\u8981\u6c42\u9ad8"}),"\uff1a\u679a\u4e3e\u5b9e\u73b0"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7b80\u5355\u573a\u666f"}),"\uff1a\u997f\u6c49\u5f0f"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u8981\u6c42\u6781\u9ad8"}),"\uff1aDCL + volatile"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"147-java-\u7684-synchronized-\u662f\u600e\u4e48\u5b9e\u73b0\u7684",children:"147. Java \u7684 synchronized \u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--danger",children:"\u56f0\u96be"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java\u5e76\u53d1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"synchronized\u5b9e\u73b0\u539f\u7406\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u5b57\u8282\u7801\u5c42\u9762"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Java\u4ee3\u7801\npublic void synchronizedMethod() {\n    synchronized (this) {\n        // \u4e34\u754c\u533a\u4ee3\u7801\n    }\n}\n\n// \u5bf9\u5e94\u5b57\u8282\u7801\npublic void synchronizedMethod();\n    Code:\n       0: aload_0\n       1: dup\n       2: astore_1\n       3: monitorenter    // \u83b7\u53d6\u76d1\u89c6\u5668\u9501\n       4: aload_1\n       5: monitorexit     // \u91ca\u653e\u76d1\u89c6\u5668\u9501\n       6: goto          14\n       9: astore_2\n      10: aload_1\n      11: monitorexit     // \u5f02\u5e38\u65f6\u4e5f\u8981\u91ca\u653e\u9501\n      12: aload_2\n      13: athrow\n      14: return\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u5bf9\u8c61\u5934\u7ed3\u6784"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"|--------------------------------------------------------|\n|                     Object Header                      |\n|--------------------------------------------------------|\n| Mark Word (64bit) | Class Metadata Address (64bit)    |\n|--------------------------------------------------------|\n\nMark Word\u7ed3\u6784\uff0864\u4f4dJVM\uff09\uff1a\n|-------------------------------------------------------|--------------------|\n|                  25bit          | 31bit | 1bit | 4bit | 1bit | 2bit       |\n| unused:25 | identity_hashcode:31 | unused:1 | age:4 | biased_lock:1 | lock:2 |\n|-------------------------------------------------------|--------------------|\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u9501\u72b6\u6001\u6807\u8bc6"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Mark Word\u4e2d\u7684\u9501\u72b6\u6001\u4f4d\npublic class LockState {\n    public static final int UNLOCKED = 0b01;        // \u65e0\u9501\n    public static final int BIASED = 0b101;         // \u504f\u5411\u9501\n    public static final int LIGHTWEIGHT = 0b00;     // \u8f7b\u91cf\u7ea7\u9501\n    public static final int HEAVYWEIGHT = 0b10;     // \u91cd\u91cf\u7ea7\u9501\n    public static final int GC_MARK = 0b11;         // GC\u6807\u8bb0\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9501\u5347\u7ea7\u8fc7\u7a0b\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u504f\u5411\u9501\uff08Biased Locking\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9501\u4e0d\u5b58\u5728\u7ade\u4e89\uff0c\u603b\u662f\u7531\u540c\u4e00\u7ebf\u7a0b\u591a\u6b21\u83b7\u5f97\npublic class BiasedLockExample {\n    private final Object lock = new Object();\n    \n    public void method() {\n        synchronized (lock) {  // \u7b2c\u4e00\u6b21\u83b7\u53d6\uff1a\u8bbe\u7f6e\u504f\u5411\u9501\n            // \u4e1a\u52a1\u903b\u8f91\n        }\n        \n        synchronized (lock) {  // \u540e\u7eed\u83b7\u53d6\uff1a\u76f4\u63a5\u6267\u884c\uff0c\u65e0\u9700CAS\n            // \u4e1a\u52a1\u903b\u8f91\n        }\n    }\n}\n\n// \u504f\u5411\u9501\u72b6\u6001\u4e0b\u7684Mark Word\n|--------------------------------------------------------------------------|\n| thread:54 | epoch:2 | unused:1 | age:4 | biased_lock:1 | lock:2 (101)     |\n|--------------------------------------------------------------------------|\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8f7b\u91cf\u7ea7\u9501\uff08Lightweight Locking\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5f53\u6709\u5176\u4ed6\u7ebf\u7a0b\u7ade\u4e89\u65f6\uff0c\u504f\u5411\u9501\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\npublic class LightweightLockExample {\n    private final Object lock = new Object();\n    \n    public void method1() {\n        synchronized (lock) {  // \u7ebf\u7a0b1\u83b7\u53d6\u9501\n            // CAS\u64cd\u4f5c\u5c06Mark Word\u590d\u5236\u5230\u7ebf\u7a0b\u6808\u7684Lock Record\n            // \u7136\u540eCAS\u5c1d\u8bd5\u5c06Mark Word\u66f4\u65b0\u4e3a\u6307\u5411Lock Record\u7684\u6307\u9488\n        }\n    }\n    \n    public void method2() {\n        synchronized (lock) {  // \u7ebf\u7a0b2\u7ade\u4e89\u9501\n            // \u81ea\u65cb\u7b49\u5f85\uff0c\u5982\u679c\u81ea\u65cb\u5931\u8d25\u5219\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\n        }\n    }\n}\n\n// \u8f7b\u91cf\u7ea7\u9501\u72b6\u6001\u4e0b\u7684Mark Word\n|--------------------------------------------------------------------------|\n| ptr_to_lock_record:62                                 | lock:2 (00)       |\n|--------------------------------------------------------------------------|\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u91cd\u91cf\u7ea7\u9501\uff08Heavyweight Locking\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5f53\u8f7b\u91cf\u7ea7\u9501\u7ade\u4e89\u6fc0\u70c8\u65f6\uff0c\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\npublic class HeavyweightLockExample {\n    private final Object lock = new Object();\n    \n    public void method() {\n        synchronized (lock) {  \n            // \u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e92\u65a5\u91cf\uff08mutex\uff09\n            // \u7ebf\u7a0b\u963b\u585e\u548c\u5524\u9192\u9700\u8981\u4ece\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\n        }\n    }\n}\n\n// \u91cd\u91cf\u7ea7\u9501\u72b6\u6001\u4e0b\u7684Mark Word\n|--------------------------------------------------------------------------|\n| ptr_to_heavyweight_monitor:62                        | lock:2 (10)       |\n|--------------------------------------------------------------------------|\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Monitor\u5bf9\u8c61\u7ed3\u6784\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"// HotSpot VM\u4e2d\u7684ObjectMonitor\u7ed3\u6784\uff08\u7b80\u5316\uff09\nclass ObjectMonitor {\n    private:\n        volatile markOop _header;        // \u5bf9\u8c61\u5934\u4fe1\u606f\n        void* volatile _owner;           // \u6307\u5411\u6301\u6709\u9501\u7684\u7ebf\u7a0b\n        volatile jlong _recursions;      // \u9501\u7684\u91cd\u5165\u6b21\u6570\n        ObjectWaiter* volatile _cxq;     // \u7ade\u4e89\u961f\u5217\n        ObjectWaiter* volatile _EntryList; // \u7b49\u5f85\u961f\u5217\n        ObjectWaiter* volatile _WaitSet;   // wait\u96c6\u5408\n        volatile jint _waiters;          // \u7b49\u5f85\u7ebf\u7a0b\u6570\n        volatile jint _WaitSetLock;      // WaitSet\u9501\n};\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9501\u5347\u7ea7\u793a\u4f8b\u4ee3\u7801\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class LockEscalationDemo {\n    private final Object lock = new Object();\n    \n    public static void main(String[] args) throws InterruptedException {\n        LockEscalationDemo demo = new LockEscalationDemo();\n        \n        // \u9636\u6bb51\uff1a\u504f\u5411\u9501\n        System.out.println("=== \u504f\u5411\u9501\u9636\u6bb5 ===");\n        demo.stage1_BiasedLock();\n        \n        // \u9636\u6bb52\uff1a\u8f7b\u91cf\u7ea7\u9501  \n        System.out.println("=== \u8f7b\u91cf\u7ea7\u9501\u9636\u6bb5 ===");\n        demo.stage2_LightweightLock();\n        \n        // \u9636\u6bb53\uff1a\u91cd\u91cf\u7ea7\u9501\n        System.out.println("=== \u91cd\u91cf\u7ea7\u9501\u9636\u6bb5 ===");\n        demo.stage3_HeavyweightLock();\n    }\n    \n    // \u504f\u5411\u9501\uff1a\u5355\u7ebf\u7a0b\u91cd\u590d\u83b7\u53d6\n    private void stage1_BiasedLock() {\n        for (int i = 0; i < 5; i++) {\n            synchronized (lock) {\n                System.out.println("\u504f\u5411\u9501\u6267\u884c: " + i);\n            }\n        }\n    }\n    \n    // \u8f7b\u91cf\u7ea7\u9501\uff1a\u5c11\u91cf\u7ade\u4e89\n    private void stage2_LightweightLock() throws InterruptedException {\n        CountDownLatch latch = new CountDownLatch(2);\n        \n        // \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u83b7\u53d6\u9501\n        for (int i = 0; i < 2; i++) {\n            new Thread(() -> {\n                for (int j = 0; j < 3; j++) {\n                    synchronized (lock) {\n                        System.out.println("\u8f7b\u91cf\u7ea7\u9501: " + Thread.currentThread().getName());\n                        try {\n                            Thread.sleep(10);\n                        } catch (InterruptedException e) {\n                            Thread.currentThread().interrupt();\n                        }\n                    }\n                }\n                latch.countDown();\n            }, "Thread-" + i).start();\n        }\n        \n        latch.await();\n    }\n    \n    // \u91cd\u91cf\u7ea7\u9501\uff1a\u6fc0\u70c8\u7ade\u4e89\n    private void stage3_HeavyweightLock() throws InterruptedException {\n        CountDownLatch latch = new CountDownLatch(10);\n        \n        // \u521b\u5efa10\u4e2a\u7ebf\u7a0b\u6fc0\u70c8\u7ade\u4e89\n        for (int i = 0; i < 10; i++) {\n            new Thread(() -> {\n                for (int j = 0; j < 100; j++) {\n                    synchronized (lock) {\n                        // \u6a21\u62df\u5de5\u4f5c\n                        try {\n                            Thread.sleep(1);\n                        } catch (InterruptedException e) {\n                            Thread.currentThread().interrupt();\n                        }\n                    }\n                }\n                latch.countDown();\n            }, "HeavyThread-" + i).start();\n        }\n        \n        latch.await();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"JVM\u53c2\u6570\u8c03\u4f18\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u7981\u7528\u504f\u5411\u9501\n-XX:-UseBiasedLocking\n\n# \u8bbe\u7f6e\u504f\u5411\u9501\u5ef6\u8fdf\u542f\u52a8\u65f6\u95f4\uff08\u9ed8\u8ba44000ms\uff09\n-XX:BiasedLockingStartupDelay=0\n\n# \u8bbe\u7f6e\u81ea\u65cb\u6b21\u6570\uff08JDK6\u4ee5\u524d\uff09\n-XX:PreBlockSpin=10\n\n# \u542f\u7528\u81ea\u9002\u5e94\u81ea\u65cb\n-XX:+UseSpinning\n\n# \u6253\u5370\u9501\u76f8\u5173\u4fe1\u606f\n-XX:+PrintGCDetails -XX:+PrintConcurrentLocks\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9501\u4f18\u5316\u6280\u672f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u9501\u7c97\u5316\uff08Lock Coarsening\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u4f18\u5316\u524d\uff1a\u9891\u7e41\u52a0\u9501\u89e3\u9501\npublic void inefficient() {\n    synchronized (this) { i++; }\n    synchronized (this) { j++; }\n    synchronized (this) { k++; }\n}\n\n// \u4f18\u5316\u540e\uff1a\u9501\u7c97\u5316\npublic void efficient() {\n    synchronized (this) { \n        i++; \n        j++; \n        k++; \n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u9501\u6d88\u9664\uff08Lock Elimination\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// JVM\u80fd\u68c0\u6d4b\u5230\u4e0d\u53ef\u80fd\u6709\u7ade\u4e89\u7684\u9501\u5e76\u6d88\u9664\npublic void lockElimination() {\n    StringBuffer sb = new StringBuffer();  // \u5c40\u90e8\u53d8\u91cf\uff0c\u4e0d\u4f1a\u9003\u9038\n    sb.append("a");  // StringBuffer.append\u662f\u540c\u6b65\u7684\uff0c\u4f46JVM\u4f1a\u6d88\u9664\u9501\n    sb.append("b");\n    return sb.toString();\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u9003\u9038\u5206\u6790"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u5bf9\u8c61\u4e0d\u9003\u9038\u51fa\u65b9\u6cd5\uff0cJVM\u53ef\u80fd\u8fdb\u884c\u9501\u6d88\u9664\npublic String noEscape() {\n    StringBuilder sb = new StringBuilder();\n    sb.append("hello");\n    sb.append("world");\n    return sb.toString();  // sb\u5bf9\u8c61\u4e0d\u9003\u9038\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u76d1\u63a7\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class SynchronizedMonitor {\n    \n    // \u4f7f\u7528JMX\u76d1\u63a7\u9501\u4fe1\u606f\n    public void monitorLocks() {\n        ThreadMXBean threadMX = ManagementFactory.getThreadMXBean();\n        \n        if (threadMX.isObjectMonitorUsageSupported()) {\n            ThreadInfo[] threadInfos = threadMX.dumpAllThreads(true, true);\n            \n            for (ThreadInfo info : threadInfos) {\n                MonitorInfo[] monitors = info.getLockedMonitors();\n                LockInfo[] locks = info.getLockedSynchronizers();\n                \n                if (monitors.length > 0 || locks.length > 0) {\n                    System.out.println("Thread: " + info.getThreadName());\n                    for (MonitorInfo monitor : monitors) {\n                        System.out.println("  Locked monitor: " + monitor);\n                    }\n                    for (LockInfo lock : locks) {\n                        System.out.println("  Locked synchronizer: " + lock);\n                    }\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u51cf\u5c11\u9501\u7684\u6301\u6709\u65f6\u95f4"}),"\n",(0,i.jsx)(e.li,{children:"\u964d\u4f4e\u9501\u7684\u7c92\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u4f7f\u7528\u8bfb\u5199\u9501\u5206\u79bb"}),"\n",(0,i.jsx)(e.li,{children:"\u5c3d\u91cf\u4f7f\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784"}),"\n",(0,i.jsx)(e.li,{children:"\u907f\u514d\u9501\u5d4c\u5957"}),"\n",(0,i.jsx)(e.li,{children:"\u8003\u8651\u4f7f\u7528\u5e76\u53d1\u5de5\u5177\u7c7b"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"148-\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u79d2\u6740\u529f\u80fd",children:"148. \u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u79d2\u6740\u529f\u80fd\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--danger",children:"\u56f0\u96be"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u7cfb\u7edf\u8bbe\u8ba1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u573a\u666f\u9898"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\u7528\u6237\u7aef -> CDN -> \u8d1f\u8f7d\u5747\u8861 -> \u7f51\u5173\u5c42 -> \u4e1a\u52a1\u5c42 -> \u6570\u636e\u5c42\n        \u2193         \u2193         \u2193        \u2193       \u2193\n      \u9759\u6001\u8d44\u6e90   \u6d41\u91cf\u5206\u53d1    \u9650\u6d41     \u7f13\u5b58    \u6570\u636e\u5e93\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6838\u5fc3\u6311\u6218\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u5e76\u53d1"}),"\uff1a\u77ac\u95f4\u5927\u91cf\u8bf7\u6c42"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5e93\u5b58\u4e00\u81f4\u6027"}),"\uff1a\u9632\u6b62\u8d85\u5356"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7cfb\u7edf\u7a33\u5b9a\u6027"}),"\uff1a\u9632\u6b62\u7cfb\u7edf\u5d29\u6e83"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7528\u6237\u4f53\u9a8c"}),"\uff1a\u54cd\u5e94\u901f\u5ea6"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u8be6\u7ec6\u8bbe\u8ba1\u65b9\u6848\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u524d\u7aef\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// \u524d\u7aef\u9650\u6d41\u548c\u9632\u91cd\u590d\u63d0\u4ea4\nclass SeckillButton {\n    constructor() {\n        this.isSubmitting = false;\n        this.countdown = 0;\n    }\n    \n    // \u9632\u91cd\u590d\u70b9\u51fb\n    async handleSeckill() {\n        if (this.isSubmitting) {\n            return;\n        }\n        \n        this.isSubmitting = true;\n        this.startCountdown(3); // 3\u79d2\u5012\u8ba1\u65f6\n        \n        try {\n            const result = await this.submitSeckill();\n            this.handleResult(result);\n        } catch (error) {\n            this.handleError(error);\n        } finally {\n            this.isSubmitting = false;\n        }\n    }\n    \n    startCountdown(seconds) {\n        this.countdown = seconds;\n        const timer = setInterval(() => {\n            this.countdown--;\n            if (this.countdown <= 0) {\n                clearInterval(timer);\n            }\n        }, 1000);\n    }\n    \n    // \u957f\u8f6e\u8be2\u83b7\u53d6\u79d2\u6740\u7ed3\u679c\n    async pollResult(orderId) {\n        const maxAttempts = 10;\n        let attempts = 0;\n        \n        while (attempts < maxAttempts) {\n            try {\n                const result = await fetch(`/api/seckill/result/${orderId}`);\n                const data = await result.json();\n                \n                if (data.status !== 'PROCESSING') {\n                    return data;\n                }\n                \n                await new Promise(resolve => setTimeout(resolve, 1000));\n                attempts++;\n            } catch (error) {\n                attempts++;\n            }\n        }\n        \n        return { status: 'TIMEOUT' };\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u7f51\u5173\u5c42\u9650\u6d41"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class SeckillRateLimiter {\n    \n    private final RedisTemplate<String, String> redisTemplate;\n    \n    // \u6ed1\u52a8\u7a97\u53e3\u9650\u6d41\n    private static final String RATE_LIMIT_SCRIPT = \n        "local key = KEYS[1] " +\n        "local window = tonumber(ARGV[1]) " +\n        "local limit = tonumber(ARGV[2]) " +\n        "local now = tonumber(ARGV[3]) " +\n        "local clearBefore = now - window * 1000 " +\n        \n        "redis.call(\'zremrangebyscore\', key, 0, clearBefore) " +\n        "local current = redis.call(\'zcard\', key) " +\n        \n        "if current < limit then " +\n        "    redis.call(\'zadd\', key, now, now) " +\n        "    redis.call(\'expire\', key, window) " +\n        "    return 1 " +\n        "else " +\n        "    return 0 " +\n        "end";\n    \n    public boolean isAllowed(String userId, int windowSeconds, int limit) {\n        String key = "rate_limit:seckill:" + userId;\n        long now = System.currentTimeMillis();\n        \n        DefaultRedisScript<Long> script = new DefaultRedisScript<>();\n        script.setScriptText(RATE_LIMIT_SCRIPT);\n        script.setResultType(Long.class);\n        \n        Long result = redisTemplate.execute(script,\n                Collections.singletonList(key),\n                String.valueOf(windowSeconds),\n                String.valueOf(limit),\n                String.valueOf(now));\n        \n        return Long.valueOf(1L).equals(result);\n    }\n    \n    // \u4ee4\u724c\u6876\u9650\u6d41\n    @Component\n    public class TokenBucketLimiter {\n        private final AtomicLong tokens = new AtomicLong(1000);\n        private final long capacity = 1000;\n        private final long refillRate = 100; // \u6bcf\u79d2\u8865\u5145100\u4e2a\u4ee4\u724c\n        private volatile long lastRefillTime = System.currentTimeMillis();\n        \n        public boolean tryAcquire() {\n            refillTokens();\n            return tokens.getAndDecrement() > 0;\n        }\n        \n        private void refillTokens() {\n            long now = System.currentTimeMillis();\n            long timeSinceLastRefill = now - lastRefillTime;\n            \n            if (timeSinceLastRefill > 1000) { // \u6bcf\u79d2\u8865\u5145\n                long tokensToAdd = (timeSinceLastRefill / 1000) * refillRate;\n                long newTokens = Math.min(capacity, tokens.get() + tokensToAdd);\n                tokens.set(newTokens);\n                lastRefillTime = now;\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5e93\u5b58\u7ba1\u7406"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class SeckillStockService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    // Redis\u9884\u6263\u5e93\u5b58\u811a\u672c\n    private static final String DEDUCT_STOCK_SCRIPT = \n        "local stockKey = KEYS[1] " +\n        "local userId = ARGV[1] " +\n        "local quantity = tonumber(ARGV[2]) " +\n        "local userKey = \'seckill:user:\' .. userId " +\n        \n        "-- \u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u53c2\u4e0e\u8fc7 " +\n        "if redis.call(\'exists\', userKey) == 1 then " +\n        "    return {-1, \'Already participated\'} " +\n        "end " +\n        \n        "-- \u68c0\u67e5\u5e93\u5b58 " +\n        "local stock = redis.call(\'get\', stockKey) " +\n        "if stock == false then " +\n        "    return {-2, \'Stock not found\'} " +\n        "end " +\n        \n        "stock = tonumber(stock) " +\n        "if stock >= quantity then " +\n        "    redis.call(\'decrby\', stockKey, quantity) " +\n        "    redis.call(\'setex\', userKey, 300, 1) -- 5\u5206\u949f\u8fc7\u671f " +\n        "    return {stock - quantity, \'Success\'} " +\n        "else " +\n        "    return {stock, \'Insufficient stock\'} " +\n        "end";\n    \n    public StockResult deductStock(Long productId, String userId, int quantity) {\n        String stockKey = "seckill:stock:" + productId;\n        \n        DefaultRedisScript<List> script = new DefaultRedisScript<>();\n        script.setScriptText(DEDUCT_STOCK_SCRIPT);\n        script.setResultType(List.class);\n        \n        List<Object> result = redisTemplate.execute(script,\n                Collections.singletonList(stockKey),\n                userId, String.valueOf(quantity));\n        \n        if (result != null && result.size() == 2) {\n            int remainingStock = Integer.parseInt(result.get(0).toString());\n            String message = result.get(1).toString();\n            return new StockResult(remainingStock, message);\n        }\n        \n        return new StockResult(-1, "Script execution failed");\n    }\n    \n    // \u5f02\u6b65\u540c\u6b65\u5e93\u5b58\u5230\u6570\u636e\u5e93\n    @Async\n    public void syncStockToDatabase(Long productId) {\n        String stockKey = "seckill:stock:" + productId;\n        Object redisStock = redisTemplate.opsForValue().get(stockKey);\n        \n        if (redisStock != null) {\n            int stock = Integer.parseInt(redisStock.toString());\n            // \u6279\u91cf\u66f4\u65b0\u6570\u636e\u5e93\uff0c\u51cf\u5c11\u6570\u636e\u5e93\u538b\u529b\n            productRepository.updateStock(productId, stock);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u8ba2\u5355\u5904\u7406"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class SeckillOrderService {\n    \n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    // \u5f02\u6b65\u5904\u7406\u8ba2\u5355\n    public String createSeckillOrder(SeckillRequest request) {\n        // \u751f\u6210\u8ba2\u5355ID\n        String orderId = generateOrderId();\n        \n        // \u521b\u5efa\u8ba2\u5355\u6d88\u606f\n        SeckillOrderMessage message = SeckillOrderMessage.builder()\n                .orderId(orderId)\n                .userId(request.getUserId())\n                .productId(request.getProductId())\n                .quantity(request.getQuantity())\n                .createTime(LocalDateTime.now())\n                .build();\n        \n        // \u53d1\u9001\u5230\u6d88\u606f\u961f\u5217\u5f02\u6b65\u5904\u7406\n        rabbitTemplate.convertAndSend("seckill.order.exchange", \n                "seckill.order.create", message);\n        \n        // \u8bbe\u7f6e\u8ba2\u5355\u72b6\u6001\u4e3a\u5904\u7406\u4e2d\n        redisTemplate.opsForValue().set(\n                "seckill:order:status:" + orderId, \n                "PROCESSING", \n                Duration.ofMinutes(5));\n        \n        return orderId;\n    }\n    \n    // \u6d88\u606f\u961f\u5217\u6d88\u8d39\u8005\n    @RabbitListener(queues = "seckill.order.queue")\n    public void processSeckillOrder(SeckillOrderMessage message) {\n        try {\n            // 1. \u9a8c\u8bc1\u7528\u6237\u548c\u5546\u54c1\n            if (!validateUser(message.getUserId()) || \n                !validateProduct(message.getProductId())) {\n                updateOrderStatus(message.getOrderId(), "FAILED", "Validation failed");\n                return;\n            }\n            \n            // 2. \u521b\u5efa\u8ba2\u5355\n            Order order = Order.builder()\n                    .orderId(message.getOrderId())\n                    .userId(message.getUserId())\n                    .productId(message.getProductId())\n                    .quantity(message.getQuantity())\n                    .status(OrderStatus.UNPAID)\n                    .createTime(message.getCreateTime())\n                    .build();\n            \n            orderRepository.save(order);\n            \n            // 3. \u66f4\u65b0\u8ba2\u5355\u72b6\u6001\n            updateOrderStatus(message.getOrderId(), "SUCCESS", "Order created");\n            \n            // 4. \u53d1\u9001\u652f\u4ed8\u8d85\u65f6\u6d88\u606f\uff08\u5ef6\u8fdf\u6d88\u606f\uff09\n            sendPaymentTimeoutMessage(message.getOrderId(), 15 * 60 * 1000); // 15\u5206\u949f\n            \n        } catch (Exception e) {\n            log.error("Process seckill order failed", e);\n            updateOrderStatus(message.getOrderId(), "FAILED", e.getMessage());\n            \n            // \u56de\u6eda\u5e93\u5b58\n            rollbackStock(message.getProductId(), message.getQuantity());\n        }\n    }\n    \n    private void updateOrderStatus(String orderId, String status, String message) {\n        String key = "seckill:order:status:" + orderId;\n        Map<String, Object> statusInfo = Map.of(\n                "status", status,\n                "message", message,\n                "updateTime", LocalDateTime.now()\n        );\n        redisTemplate.opsForValue().set(key, statusInfo, Duration.ofHours(1));\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u7f13\u5b58\u7b56\u7565"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class SeckillCacheService {\n    \n    // \u591a\u7ea7\u7f13\u5b58\n    @Cacheable(value = "seckill:product", key = "#productId")\n    public SeckillProduct getProduct(Long productId) {\n        return productRepository.findById(productId);\n    }\n    \n    // \u9884\u70ed\u7f13\u5b58\n    @PostConstruct\n    public void warmUpCache() {\n        List<SeckillActivity> activities = seckillActivityRepository.findUpcoming();\n        \n        for (SeckillActivity activity : activities) {\n            // \u9884\u70ed\u5546\u54c1\u4fe1\u606f\n            String productKey = "seckill:product:" + activity.getProductId();\n            redisTemplate.opsForValue().set(productKey, activity.getProduct(), Duration.ofHours(1));\n            \n            // \u9884\u70ed\u5e93\u5b58\u4fe1\u606f\n            String stockKey = "seckill:stock:" + activity.getProductId();\n            redisTemplate.opsForValue().set(stockKey, activity.getStock(), Duration.ofHours(2));\n        }\n    }\n    \n    // \u5206\u5e03\u5f0f\u9501\u9632\u6b62\u7f13\u5b58\u51fb\u7a7f\n    public SeckillProduct getProductWithLock(Long productId) {\n        String lockKey = "lock:seckill:product:" + productId;\n        String lockValue = UUID.randomUUID().toString();\n        \n        try {\n            // \u5c1d\u8bd5\u83b7\u53d6\u5206\u5e03\u5f0f\u9501\n            Boolean lockAcquired = redisTemplate.opsForValue()\n                    .setIfAbsent(lockKey, lockValue, Duration.ofSeconds(10));\n            \n            if (Boolean.TRUE.equals(lockAcquired)) {\n                // \u83b7\u53d6\u9501\u6210\u529f\uff0c\u67e5\u8be2\u6570\u636e\u5e93\n                SeckillProduct product = productRepository.findById(productId);\n                if (product != null) {\n                    // \u66f4\u65b0\u7f13\u5b58\n                    redisTemplate.opsForValue().set(\n                            "seckill:product:" + productId, \n                            product, \n                            Duration.ofMinutes(30));\n                }\n                return product;\n            } else {\n                // \u83b7\u53d6\u9501\u5931\u8d25\uff0c\u7a0d\u7b49\u540e\u91cd\u8bd5\n                Thread.sleep(50);\n                return getProduct(productId);\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            return null;\n        } finally {\n            // \u91ca\u653e\u9501\n            releaseLock(lockKey, lockValue);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u76d1\u63a7\u544a\u8b66"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class SeckillMonitor {\n    \n    @Autowired\n    private MeterRegistry meterRegistry;\n    \n    // \u76d1\u63a7\u6307\u6807\n    private final Counter seckillRequestCounter = Counter.builder("seckill.requests")\n            .description("Seckill request count")\n            .register(meterRegistry);\n    \n    private final Timer seckillResponseTimer = Timer.builder("seckill.response.time")\n            .description("Seckill response time")\n            .register(meterRegistry);\n    \n    private final Gauge stockGauge = Gauge.builder("seckill.stock")\n            .description("Remaining stock")\n            .register(meterRegistry, this, SeckillMonitor::getCurrentStock);\n    \n    public void recordRequest() {\n        seckillRequestCounter.increment();\n    }\n    \n    public void recordResponseTime(long timeMs) {\n        seckillResponseTimer.record(timeMs, TimeUnit.MILLISECONDS);\n    }\n    \n    private double getCurrentStock() {\n        // \u83b7\u53d6\u5f53\u524d\u5e93\u5b58\u603b\u6570\n        return stockService.getTotalStock();\n    }\n    \n    // \u5b9e\u65f6\u76d1\u63a7\u548c\u544a\u8b66\n    @Scheduled(fixedRate = 5000) // \u6bcf5\u79d2\u68c0\u67e5\u4e00\u6b21\n    public void checkSystemHealth() {\n        // \u68c0\u67e5\u7cfb\u7edf\u6307\u6807\n        double cpuUsage = systemMetrics.getCpuUsage();\n        double memoryUsage = systemMetrics.getMemoryUsage();\n        long activeConnections = networkMetrics.getActiveConnections();\n        \n        if (cpuUsage > 80) {\n            alertService.sendAlert(AlertLevel.HIGH, "High CPU usage: " + cpuUsage + "%");\n        }\n        \n        if (memoryUsage > 85) {\n            alertService.sendAlert(AlertLevel.HIGH, "High memory usage: " + memoryUsage + "%");\n        }\n        \n        if (activeConnections > 10000) {\n            alertService.sendAlert(AlertLevel.MEDIUM, "High connection count: " + activeConnections);\n        }\n        \n        // \u68c0\u67e5Redis\u8fde\u63a5\n        try {\n            redisTemplate.opsForValue().get("health:check");\n        } catch (Exception e) {\n            alertService.sendAlert(AlertLevel.CRITICAL, "Redis connection failed: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u4f18\u5316\u8981\u70b9\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8bfb\u5199\u5206\u79bb"}),"\uff1a\u8bfb\u591a\u5199\u5c11\u573a\u666f\u4f18\u5316"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6570\u636e\u5e93\u5206\u7247"}),"\uff1a\u5206\u6563\u6570\u636e\u5e93\u538b\u529b"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"CDN\u52a0\u901f"}),"\uff1a\u9759\u6001\u8d44\u6e90\u7f13\u5b58"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5f02\u6b65\u5904\u7406"}),"\uff1a\u524a\u5cf0\u586b\u8c37"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7194\u65ad\u964d\u7ea7"}),"\uff1a\u4fdd\u62a4\u7cfb\u7edf\u7a33\u5b9a\u6027"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5bb9\u91cf\u8bc4\u4f30\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5bb9\u91cf\u89c4\u5212\u793a\u4f8b\npublic class CapacityPlanning {\n    // \u5047\u8bbe\u76ee\u6807\uff1a\u652f\u630110\u4e07\u4eba\u540c\u65f6\u62a2\u8d2d1000\u4ef6\u5546\u54c1\n    public static final int CONCURRENT_USERS = 100_000;\n    public static final int TOTAL_STOCK = 1000;\n    public static final int PEAK_QPS = 50_000; // \u5cf0\u503cQPS\n    \n    // \u670d\u52a1\u5668\u914d\u7f6e\n    public static final int SERVER_COUNT = 20;           // \u5e94\u7528\u670d\u52a1\u5668\u6570\u91cf\n    public static final int REDIS_CLUSTER_SIZE = 6;      // Redis\u96c6\u7fa4\u5927\u5c0f\n    public static final int DB_CONNECTION_POOL = 50;     // \u6570\u636e\u5e93\u8fde\u63a5\u6c60\n    \n    // \u7f13\u5b58\u5bb9\u91cf\n    public static final long REDIS_MEMORY = 16L * 1024 * 1024 * 1024; // 16GB\n    public static final int CACHE_EXPIRE_TIME = 3600; // 1\u5c0f\u65f6\n}\n"})}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"149-\u4e3a\u4ec0\u4e48\u4e0d\u9009\u62e9\u4f7f\u7528\u539f\u751f\u7684-nio-\u800c\u9009\u62e9\u4f7f\u7528-netty-\u5462",children:"149. \u4e3a\u4ec0\u4e48\u4e0d\u9009\u62e9\u4f7f\u7528\u539f\u751f\u7684 NIO \u800c\u9009\u62e9\u4f7f\u7528 Netty \u5462\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Netty"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u539f\u751fNIO\u7684\u95ee\u9898\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u5f00\u53d1\u590d\u6742\u5ea6\u9ad8"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u539f\u751fNIO\u670d\u52a1\u5668\u793a\u4f8b\npublic class NIOServer {\n    public void startServer() throws IOException {\n        Selector selector = Selector.open();\n        ServerSocketChannel serverChannel = ServerSocketChannel.open();\n        serverChannel.configureBlocking(false);\n        serverChannel.bind(new InetSocketAddress(8080));\n        serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n        \n        while (true) {\n            selector.select();\n            Set<SelectionKey> selectedKeys = selector.selectedKeys();\n            Iterator<SelectionKey> iterator = selectedKeys.iterator();\n            \n            while (iterator.hasNext()) {\n                SelectionKey key = iterator.next();\n                iterator.remove();\n                \n                if (key.isAcceptable()) {\n                    handleAccept(key);\n                } else if (key.isReadable()) {\n                    handleRead(key);\n                } else if (key.isWritable()) {\n                    handleWrite(key);\n                }\n            }\n        }\n    }\n    \n    private void handleAccept(SelectionKey key) throws IOException {\n        ServerSocketChannel serverChannel = (ServerSocketChannel) key.channel();\n        SocketChannel clientChannel = serverChannel.accept();\n        clientChannel.configureBlocking(false);\n        clientChannel.register(key.selector(), SelectionKey.OP_READ);\n    }\n    \n    private void handleRead(SelectionKey key) throws IOException {\n        SocketChannel channel = (SocketChannel) key.channel();\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        \n        int bytesRead = channel.read(buffer);\n        if (bytesRead > 0) {\n            buffer.flip();\n            // \u5904\u7406\u6570\u636e - \u9700\u8981\u81ea\u5df1\u5904\u7406\u534a\u5305\u3001\u7c98\u5305\u95ee\u9898\n            processData(buffer);\n            buffer.clear();\n        } else if (bytesRead < 0) {\n            // \u8fde\u63a5\u5173\u95ed\n            key.cancel();\n            channel.close();\n        }\n    }\n    \n    // \u9700\u8981\u81ea\u5df1\u5904\u7406\u5404\u79cd\u8fb9\u754c\u60c5\u51b5...\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u534a\u5305/\u7c98\u5305\u95ee\u9898\u590d\u6742"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u539f\u751fNIO\u9700\u8981\u81ea\u5df1\u5904\u7406\u534a\u5305\u7c98\u5305\npublic class PacketHandler {\n    private ByteBuffer incompleteBuffer = ByteBuffer.allocate(4096);\n    \n    public List<Packet> handlePackets(ByteBuffer data) {\n        List<Packet> packets = new ArrayList<>();\n        \n        // \u5408\u5e76\u4e4b\u524d\u672a\u5b8c\u6210\u7684\u6570\u636e\n        if (incompleteBuffer.position() > 0) {\n            incompleteBuffer.put(data.array(), 0, data.remaining());\n            incompleteBuffer.flip();\n            data = incompleteBuffer;\n        }\n        \n        while (data.remaining() >= 4) { // \u5047\u8bbe\u5305\u59344\u5b57\u8282\n            int packetLength = data.getInt();\n            \n            if (data.remaining() >= packetLength) {\n                // \u5b8c\u6574\u5305\n                byte[] packetData = new byte[packetLength];\n                data.get(packetData);\n                packets.add(new Packet(packetData));\n            } else {\n                // \u534a\u5305\uff0c\u4fdd\u5b58\u5230\u7f13\u51b2\u533a\n                data.position(data.position() - 4);\n                incompleteBuffer.clear();\n                incompleteBuffer.put(data);\n                break;\n            }\n        }\n        \n        return packets;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5185\u5b58\u7ba1\u7406\u56f0\u96be"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u539f\u751fNIO\u5185\u5b58\u7ba1\u7406\npublic class BufferManager {\n    // \u9700\u8981\u624b\u52a8\u7ba1\u7406ByteBuffer\u7684\u5206\u914d\u548c\u56de\u6536\n    private final Queue<ByteBuffer> bufferPool = new ConcurrentLinkedQueue<>();\n    \n    public ByteBuffer allocateBuffer() {\n        ByteBuffer buffer = bufferPool.poll();\n        if (buffer == null) {\n            buffer = ByteBuffer.allocateDirect(8192); // \u76f4\u63a5\u5185\u5b58\n        }\n        buffer.clear();\n        return buffer;\n    }\n    \n    public void releaseBuffer(ByteBuffer buffer) {\n        if (buffer.isDirect() && buffer.capacity() <= 8192) {\n            bufferPool.offer(buffer);\n        }\n        // \u76f4\u63a5\u5185\u5b58\u9700\u8981\u624b\u52a8\u7ba1\u7406\uff0c\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Netty\u7684\u4f18\u52bf\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u7b80\u5316\u7684API"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Netty\u670d\u52a1\u5668\u793a\u4f8b\npublic class NettyServer {\n    public void start() throws InterruptedException {\n        EventLoopGroup bossGroup = new NioEventLoopGroup(1);\n        EventLoopGroup workerGroup = new NioEventLoopGroup();\n        \n        try {\n            ServerBootstrap bootstrap = new ServerBootstrap();\n            bootstrap.group(bossGroup, workerGroup)\n                    .channel(NioServerSocketChannel.class)\n                    .childHandler(new ChannelInitializer<SocketChannel>() {\n                        @Override\n                        protected void initChannel(SocketChannel ch) {\n                            ChannelPipeline pipeline = ch.pipeline();\n                            \n                            // \u81ea\u52a8\u5904\u7406\u534a\u5305\u7c98\u5305\n                            pipeline.addLast(new LengthFieldBasedFrameDecoder(\n                                    1024 * 1024, 0, 4, 0, 4));\n                            pipeline.addLast(new LengthFieldPrepender(4));\n                            \n                            // \u81ea\u5b9a\u4e49\u4e1a\u52a1\u5904\u7406\u5668\n                            pipeline.addLast(new ServerHandler());\n                        }\n                    });\n            \n            ChannelFuture future = bootstrap.bind(8080).sync();\n            future.channel().closeFuture().sync();\n        } finally {\n            bossGroup.shutdownGracefully();\n            workerGroup.shutdownGracefully();\n        }\n    }\n}\n\n// \u7b80\u5355\u7684\u4e1a\u52a1\u5904\u7406\u5668\npublic class ServerHandler extends ChannelInboundHandlerAdapter {\n    @Override\n    public void channelRead(ChannelHandlerContext ctx, Object msg) {\n        ByteBuf buffer = (ByteBuf) msg;\n        \n        try {\n            // \u81ea\u52a8\u5904\u7406\u4e86\u534a\u5305\u7c98\u5305\uff0c\u76f4\u63a5\u5904\u7406\u5b8c\u6574\u6570\u636e\n            byte[] data = new byte[buffer.readableBytes()];\n            buffer.readBytes(data);\n            \n            // \u5904\u7406\u4e1a\u52a1\u903b\u8f91\n            String response = processRequest(new String(data));\n            \n            // \u53d1\u9001\u54cd\u5e94\n            ctx.writeAndFlush(Unpooled.copiedBuffer(response.getBytes()));\n        } finally {\n            buffer.release(); // \u81ea\u52a8\u5185\u5b58\u7ba1\u7406\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u81ea\u52a8\u5904\u7406\u534a\u5305\u7c98\u5305"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Netty\u63d0\u4f9b\u591a\u79cd\u89e3\u7801\u5668\npublic class DecoderExamples {\n    \n    public void addDecoders(ChannelPipeline pipeline) {\n        // 1. \u56fa\u5b9a\u957f\u5ea6\u89e3\u7801\u5668\n        pipeline.addLast(new FixedLengthFrameDecoder(20));\n        \n        // 2. \u5206\u9694\u7b26\u89e3\u7801\u5668\n        pipeline.addLast(new DelimiterBasedFrameDecoder(1024, \n                Delimiters.lineDelimiter()));\n        \n        // 3. \u957f\u5ea6\u5b57\u6bb5\u89e3\u7801\u5668\n        pipeline.addLast(new LengthFieldBasedFrameDecoder(\n                65536,  // maxFrameLength\n                0,      // lengthFieldOffset\n                4,      // lengthFieldLength\n                0,      // lengthAdjustment\n                4       // initialBytesToStrip\n        ));\n        \n        // 4. \u81ea\u5b9a\u4e49\u534f\u8bae\u89e3\u7801\u5668\n        pipeline.addLast(new CustomProtocolDecoder());\n    }\n}\n\n// \u81ea\u5b9a\u4e49\u89e3\u7801\u5668\u793a\u4f8b\npublic class CustomProtocolDecoder extends ByteToMessageDecoder {\n    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) {\n        if (in.readableBytes() < 8) { // \u534f\u8bae\u59348\u5b57\u8282\n            return; // \u7b49\u5f85\u66f4\u591a\u6570\u636e\n        }\n        \n        in.markReaderIndex(); // \u6807\u8bb0\u5f53\u524d\u4f4d\u7f6e\n        \n        int magic = in.readInt();\n        if (magic != 0x12345678) {\n            in.resetReaderIndex();\n            throw new RuntimeException("Invalid magic number");\n        }\n        \n        int length = in.readInt();\n        if (in.readableBytes() < length) {\n            in.resetReaderIndex(); // \u91cd\u7f6e\u5230\u6807\u8bb0\u4f4d\u7f6e\n            return; // \u7b49\u5f85\u66f4\u591a\u6570\u636e\n        }\n        \n        // \u8bfb\u53d6\u5b8c\u6574\u6570\u636e\u5305\n        ByteBuf frame = in.readBytes(length);\n        out.add(frame);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u9ad8\u6548\u7684\u5185\u5b58\u7ba1\u7406"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Netty\u7684ByteBuf\u4f18\u52bf\npublic class ByteBufExamples {\n    \n    public void demonstrateByteBuffer() {\n        // \u539f\u751fByteBuffer\u95ee\u9898\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        buffer.put("Hello".getBytes());\n        buffer.flip(); // \u9700\u8981\u624b\u52a8flip\n        \n        byte[] data = new byte[buffer.remaining()];\n        buffer.get(data);\n        // \u8bfb\u5199\u6a21\u5f0f\u5207\u6362\u590d\u6742\n    }\n    \n    public void demonstrateByteBuf() {\n        // Netty ByteBuf\u4f18\u52bf\n        ByteBuf buffer = Unpooled.buffer(1024);\n        \n        // 1. \u8bfb\u5199\u6307\u9488\u5206\u79bb\uff0c\u65e0\u9700flip\n        buffer.writeBytes("Hello".getBytes());\n        buffer.writeInt(42);\n        \n        byte[] data = new byte[5];\n        buffer.readBytes(data);\n        int value = buffer.readInt();\n        \n        // 2. \u5f15\u7528\u8ba1\u6570\uff0c\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\n        buffer.release();\n        \n        // 3. \u96f6\u62f7\u8d1d\u652f\u6301\n        ByteBuf composite = Unpooled.compositeBuffer();\n        composite.addComponent(true, buffer1);\n        composite.addComponent(true, buffer2);\n        // \u4e0d\u9700\u8981\u6570\u636e\u62f7\u8d1d\n    }\n    \n    public void pooledBuffers() {\n        // 4. \u5185\u5b58\u6c60\u5316\n        ByteBuf pooled = PooledByteBufAllocator.DEFAULT.buffer(1024);\n        try {\n            // \u4f7f\u7528pooled buffer\n        } finally {\n            pooled.release(); // \u5f52\u8fd8\u5230\u6c60\u4e2d\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Netty\u7684Pipeline\u8bbe\u8ba1\npublic class PipelineExample {\n    \n    public void setupPipeline(ChannelPipeline pipeline) {\n        // \u5165\u7ad9\u5904\u7406\u5668\u94fe\n        pipeline.addLast("decoder", new MessageDecoder());\n        pipeline.addLast("validator", new MessageValidator());\n        pipeline.addLast("handler", new BusinessHandler());\n        \n        // \u51fa\u7ad9\u5904\u7406\u5668\u94fe\n        pipeline.addLast("encoder", new MessageEncoder());\n        pipeline.addLast("compressor", new CompressionHandler());\n    }\n}\n\n// \u5904\u7406\u5668\u53ef\u4ee5\u7075\u6d3b\u7ec4\u5408\npublic class MessageValidator extends ChannelInboundHandlerAdapter {\n    @Override\n    public void channelRead(ChannelHandlerContext ctx, Object msg) {\n        if (validate(msg)) {\n            ctx.fireChannelRead(msg); // \u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u5904\u7406\u5668\n        } else {\n            ctx.close(); // \u9a8c\u8bc1\u5931\u8d25\uff0c\u5173\u95ed\u8fde\u63a5\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u7ebf\u7a0b\u6a21\u578b\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Netty\u7684Reactor\u6a21\u578b\npublic class ReactorModel {\n    \n    public void singleReactor() {\n        // \u5355Reactor\u5355\u7ebf\u7a0b\n        EventLoopGroup group = new NioEventLoopGroup(1);\n        // \u6240\u6709I/O\u64cd\u4f5c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u5904\u7406\n    }\n    \n    public void multiReactor() {\n        // \u4e3b\u4eceReactor\u6a21\u578b\n        EventLoopGroup bossGroup = new NioEventLoopGroup(1);    // \u63a5\u53d7\u8fde\u63a5\n        EventLoopGroup workerGroup = new NioEventLoopGroup();   // \u5904\u7406I/O\n        \n        ServerBootstrap bootstrap = new ServerBootstrap();\n        bootstrap.group(bossGroup, workerGroup); // \u5206\u79bb\u63a5\u53d7\u548c\u5904\u7406\n    }\n    \n    public void customThreadModel() {\n        // \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6a21\u578b\n        EventLoopGroup group = new DefaultEventLoopGroup(10); // \u4e1a\u52a1\u7ebf\u7a0b\u6c60\n        \n        pipeline.addLast(group, "business", new BusinessHandler());\n        // \u4e1a\u52a1\u5904\u7406\u5728\u5355\u72ec\u7ebf\u7a0b\u6c60\u4e2d\uff0c\u4e0d\u963b\u585eI/O\u7ebf\u7a0b\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u4e30\u5bcc\u7684\u7f16\u89e3\u7801\u5668"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Netty\u5185\u7f6e\u7f16\u89e3\u7801\u5668\npublic class CodecExamples {\n    \n    public void httpCodec(ChannelPipeline pipeline) {\n        // HTTP\u7f16\u89e3\u7801\u5668\n        pipeline.addLast(new HttpServerCodec());\n        pipeline.addLast(new HttpObjectAggregator(65536));\n        pipeline.addLast(new HttpServerHandler());\n    }\n    \n    public void websocketCodec(ChannelPipeline pipeline) {\n        // WebSocket\u7f16\u89e3\u7801\u5668\n        pipeline.addLast(new HttpServerCodec());\n        pipeline.addLast(new HttpObjectAggregator(65536));\n        pipeline.addLast(new WebSocketServerProtocolHandler("/ws"));\n        pipeline.addLast(new WebSocketHandler());\n    }\n    \n    public void protobufCodec(ChannelPipeline pipeline) {\n        // Protobuf\u7f16\u89e3\u7801\u5668\n        pipeline.addLast(new ProtobufVarint32FrameDecoder());\n        pipeline.addLast(new ProtobufDecoder(MyProto.Message.getDefaultInstance()));\n        pipeline.addLast(new ProtobufVarint32LengthFieldPrepender());\n        pipeline.addLast(new ProtobufEncoder());\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"7. \u8de8\u5e73\u53f0\u548c\u6027\u80fd\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Netty\u7684\u4f20\u8f93\u5c42\u62bd\u8c61\npublic class TransportOptions {\n    \n    public void nioTransport() {\n        // \u6807\u51c6NIO\u4f20\u8f93\uff0c\u8de8\u5e73\u53f0\n        ServerBootstrap bootstrap = new ServerBootstrap();\n        bootstrap.group(bossGroup, workerGroup)\n                .channel(NioServerSocketChannel.class);\n    }\n    \n    public void epollTransport() {\n        // Linux\u4f18\u5316\u4f20\u8f93\n        if (Epoll.isAvailable()) {\n            bootstrap.group(bossGroup, workerGroup)\n                    .channel(EpollServerSocketChannel.class);\n        }\n    }\n    \n    public void kqueueTransport() {\n        // macOS/BSD\u4f18\u5316\u4f20\u8f93\n        if (KQueue.isAvailable()) {\n            bootstrap.group(bossGroup, workerGroup)\n                    .channel(KQueueServerSocketChannel.class);\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u5bf9\u6bd4\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u7b80\u5316\u7684\u6027\u80fd\u6d4b\u8bd5\npublic class PerformanceComparison {\n    \n    // \u539f\u751fNIO\u5b9e\u73b0\u590d\u6742\uff0c\u5bb9\u6613\u51fa\u9519\n    // - \u9700\u8981\u5904\u7406\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\n    // - \u5185\u5b58\u7ba1\u7406\u590d\u6742\n    // - \u4ee3\u7801\u91cf\u5927\uff0c\u7ef4\u62a4\u56f0\u96be\n    \n    // Netty\u5b9e\u73b0\u7b80\u6d01\uff0c\u529f\u80fd\u5f3a\u5927\n    // - \u81ea\u52a8\u5904\u7406\u534f\u8bae\u7ec6\u8282\n    // - \u4f18\u5316\u7684\u5185\u5b58\u7ba1\u7406\n    // - \u4e30\u5bcc\u7684\u7ec4\u4ef6\u751f\u6001\n    \n    // \u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u9009\u62e9\n    public void realWorldChoice() {\n        // \u5982\u679c\u4f60\u662f\uff1a\n        // 1. \u6846\u67b6\u5f00\u53d1\u8005 -> \u53ef\u80fd\u9009\u62e9\u539f\u751fNIO\u83b7\u5f97\u6700\u5927\u63a7\u5236\u6743\n        // 2. \u5e94\u7528\u5f00\u53d1\u8005 -> \u63a8\u8350\u4f7f\u7528Netty\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\n        // 3. \u5b66\u4e60\u8005 -> \u5148\u5b66\u539f\u751fNIO\u7406\u89e3\u539f\u7406\uff0c\u518d\u7528Netty\u5b9e\u6218\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u603b\u7ed3\uff1a\u9009\u62e9Netty\u7684\u539f\u56e0"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5f00\u53d1\u6548\u7387"}),"\uff1a\u5927\u5e45\u51cf\u5c11\u4ee3\u7801\u91cf\u548c\u5f00\u53d1\u65f6\u95f4"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7a33\u5b9a\u6027"}),"\uff1a\u7ecf\u8fc7\u5927\u91cf\u751f\u4ea7\u73af\u5883\u9a8c\u8bc1"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6027\u80fd"}),"\uff1a\u9ad8\u5ea6\u4f18\u5316\u7684\u5b9e\u73b0"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u529f\u80fd\u4e30\u5bcc"}),"\uff1a\u63d0\u4f9b\u5404\u79cd\u534f\u8bae\u652f\u6301"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u793e\u533a\u6d3b\u8dc3"}),"\uff1a\u6301\u7eed\u66f4\u65b0\u548c\u7ef4\u62a4"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5b66\u4e60\u6210\u672c\u4f4e"}),"\uff1aAPI\u8bbe\u8ba1\u53cb\u597d"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"150-\u770b\u8fc7\u6e90\u7801\u5417\u8bf4\u4e0b-spring-\u7531\u54ea\u4e9b\u91cd\u8981\u7684\u6a21\u5757\u7ec4\u6210",children:"150. \u770b\u8fc7\u6e90\u7801\u5417\uff1f\u8bf4\u4e0b Spring \u7531\u54ea\u4e9b\u91cd\u8981\u7684\u6a21\u5757\u7ec4\u6210\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Spring"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Spring\u6846\u67b6\u6a21\u5757\u67b6\u6784\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"Spring Framework\n\u251c\u2500\u2500 spring-core (\u6838\u5fc3\u5bb9\u5668)\n\u251c\u2500\u2500 spring-beans (Bean\u7ba1\u7406)\n\u251c\u2500\u2500 spring-context (\u5e94\u7528\u4e0a\u4e0b\u6587)\n\u251c\u2500\u2500 spring-context-support (\u4e0a\u4e0b\u6587\u652f\u6301)\n\u251c\u2500\u2500 spring-aop (\u9762\u5411\u5207\u9762\u7f16\u7a0b)\n\u251c\u2500\u2500 spring-aspects (AspectJ\u96c6\u6210)\n\u251c\u2500\u2500 spring-web (Web\u57fa\u7840)\n\u251c\u2500\u2500 spring-webmvc (Web MVC)\n\u251c\u2500\u2500 spring-webflux (\u54cd\u5e94\u5f0fWeb)\n\u251c\u2500\u2500 spring-jdbc (\u6570\u636e\u8bbf\u95ee)\n\u251c\u2500\u2500 spring-tx (\u4e8b\u52a1\u7ba1\u7406)\n\u251c\u2500\u2500 spring-orm (\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04)\n\u251c\u2500\u2500 spring-jms (\u6d88\u606f)\n\u251c\u2500\u2500 spring-test (\u6d4b\u8bd5\u652f\u6301)\n\u2514\u2500\u2500 spring-expression (\u8868\u8fbe\u5f0f\u8bed\u8a00)\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6838\u5fc3\u6a21\u5757\u8be6\u89e3\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. spring-core\uff08\u6838\u5fc3\u6a21\u5757\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u6838\u5fc3\u5de5\u5177\u7c7b\u548c\u57fa\u7840\u8bbe\u65bd\npublic class CoreModuleExample {\n    \n    public void demonstrateCoreFeatures() {\n        // 1. \u8d44\u6e90\u8bbf\u95ee\u62bd\u8c61\n        Resource resource = new ClassPathResource("application.properties");\n        Resource urlResource = new UrlResource("https://example.com/config");\n        Resource fileResource = new FileSystemResource("/path/to/file");\n        \n        // 2. \u7c7b\u578b\u8f6c\u6362\u7cfb\u7edf\n        ConversionService conversionService = new DefaultConversionService();\n        String dateStr = "2023-12-25";\n        Date date = conversionService.convert(dateStr, Date.class);\n        \n        // 3. \u73af\u5883\u62bd\u8c61\n        Environment environment = new StandardEnvironment();\n        String property = environment.getProperty("java.version");\n        \n        // 4. \u4e8b\u4ef6\u53d1\u5e03\u673a\u5236\n        ApplicationEventPublisher publisher = // \u83b7\u53d6\u53d1\u5e03\u5668\n        publisher.publishEvent(new CustomEvent("test"));\n    }\n}\n\n// \u6838\u5fc3\u63a5\u53e3\uff1aBeanFactory\npublic interface BeanFactory {\n    Object getBean(String name) throws BeansException;\n    <T> T getBean(String name, Class<T> requiredType) throws BeansException;\n    Object getBean(String name, Object... args) throws BeansException;\n    <T> T getBean(Class<T> requiredType) throws BeansException;\n    boolean containsBean(String name);\n    boolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n    boolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. spring-beans\uff08Bean\u7ba1\u7406\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Bean\u5b9a\u4e49\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406\npublic class BeansModuleExample {\n    \n    public void beanLifecycle() {\n        // Bean\u5b9a\u4e49\n        BeanDefinition beanDefinition = BeanDefinitionBuilder\n                .genericBeanDefinition(UserService.class)\n                .addPropertyValue("userDao", new RuntimeBeanReference("userDao"))\n                .setScope(BeanDefinition.SCOPE_SINGLETON)\n                .getBeanDefinition();\n        \n        // Bean\u5de5\u5382\u540e\u5904\u7406\u5668\n        BeanFactoryPostProcessor processor = new PropertyPlaceholderConfigurer();\n        \n        // Bean\u540e\u5904\u7406\u5668\n        BeanPostProcessor postProcessor = new BeanPostProcessor() {\n            @Override\n            public Object postProcessBeforeInitialization(Object bean, String beanName) {\n                System.out.println("Before initialization: " + beanName);\n                return bean;\n            }\n            \n            @Override\n            public Object postProcessAfterInitialization(Object bean, String beanName) {\n                System.out.println("After initialization: " + beanName);\n                return bean;\n            }\n        };\n    }\n}\n\n// Bean\u751f\u547d\u5468\u671f\u56de\u8c03\n@Component\npublic class LifecycleBean implements InitializingBean, DisposableBean, \n                                     BeanNameAware, ApplicationContextAware {\n    \n    private String beanName;\n    private ApplicationContext applicationContext;\n    \n    @Override\n    public void setBeanName(String name) {\n        this.beanName = name;\n        System.out.println("BeanNameAware: " + name);\n    }\n    \n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) {\n        this.applicationContext = applicationContext;\n        System.out.println("ApplicationContextAware set");\n    }\n    \n    @PostConstruct\n    public void postConstruct() {\n        System.out.println("@PostConstruct method called");\n    }\n    \n    @Override\n    public void afterPropertiesSet() {\n        System.out.println("InitializingBean.afterPropertiesSet called");\n    }\n    \n    @PreDestroy\n    public void preDestroy() {\n        System.out.println("@PreDestroy method called");\n    }\n    \n    @Override\n    public void destroy() {\n        System.out.println("DisposableBean.destroy called");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. spring-context\uff08\u5e94\u7528\u4e0a\u4e0b\u6587\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u5e94\u7528\u4e0a\u4e0b\u6587\u5b9e\u73b0\npublic class ContextModuleExample {\n    \n    public void demonstrateApplicationContext() {\n        // 1. \u6ce8\u89e3\u914d\u7f6e\u5e94\u7528\u4e0a\u4e0b\u6587\n        ApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);\n        \n        // 2. XML\u914d\u7f6e\u5e94\u7528\u4e0a\u4e0b\u6587\n        ApplicationContext xmlContext = new ClassPathXmlApplicationContext("applicationContext.xml");\n        \n        // 3. Web\u5e94\u7528\u4e0a\u4e0b\u6587\n        // WebApplicationContext webContext = new XmlWebApplicationContext();\n        \n        // 4. \u83b7\u53d6Bean\n        UserService userService = context.getBean(UserService.class);\n        \n        // 5. \u4e8b\u4ef6\u53d1\u5e03\n        context.publishEvent(new CustomApplicationEvent("test data"));\n        \n        // 6. \u73af\u5883\u4fe1\u606f\n        Environment env = context.getEnvironment();\n        String[] profiles = env.getActiveProfiles();\n    }\n}\n\n// \u914d\u7f6e\u7c7b\n@Configuration\n@ComponentScan(basePackages = "com.example")\n@PropertySource("classpath:application.properties")\npublic class AppConfig {\n    \n    @Bean\n    @Primary\n    public DataSource dataSource() {\n        HikariDataSource dataSource = new HikariDataSource();\n        dataSource.setJdbcUrl("jdbc:mysql://localhost:3306/test");\n        return dataSource;\n    }\n    \n    @Bean\n    @ConditionalOnProperty(name = "cache.enabled", havingValue = "true")\n    public CacheManager cacheManager() {\n        return new ConcurrentMapCacheManager();\n    }\n}\n\n// \u81ea\u5b9a\u4e49\u5e94\u7528\u4e8b\u4ef6\npublic class CustomApplicationEvent extends ApplicationEvent {\n    private final String data;\n    \n    public CustomApplicationEvent(Object source, String data) {\n        super(source);\n        this.data = data;\n    }\n    \n    public String getData() {\n        return data;\n    }\n}\n\n// \u4e8b\u4ef6\u76d1\u542c\u5668\n@EventListener\n@Component\npublic class ApplicationEventListener {\n    \n    @EventListener\n    public void handleCustomEvent(CustomApplicationEvent event) {\n        System.out.println("Received custom event: " + event.getData());\n    }\n    \n    @EventListener\n    @Async\n    public void handleContextRefreshedEvent(ContextRefreshedEvent event) {\n        System.out.println("Application context refreshed");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. spring-aop\uff08\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// AOP\u5b9e\u73b0\u539f\u7406\n@Aspect\n@Component\npublic class LoggingAspect {\n    \n    // \u5207\u70b9\u8868\u8fbe\u5f0f\n    @Pointcut("execution(* com.example.service.*.*(..))")\n    public void serviceLayer() {}\n    \n    @Pointcut("@annotation(com.example.annotation.Cacheable)")\n    public void cacheableMethod() {}\n    \n    // \u524d\u7f6e\u901a\u77e5\n    @Before("serviceLayer()")\n    public void logBefore(JoinPoint joinPoint) {\n        String methodName = joinPoint.getSignature().getName();\n        Object[] args = joinPoint.getArgs();\n        System.out.println("Before method: " + methodName + " with args: " + Arrays.toString(args));\n    }\n    \n    // \u73af\u7ed5\u901a\u77e5\n    @Around("serviceLayer()")\n    public Object logAround(ProceedingJoinPoint joinPoint) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        \n        try {\n            Object result = joinPoint.proceed();\n            long endTime = System.currentTimeMillis();\n            System.out.println("Method executed in: " + (endTime - startTime) + "ms");\n            return result;\n        } catch (Exception e) {\n            System.out.println("Method execution failed: " + e.getMessage());\n            throw e;\n        }\n    }\n    \n    // \u5f02\u5e38\u901a\u77e5\n    @AfterThrowing(pointcut = "serviceLayer()", throwing = "ex")\n    public void logException(JoinPoint joinPoint, Exception ex) {\n        System.out.println("Exception in method: " + joinPoint.getSignature().getName() + \n                          " Exception: " + ex.getMessage());\n    }\n}\n\n// AOP\u4ee3\u7406\u521b\u5efa\u8fc7\u7a0b\uff08\u6e90\u7801\u7406\u89e3\uff09\n@Configuration\n@EnableAspectJAutoProxy(proxyTargetClass = true)\npublic class AopConfig {\n    // AnnotationAwareAspectJAutoProxyCreator\u4f1a\u81ea\u52a8\u521b\u5efa\u4ee3\u7406\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. spring-web \u548c spring-webmvc"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Web MVC\u6a21\u5757\n@RestController\n@RequestMapping("/api/users")\npublic class UserController {\n    \n    @Autowired\n    private UserService userService;\n    \n    @GetMapping("/{id}")\n    public ResponseEntity<User> getUser(@PathVariable Long id) {\n        User user = userService.findById(id);\n        return ResponseEntity.ok(user);\n    }\n    \n    @PostMapping\n    public ResponseEntity<User> createUser(@RequestBody @Valid User user) {\n        User savedUser = userService.save(user);\n        return ResponseEntity.status(HttpStatus.CREATED).body(savedUser);\n    }\n}\n\n// Web MVC\u914d\u7f6e\n@Configuration\n@EnableWebMvc\npublic class WebMvcConfig implements WebMvcConfigurer {\n    \n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new LoggingInterceptor())\n                .addPathPatterns("/api/**")\n                .excludePathPatterns("/api/public/**");\n    }\n    \n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        converters.add(new MappingJackson2HttpMessageConverter());\n    }\n    \n    @Bean\n    public ViewResolver viewResolver() {\n        InternalResourceViewResolver resolver = new InternalResourceViewResolver();\n        resolver.setPrefix("/WEB-INF/views/");\n        resolver.setSuffix(".jsp");\n        return resolver;\n    }\n}\n\n// DispatcherServlet\u5de5\u4f5c\u6d41\u7a0b\uff08\u6838\u5fc3\uff09\npublic class DispatcherServletFlow {\n    /*\n    1. Request\u8fdb\u5165DispatcherServlet\n    2. HandlerMapping\u67e5\u627eHandler\n    3. HandlerAdapter\u6267\u884cHandler\n    4. ViewResolver\u89e3\u6790\u89c6\u56fe\n    5. View\u6e32\u67d3\u54cd\u5e94\n    */\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. spring-jdbc \u548c spring-tx"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// JDBC\u6a21\u5757\n@Repository\npublic class UserDaoImpl implements UserDao {\n    \n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n    \n    @Override\n    public User findById(Long id) {\n        String sql = "SELECT * FROM users WHERE id = ?";\n        return jdbcTemplate.queryForObject(sql, new UserRowMapper(), id);\n    }\n    \n    @Override\n    public List<User> findAll() {\n        String sql = "SELECT * FROM users";\n        return jdbcTemplate.query(sql, new UserRowMapper());\n    }\n    \n    @Override\n    public int save(User user) {\n        String sql = "INSERT INTO users (name, email) VALUES (?, ?)";\n        return jdbcTemplate.update(sql, user.getName(), user.getEmail());\n    }\n    \n    private static class UserRowMapper implements RowMapper<User> {\n        @Override\n        public User mapRow(ResultSet rs, int rowNum) throws SQLException {\n            User user = new User();\n            user.setId(rs.getLong("id"));\n            user.setName(rs.getString("name"));\n            user.setEmail(rs.getString("email"));\n            return user;\n        }\n    }\n}\n\n// \u4e8b\u52a1\u7ba1\u7406\n@Service\n@Transactional\npublic class UserService {\n    \n    @Autowired\n    private UserDao userDao;\n    \n    @Transactional(propagation = Propagation.REQUIRED)\n    public User createUser(User user) {\n        // \u4e8b\u52a1\u4f1a\u81ea\u52a8\u5f00\u59cb\n        userDao.save(user);\n        \n        // \u5982\u679c\u629b\u51fa\u5f02\u5e38\uff0c\u4e8b\u52a1\u4f1a\u56de\u6eda\n        if (user.getName().equals("error")) {\n            throw new RuntimeException("Simulated error");\n        }\n        \n        return user;\n        // \u65b9\u6cd5\u6b63\u5e38\u7ed3\u675f\uff0c\u4e8b\u52a1\u63d0\u4ea4\n    }\n    \n    @Transactional(propagation = Propagation.REQUIRES_NEW)\n    public void auditLog(String operation) {\n        // \u72ec\u7acb\u4e8b\u52a1\uff0c\u4e0d\u53d7\u5916\u90e8\u4e8b\u52a1\u5f71\u54cd\n        auditDao.log(operation);\n    }\n}\n\n// \u4e8b\u52a1\u914d\u7f6e\n@Configuration\n@EnableTransactionManagement\npublic class TransactionConfig {\n    \n    @Bean\n    public PlatformTransactionManager transactionManager(DataSource dataSource) {\n        return new DataSourceTransactionManager(dataSource);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6e90\u7801\u6838\u5fc3\u6d41\u7a0b\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. ApplicationContext\u542f\u52a8\u6d41\u7a0b"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// AbstractApplicationContext.refresh()\u65b9\u6cd5\npublic void refresh() throws BeansException, IllegalStateException {\n    synchronized (this.startupShutdownMonitor) {\n        // 1. \u51c6\u5907\u5237\u65b0\u4e0a\u4e0b\u6587\n        prepareRefresh();\n        \n        // 2. \u83b7\u53d6BeanFactory\n        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n        \n        // 3. \u51c6\u5907BeanFactory\n        prepareBeanFactory(beanFactory);\n        \n        try {\n            // 4. \u540e\u5904\u7406BeanFactory\n            postProcessBeanFactory(beanFactory);\n            \n            // 5. \u8c03\u7528BeanFactoryPostProcessor\n            invokeBeanFactoryPostProcessors(beanFactory);\n            \n            // 6. \u6ce8\u518cBeanPostProcessor\n            registerBeanPostProcessors(beanFactory);\n            \n            // 7. \u521d\u59cb\u5316MessageSource\n            initMessageSource();\n            \n            // 8. \u521d\u59cb\u5316\u4e8b\u4ef6\u5e7f\u64ad\u5668\n            initApplicationEventMulticaster();\n            \n            // 9. \u5237\u65b0\u7279\u5b9a\u4e0a\u4e0b\u6587\n            onRefresh();\n            \n            // 10. \u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c\u5668\n            registerListeners();\n            \n            // 11. \u5b9e\u4f8b\u5316\u6240\u6709\u5355\u4f8bBean\n            finishBeanFactoryInitialization(beanFactory);\n            \n            // 12. \u5b8c\u6210\u5237\u65b0\n            finishRefresh();\n        }\n        catch (BeansException ex) {\n            destroyBeans();\n            cancelRefresh(ex);\n            throw ex;\n        }\n        finally {\n            resetCommonCaches();\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. Bean\u521b\u5efa\u6d41\u7a0b"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// AbstractAutowireCapableBeanFactory.createBean()\nprotected Object createBean(String beanName, RootBeanDefinition mbd, Object[] args) {\n    // 1. \u89e3\u6790Bean\u7c7b\u578b\n    Class<?> resolvedClass = resolveBeanClass(mbd, beanName);\n    \n    // 2. \u5b9e\u4f8b\u5316\u524d\u5904\u7406\n    Object bean = resolveBeforeInstantiation(beanName, mbdToUse);\n    if (bean != null) {\n        return bean;\n    }\n    \n    // 3. \u521b\u5efaBean\u5b9e\u4f8b\n    Object beanInstance = doCreateBean(beanName, mbdToUse, args);\n    return beanInstance;\n}\n\nprotected Object doCreateBean(String beanName, RootBeanDefinition mbd, Object[] args) {\n    // 1. \u5b9e\u4f8b\u5316Bean\n    BeanWrapper instanceWrapper = createBeanInstance(beanName, mbd, args);\n    \n    // 2. \u5e94\u7528MergedBeanDefinitionPostProcessor\n    applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName);\n    \n    // 3. \u5c5e\u6027\u6ce8\u5165\n    populateBean(beanName, mbd, instanceWrapper);\n    \n    // 4. \u521d\u59cb\u5316Bean\n    Object exposedObject = initializeBean(beanName, exposedObject, mbd);\n    \n    return exposedObject;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"spring-context\n    \u251c\u2500\u2500 spring-aop\n    \u251c\u2500\u2500 spring-beans\n    \u251c\u2500\u2500 spring-core\n    \u2514\u2500\u2500 spring-expression\n\nspring-webmvc\n    \u251c\u2500\u2500 spring-web\n    \u251c\u2500\u2500 spring-context\n    \u2514\u2500\u2500 spring-beans\n\nspring-tx\n    \u251c\u2500\u2500 spring-beans\n    \u2514\u2500\u2500 spring-core\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b66\u4e60\u5efa\u8bae\uff1a"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"\u4ecespring-core\u5f00\u59cb\uff0c\u7406\u89e3\u57fa\u7840\u8bbe\u65bd"}),"\n",(0,i.jsx)(e.li,{children:"\u5b66\u4e60spring-beans\uff0c\u638c\u63e1IOC\u5bb9\u5668"}),"\n",(0,i.jsx)(e.li,{children:"\u7814\u7a76spring-context\uff0c\u7406\u89e3\u5e94\u7528\u4e0a\u4e0b\u6587"}),"\n",(0,i.jsx)(e.li,{children:"\u6df1\u5165spring-aop\uff0c\u7406\u89e3\u4ee3\u7406\u673a\u5236"}),"\n",(0,i.jsx)(e.li,{children:"\u7ed3\u5408\u5b9e\u9645\u9879\u76ee\uff0c\u7406\u89e3\u5404\u6a21\u5757\u534f\u4f5c"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"151-\u5982\u4f55\u4f18\u5316-java-\u4e2d\u7684\u9501\u7684\u4f7f\u7528",children:"151. \u5982\u4f55\u4f18\u5316 Java \u4e2d\u7684\u9501\u7684\u4f7f\u7528\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java\u5e76\u53d1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9501\u4f18\u5316\u7b56\u7565\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u51cf\u5c11\u9501\u7684\u7c92\u5ea6"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u4f18\u5316\u524d\uff1a\u7c97\u7c92\u5ea6\u9501\npublic class CoarseGrainedLock {\n    private final Object lock = new Object();\n    private Map<String, User> users = new HashMap<>();\n    private Map<String, Order> orders = new HashMap<>();\n    \n    public void addUser(String id, User user) {\n        synchronized (lock) {  // \u9501\u4f4f\u4e86\u6240\u6709\u6570\u636e\n            users.put(id, user);\n        }\n    }\n    \n    public void addOrder(String id, Order order) {\n        synchronized (lock) {  // \u4e0d\u76f8\u5173\u7684\u64cd\u4f5c\u4e5f\u88ab\u9501\u4f4f\n            orders.put(id, order);\n        }\n    }\n}\n\n// \u4f18\u5316\u540e\uff1a\u7ec6\u7c92\u5ea6\u9501\npublic class FineGrainedLock {\n    private final Object userLock = new Object();\n    private final Object orderLock = new Object();\n    private Map<String, User> users = new HashMap<>();\n    private Map<String, Order> orders = new HashMap<>();\n    \n    public void addUser(String id, User user) {\n        synchronized (userLock) {  // \u53ea\u9501\u7528\u6237\u6570\u636e\n            users.put(id, user);\n        }\n    }\n    \n    public void addOrder(String id, Order order) {\n        synchronized (orderLock) {  // \u53ea\u9501\u8ba2\u5355\u6570\u636e\n            orders.put(id, order);\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u9501\u5206\u6bb5\u6280\u672f"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u53c2\u8003ConcurrentHashMap\u7684\u5206\u6bb5\u9501\u601d\u60f3\npublic class SegmentedLock<T> {\n    private final int segmentCount;\n    private final Object[] locks;\n    private final Map<String, T>[] segments;\n    \n    @SuppressWarnings("unchecked")\n    public SegmentedLock(int segmentCount) {\n        this.segmentCount = segmentCount;\n        this.locks = new Object[segmentCount];\n        this.segments = new Map[segmentCount];\n        \n        for (int i = 0; i < segmentCount; i++) {\n            locks[i] = new Object();\n            segments[i] = new HashMap<>();\n        }\n    }\n    \n    private int getSegmentIndex(String key) {\n        return Math.abs(key.hashCode()) % segmentCount;\n    }\n    \n    public void put(String key, T value) {\n        int index = getSegmentIndex(key);\n        synchronized (locks[index]) {  // \u53ea\u9501\u5bf9\u5e94\u7684\u6bb5\n            segments[index].put(key, value);\n        }\n    }\n    \n    public T get(String key) {\n        int index = getSegmentIndex(key);\n        synchronized (locks[index]) {\n            return segments[index].get(key);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u8bfb\u5199\u9501\u5206\u79bb"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class ReadWriteLockExample {\n    private final ReadWriteLock lock = new ReentrantReadWriteLock();\n    private final Lock readLock = lock.readLock();\n    private final Lock writeLock = lock.writeLock();\n    private Map<String, String> cache = new HashMap<>();\n    \n    public String getValue(String key) {\n        readLock.lock();\n        try {\n            return cache.get(key);  // \u591a\u4e2a\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u5e76\u53d1\n        } finally {\n            readLock.unlock();\n        }\n    }\n    \n    public void setValue(String key, String value) {\n        writeLock.lock();\n        try {\n            cache.put(key, value);  // \u5199\u64cd\u4f5c\u72ec\u5360\n        } finally {\n            writeLock.unlock();\n        }\n    }\n    \n    // \u8bfb\u5199\u9501\u5347\u7ea7\u793a\u4f8b\n    public void updateValue(String key, Function<String, String> updater) {\n        readLock.lock();\n        String oldValue;\n        try {\n            oldValue = cache.get(key);\n        } finally {\n            readLock.unlock();\n        }\n        \n        if (oldValue != null) {\n            writeLock.lock();\n            try {\n                // \u53cc\u91cd\u68c0\u67e5\uff0c\u9632\u6b62\u5176\u4ed6\u7ebf\u7a0b\u5df2\u7ecf\u4fee\u6539\n                String currentValue = cache.get(key);\n                if (Objects.equals(currentValue, oldValue)) {\n                    cache.put(key, updater.apply(oldValue));\n                }\n            } finally {\n                writeLock.unlock();\n            }\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u4f7f\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class LockFreeExamples {\n    \n    // \u539f\u5b50\u7c7b\u66ff\u4ee3\u9501\n    private final AtomicInteger counter = new AtomicInteger(0);\n    private final AtomicReference<String> atomicString = new AtomicReference<>();\n    \n    public int incrementAndGet() {\n        return counter.incrementAndGet();  // \u65e0\u9501\u64cd\u4f5c\n    }\n    \n    public boolean compareAndSetString(String expected, String update) {\n        return atomicString.compareAndSet(expected, update);\n    }\n    \n    // \u65e0\u9501\u961f\u5217\n    private final ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<>();\n    \n    public void offer(String item) {\n        queue.offer(item);  // \u65e0\u9501\u64cd\u4f5c\n    }\n    \n    public String poll() {\n        return queue.poll();  // \u65e0\u9501\u64cd\u4f5c\n    }\n    \n    // \u65e0\u9501Map\n    private final ConcurrentHashMap<String, String> map = new ConcurrentHashMap<>();\n    \n    public String putIfAbsent(String key, String value) {\n        return map.putIfAbsent(key, value);  // \u539f\u5b50\u64cd\u4f5c\n    }\n    \n    // \u4f7f\u7528LongAdder\u66ff\u4ee3AtomicLong\n    private final LongAdder adder = new LongAdder();\n    \n    public void increment() {\n        adder.increment();  // \u5206\u6bb5\u7d2f\u52a0\uff0c\u51cf\u5c11\u7ade\u4e89\n    }\n    \n    public long sum() {\n        return adder.sum();\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u9501\u8d85\u65f6\u548c\u53ef\u4e2d\u65ad\u9501"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class TimeoutLockExample {\n    private final ReentrantLock lock = new ReentrantLock();\n    \n    public boolean tryWithTimeout(long timeout, TimeUnit unit) {\n        try {\n            if (lock.tryLock(timeout, unit)) {\n                try {\n                    // \u6267\u884c\u4e1a\u52a1\u903b\u8f91\n                    return processWithTimeout();\n                } finally {\n                    lock.unlock();\n                }\n            } else {\n                // \u83b7\u53d6\u9501\u8d85\u65f6\uff0c\u8fd4\u56de\u5931\u8d25\n                return false;\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            return false;\n        }\n    }\n    \n    public void interruptibleLock() throws InterruptedException {\n        lock.lockInterruptibly();  // \u53ef\u88ab\u4e2d\u65ad\u7684\u9501\n        try {\n            // \u4e1a\u52a1\u903b\u8f91\n        } finally {\n            lock.unlock();\n        }\n    }\n    \n    // \u975e\u963b\u585e\u5c1d\u8bd5\u83b7\u53d6\u9501\n    public boolean tryNonBlocking() {\n        if (lock.tryLock()) {  // \u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u963b\u585e\n            try {\n                // \u6267\u884c\u5feb\u901f\u64cd\u4f5c\n                return true;\n            } finally {\n                lock.unlock();\n            }\n        }\n        return false;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u51cf\u5c11\u9501\u7684\u6301\u6709\u65f6\u95f4"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class ReduceLockHoldTime {\n    private final Object lock = new Object();\n    private List<String> list = new ArrayList<>();\n    \n    // \u4f18\u5316\u524d\uff1a\u9501\u6301\u6709\u65f6\u95f4\u957f\n    public void inefficient(String item) {\n        synchronized (lock) {\n            // \u8017\u65f6\u7684\u8ba1\u7b97\u5728\u9501\u5185\u8fdb\u884c\n            String processedItem = expensiveComputation(item);\n            list.add(processedItem);\n            \n            // \u8017\u65f6\u7684I/O\u64cd\u4f5c\u4e5f\u5728\u9501\u5185\n            saveToDatabase(processedItem);\n        }\n    }\n    \n    // \u4f18\u5316\u540e\uff1a\u7f29\u77ed\u9501\u6301\u6709\u65f6\u95f4\n    public void efficient(String item) {\n        // \u8017\u65f6\u64cd\u4f5c\u79fb\u51fa\u9501\u5916\n        String processedItem = expensiveComputation(item);\n        \n        synchronized (lock) {\n            // \u53ea\u5728\u5fc5\u8981\u65f6\u4f7f\u7528\u9501\n            list.add(processedItem);\n        }\n        \n        // I/O\u64cd\u4f5c\u79fb\u51fa\u9501\u5916\n        saveToDatabase(processedItem);\n    }\n    \n    // \u6279\u91cf\u64cd\u4f5c\u4f18\u5316\n    public void batchOperation(List<String> items) {\n        List<String> processedItems = new ArrayList<>();\n        \n        // \u6279\u91cf\u5904\u7406\u79fb\u51fa\u9501\u5916\n        for (String item : items) {\n            processedItems.add(expensiveComputation(item));\n        }\n        \n        synchronized (lock) {\n            // \u6279\u91cf\u6dfb\u52a0\uff0c\u51cf\u5c11\u9501\u83b7\u53d6\u6b21\u6570\n            list.addAll(processedItems);\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"7. \u9501\u6d88\u9664\u548c\u9501\u7c97\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class LockOptimization {\n    \n    // JVM\u4f1a\u8fdb\u884c\u9501\u6d88\u9664\n    public String lockElimination() {\n        StringBuffer sb = new StringBuffer();  // \u5c40\u90e8\u53d8\u91cf\n        sb.append("Hello");  // \u867d\u7136StringBuffer\u662f\u540c\u6b65\u7684\n        sb.append(" World"); // \u4f46JVM\u4f1a\u6d88\u9664\u8fd9\u4e9b\u9501\n        return sb.toString();\n    }\n    \n    // \u624b\u52a8\u9501\u7c97\u5316\n    public void manualLockCoarsening() {\n        synchronized (this) {\n            // \u5c06\u591a\u4e2a\u540c\u6b65\u5757\u5408\u5e76\n            operation1();\n            operation2();\n            operation3();\n        }\n    }\n    \n    // \u907f\u514d\u9501\u7c97\u5316\u8fc7\u5ea6\n    public void avoidOverCoarsening() {\n        synchronized (this) {\n            quickOperation1();\n            quickOperation2();\n        }\n        \n        // \u8017\u65f6\u64cd\u4f5c\u79fb\u51fa\u9501\u5916\n        expensiveOperation();\n        \n        synchronized (this) {\n            quickOperation3();\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"8. \u4f7f\u7528\u5e76\u53d1\u5de5\u5177\u7c7b"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class ConcurrentUtilities {\n    \n    // \u4f7f\u7528CountDownLatch\u66ff\u4ee3wait/notify\n    public void useCountDownLatch() throws InterruptedException {\n        CountDownLatch latch = new CountDownLatch(3);\n        \n        for (int i = 0; i < 3; i++) {\n            new Thread(() -> {\n                try {\n                    doWork();\n                } finally {\n                    latch.countDown();\n                }\n            }).start();\n        }\n        \n        latch.await();  // \u6bd4wait/notify\u66f4\u7b80\u6d01\n    }\n    \n    // \u4f7f\u7528Semaphore\u63a7\u5236\u5e76\u53d1\u6570\n    private final Semaphore semaphore = new Semaphore(5);\n    \n    public void limitedConcurrency() throws InterruptedException {\n        semaphore.acquire();\n        try {\n            // \u6700\u591a5\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\n            performTask();\n        } finally {\n            semaphore.release();\n        }\n    }\n    \n    // \u4f7f\u7528CyclicBarrier\u540c\u6b65\u591a\u7ebf\u7a0b\n    private final CyclicBarrier barrier = new CyclicBarrier(3, () -> {\n        System.out.println("All threads reached barrier");\n    });\n    \n    public void synchronizeThreads() throws Exception {\n        // \u6267\u884c\u7b2c\u4e00\u9636\u6bb5\n        doPhase1();\n        \n        // \u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\u7b2c\u4e00\u9636\u6bb5\n        barrier.await();\n        \n        // \u6267\u884c\u7b2c\u4e8c\u9636\u6bb5\n        doPhase2();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"9. \u907f\u514d\u6b7b\u9501"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public class DeadlockPrevention {\n    private final Object lock1 = new Object();\n    private final Object lock2 = new Object();\n    \n    // \u56fa\u5b9a\u9501\u987a\u5e8f\u907f\u514d\u6b7b\u9501\n    private void transferMoney(Account from, Account to, int amount) {\n        Account firstLock = from.getId() < to.getId() ? from : to;\n        Account secondLock = from.getId() < to.getId() ? to : from;\n        \n        synchronized (firstLock) {\n            synchronized (secondLock) {\n                from.withdraw(amount);\n                to.deposit(amount);\n            }\n        }\n    }\n    \n    // \u4f7f\u7528tryLock\u907f\u514d\u6b7b\u9501\n    private final ReentrantLock lockA = new ReentrantLock();\n    private final ReentrantLock lockB = new ReentrantLock();\n    \n    public boolean tryTransfer() {\n        try {\n            if (lockA.tryLock(1, TimeUnit.SECONDS)) {\n                try {\n                    if (lockB.tryLock(1, TimeUnit.SECONDS)) {\n                        try {\n                            // \u6267\u884c\u8f6c\u8d26\u64cd\u4f5c\n                            return true;\n                        } finally {\n                            lockB.unlock();\n                        }\n                    }\n                } finally {\n                    lockA.unlock();\n                }\n            }\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n        return false;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"10. \u6027\u80fd\u76d1\u63a7\u548c\u8c03\u4f18"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class LockPerformanceMonitor {\n    private final ReentrantLock lock = new ReentrantLock();\n    private final AtomicLong totalWaitTime = new AtomicLong();\n    private final AtomicLong lockAcquisitions = new AtomicLong();\n    \n    public void monitoredOperation() {\n        long startTime = System.nanoTime();\n        \n        lock.lock();\n        try {\n            long lockAcquiredTime = System.nanoTime();\n            totalWaitTime.addAndGet(lockAcquiredTime - startTime);\n            lockAcquisitions.incrementAndGet();\n            \n            // \u6267\u884c\u4e1a\u52a1\u903b\u8f91\n            performOperation();\n        } finally {\n            lock.unlock();\n        }\n    }\n    \n    public void printStatistics() {\n        long acquisitions = lockAcquisitions.get();\n        if (acquisitions > 0) {\n            long avgWaitTime = totalWaitTime.get() / acquisitions;\n            System.out.println("Average lock wait time: " + avgWaitTime + " ns");\n            System.out.println("Lock queue length: " + lock.getQueueLength());\n        }\n    }\n    \n    // \u4f7f\u7528JMX\u76d1\u63a7\u9501\u4fe1\u606f\n    public void jmxMonitoring() {\n        ThreadMXBean threadMX = ManagementFactory.getThreadMXBean();\n        \n        if (threadMX.isObjectMonitorUsageSupported()) {\n            ThreadInfo[] infos = threadMX.dumpAllThreads(true, true);\n            for (ThreadInfo info : infos) {\n                MonitorInfo[] monitors = info.getLockedMonitors();\n                if (monitors.length > 0) {\n                    System.out.println("Thread " + info.getThreadName() + \n                                     " holds " + monitors.length + " monitors");\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\u603b\u7ed3\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u4f18\u5148\u4f7f\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784"}),"\n",(0,i.jsx)(e.li,{children:"\u5408\u7406\u9009\u62e9\u9501\u7684\u7c92\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u7f29\u77ed\u9501\u7684\u6301\u6709\u65f6\u95f4"}),"\n",(0,i.jsx)(e.li,{children:"\u4f7f\u7528\u8bfb\u5199\u9501\u63d0\u9ad8\u5e76\u53d1\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u907f\u514d\u9501\u5d4c\u5957\u548c\u6b7b\u9501"}),"\n",(0,i.jsx)(e.li,{children:"\u4f7f\u7528\u5e76\u53d1\u5de5\u5177\u7c7b\u7b80\u5316\u5f00\u53d1"}),"\n",(0,i.jsx)(e.li,{children:"\u76d1\u63a7\u9501\u7684\u6027\u80fd\u6307\u6807"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"152-redis-\u7684-pipeline-\u529f\u80fd\u662f\u4ec0\u4e48",children:"152. Redis \u7684 Pipeline \u529f\u80fd\u662f\u4ec0\u4e48\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Redis"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Pipeline\u7b80\u4ecb\uff1a"}),"\nRedis Pipeline\u662f\u4e00\u79cd\u901a\u8fc7\u51cf\u5c11\u7f51\u7edc\u5f80\u8fd4\u6b21\u6570\u6765\u63d0\u9ad8\u6027\u80fd\u7684\u6280\u672f\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u4e00\u6b21\u6027\u53d1\u9001\u591a\u4e2a\u547d\u4ee4\uff0c\u7136\u540e\u4e00\u6b21\u6027\u63a5\u6536\u6240\u6709\u54cd\u5e94\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5de5\u4f5c\u539f\u7406\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\u4e0d\u4f7f\u7528Pipeline:\n\u5ba2\u6237\u7aef -> \u547d\u4ee41 -> Redis -> \u54cd\u5e941 -> \u5ba2\u6237\u7aef\n\u5ba2\u6237\u7aef -> \u547d\u4ee42 -> Redis -> \u54cd\u5e942 -> \u5ba2\u6237\u7aef\n\u5ba2\u6237\u7aef -> \u547d\u4ee43 -> Redis -> \u54cd\u5e943 -> \u5ba2\u6237\u7aef\n\u603b\u65f6\u95f4: 3 * (\u7f51\u7edc\u5ef6\u8fdf + \u547d\u4ee4\u6267\u884c\u65f6\u95f4)\n\n\u4f7f\u7528Pipeline:\n\u5ba2\u6237\u7aef -> [\u547d\u4ee41, \u547d\u4ee42, \u547d\u4ee43] -> Redis -> [\u54cd\u5e941, \u54cd\u5e942, \u54cd\u5e943] -> \u5ba2\u6237\u7aef\n\u603b\u65f6\u95f4: 1 * \u7f51\u7edc\u5ef6\u8fdf + 3 * \u547d\u4ee4\u6267\u884c\u65f6\u95f4\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java\u5b9e\u73b0\u793a\u4f8b\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. Jedis Pipeline"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class JedisPipelineExample {\n    \n    @Autowired\n    private JedisPool jedisPool;\n    \n    // \u4e0d\u4f7f\u7528Pipeline\u7684\u65b9\u5f0f\n    public void withoutPipeline() {\n        try (Jedis jedis = jedisPool.getResource()) {\n            long startTime = System.currentTimeMillis();\n            \n            for (int i = 0; i < 1000; i++) {\n                jedis.set("key" + i, "value" + i);\n                jedis.get("key" + i);\n            }\n            \n            long endTime = System.currentTimeMillis();\n            System.out.println("Without pipeline: " + (endTime - startTime) + "ms");\n        }\n    }\n    \n    // \u4f7f\u7528Pipeline\u7684\u65b9\u5f0f\n    public void withPipeline() {\n        try (Jedis jedis = jedisPool.getResource()) {\n            long startTime = System.currentTimeMillis();\n            \n            Pipeline pipeline = jedis.pipelined();\n            \n            // \u6279\u91cf\u53d1\u9001\u547d\u4ee4\n            for (int i = 0; i < 1000; i++) {\n                pipeline.set("key" + i, "value" + i);\n                pipeline.get("key" + i);\n            }\n            \n            // \u6267\u884c\u5e76\u83b7\u53d6\u6240\u6709\u54cd\u5e94\n            List<Object> results = pipeline.syncAndReturnAll();\n            \n            long endTime = System.currentTimeMillis();\n            System.out.println("With pipeline: " + (endTime - startTime) + "ms");\n            System.out.println("Results count: " + results.size());\n        }\n    }\n    \n    // \u5206\u6279Pipeline\u5904\u7406\n    public void batchPipeline(List<String> keys, int batchSize) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            for (int i = 0; i < keys.size(); i += batchSize) {\n                Pipeline pipeline = jedis.pipelined();\n                \n                int endIndex = Math.min(i + batchSize, keys.size());\n                for (int j = i; j < endIndex; j++) {\n                    pipeline.get(keys.get(j));\n                }\n                \n                List<Object> results = pipeline.syncAndReturnAll();\n                processBatchResults(results);\n            }\n        }\n    }\n    \n    private void processBatchResults(List<Object> results) {\n        for (Object result : results) {\n            if (result != null) {\n                System.out.println("Value: " + result);\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. RedisTemplate Pipeline"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class RedisTemplatePipelineExample {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    public void pipelineWithRedisTemplate() {\n        long startTime = System.currentTimeMillis();\n        \n        List<Object> results = redisTemplate.executePipelined(\n            new RedisCallback<Object>() {\n                @Override\n                public Object doInRedis(RedisConnection connection) throws DataAccessException {\n                    for (int i = 0; i < 1000; i++) {\n                        connection.set(\n                            ("key" + i).getBytes(), \n                            ("value" + i).getBytes()\n                        );\n                        connection.get(("key" + i).getBytes());\n                    }\n                    return null; // \u5fc5\u987b\u8fd4\u56denull\n                }\n            }\n        );\n        \n        long endTime = System.currentTimeMillis();\n        System.out.println("Pipeline execution time: " + (endTime - startTime) + "ms");\n        System.out.println("Results size: " + results.size());\n    }\n    \n    // \u4f7f\u7528StringRedisTemplate\n    public void stringTemplatePipeline() {\n        RedisTemplate<String, String> stringTemplate = \n            (RedisTemplate<String, String>) redisTemplate;\n        \n        List<Object> results = stringTemplate.executePipelined(\n            (RedisCallback<Object>) connection -> {\n                StringRedisConnection stringConn = (StringRedisConnection) connection;\n                \n                for (int i = 0; i < 100; i++) {\n                    stringConn.set("user:" + i, "User" + i);\n                    stringConn.expire("user:" + i, 3600);\n                    stringConn.get("user:" + i);\n                }\n                \n                return null;\n            }\n        );\n        \n        System.out.println("Pipeline results: " + results.size());\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. Lettuce Pipeline"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class LettucePipelineExample {\n    \n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n    \n    public void lettuceAsyncPipeline() {\n        StatefulRedisConnection<String, String> connection = \n            (StatefulRedisConnection<String, String>) redisTemplate\n                .getConnectionFactory().getConnection().getNativeConnection();\n        \n        RedisAsyncCommands<String, String> async = connection.async();\n        \n        // \u7981\u7528\u81ea\u52a8\u5237\u65b0\uff0c\u5b9e\u73b0pipeline\u6548\u679c\n        async.setAutoFlushCommands(false);\n        \n        List<RedisFuture<String>> futures = new ArrayList<>();\n        \n        for (int i = 0; i < 1000; i++) {\n            futures.add(async.set("async:key" + i, "value" + i));\n            futures.add(async.get("async:key" + i));\n        }\n        \n        // \u624b\u52a8\u5237\u65b0\uff0c\u53d1\u9001\u6240\u6709\u547d\u4ee4\n        async.flushCommands();\n        \n        // \u7b49\u5f85\u6240\u6709\u547d\u4ee4\u5b8c\u6210\n        try {\n            LettuceFutures.awaitAll(Duration.ofSeconds(10), \n                                   futures.toArray(new RedisFuture[0]));\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        // \u91cd\u65b0\u542f\u7528\u81ea\u52a8\u5237\u65b0\n        async.setAutoFlushCommands(true);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u6279\u91cf\u6570\u636e\u64cd\u4f5c"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class BatchDataService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    // \u6279\u91cf\u7f13\u5b58\u7528\u6237\u6570\u636e\n    public void batchCacheUsers(List<User> users) {\n        redisTemplate.executePipelined((RedisCallback<Object>) connection -> {\n            for (User user : users) {\n                String key = "user:" + user.getId();\n                byte[] keyBytes = key.getBytes();\n                byte[] valueBytes = serialize(user);\n                \n                connection.setEx(keyBytes, 3600, valueBytes);\n                \n                // \u540c\u65f6\u8bbe\u7f6e\u7528\u6237\u540d\u6620\u5c04\n                String nameKey = "user:name:" + user.getName();\n                connection.setEx(nameKey.getBytes(), 3600, \n                               String.valueOf(user.getId()).getBytes());\n            }\n            return null;\n        });\n    }\n    \n    // \u6279\u91cf\u83b7\u53d6\u7528\u6237\u6570\u636e\n    public List<User> batchGetUsers(List<Long> userIds) {\n        List<Object> results = redisTemplate.executePipelined(\n            (RedisCallback<Object>) connection -> {\n                for (Long userId : userIds) {\n                    String key = "user:" + userId;\n                    connection.get(key.getBytes());\n                }\n                return null;\n            }\n        );\n        \n        List<User> users = new ArrayList<>();\n        for (Object result : results) {\n            if (result != null) {\n                users.add(deserialize((byte[]) result, User.class));\n            }\n        }\n        \n        return users;\n    }\n    \n    private byte[] serialize(Object obj) {\n        // \u5e8f\u5217\u5316\u5b9e\u73b0\n        return null;\n    }\n    \n    private <T> T deserialize(byte[] data, Class<T> clazz) {\n        // \u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\n        return null;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u5206\u5e03\u5f0f\u8ba1\u6570\u5668"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"@Component\npublic class DistributedCounter {\n    \n    @Autowired\n    private JedisPool jedisPool;\n    \n    public Map<String, Long> batchIncrement(List<String> counters) {\n        Map<String, Long> results = new HashMap<>();\n        \n        try (Jedis jedis = jedisPool.getResource()) {\n            Pipeline pipeline = jedis.pipelined();\n            \n            // \u6279\u91cf\u589e\u52a0\u8ba1\u6570\u5668\n            List<Response<Long>> responses = new ArrayList<>();\n            for (String counter : counters) {\n                responses.add(pipeline.incr(counter));\n            }\n            \n            pipeline.sync();\n            \n            // \u6536\u96c6\u7ed3\u679c\n            for (int i = 0; i < counters.size(); i++) {\n                results.put(counters.get(i), responses.get(i).get());\n            }\n        }\n        \n        return results;\n    }\n    \n    // \u6279\u91cf\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n    public void batchSetExpire(Map<String, Integer> keyExpires) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            Pipeline pipeline = jedis.pipelined();\n            \n            for (Map.Entry<String, Integer> entry : keyExpires.entrySet()) {\n                pipeline.expire(entry.getKey(), entry.getValue());\n            }\n            \n            pipeline.sync();\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u7f13\u5b58\u9884\u70ed"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class CacheWarmupService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    @Autowired\n    private UserService userService;\n    \n    // \u6279\u91cf\u9884\u70ed\u7528\u6237\u7f13\u5b58\n    public void warmupUserCache(List<Long> userIds) {\n        // \u5206\u6279\u5904\u7406\uff0c\u907f\u514dPipeline\u8fc7\u5927\n        int batchSize = 100;\n        \n        for (int i = 0; i < userIds.size(); i += batchSize) {\n            List<Long> batch = userIds.subList(i, \n                Math.min(i + batchSize, userIds.size()));\n            \n            warmupBatch(batch);\n        }\n    }\n    \n    private void warmupBatch(List<Long> userIds) {\n        // \u6279\u91cf\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u7528\u6237\u4fe1\u606f\n        List<User> users = userService.batchGetUsers(userIds);\n        Map<Long, User> userMap = users.stream()\n            .collect(Collectors.toMap(User::getId, Function.identity()));\n        \n        // \u4f7f\u7528Pipeline\u6279\u91cf\u5199\u5165\u7f13\u5b58\n        redisTemplate.executePipelined((RedisCallback<Object>) connection -> {\n            for (Long userId : userIds) {\n                User user = userMap.get(userId);\n                if (user != null) {\n                    String key = "user:" + userId;\n                    byte[] keyBytes = key.getBytes();\n                    byte[] valueBytes = serialize(user);\n                    \n                    connection.setEx(keyBytes, 3600, valueBytes);\n                    \n                    // \u540c\u65f6\u7f13\u5b58\u7528\u6237\u7684\u5176\u4ed6\u4fe1\u606f\n                    String profileKey = "user:profile:" + userId;\n                    connection.setEx(profileKey.getBytes(), 3600, \n                                   serialize(user.getProfile()));\n                }\n            }\n            return null;\n        });\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u5bf9\u6bd4\u6d4b\u8bd5\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class PipelinePerformanceTest {\n    \n    @Autowired\n    private JedisPool jedisPool;\n    \n    public void performanceComparison() {\n        int operationCount = 10000;\n        \n        // \u6d4b\u8bd5\u4e0d\u4f7f\u7528Pipeline\n        long normalTime = testNormalOperations(operationCount);\n        \n        // \u6d4b\u8bd5\u4f7f\u7528Pipeline\n        long pipelineTime = testPipelineOperations(operationCount);\n        \n        System.out.println("Normal operations: " + normalTime + "ms");\n        System.out.println("Pipeline operations: " + pipelineTime + "ms");\n        System.out.println("Performance improvement: " + \n                          (normalTime / (double) pipelineTime) + "x");\n    }\n    \n    private long testNormalOperations(int count) {\n        long startTime = System.currentTimeMillis();\n        \n        try (Jedis jedis = jedisPool.getResource()) {\n            for (int i = 0; i < count; i++) {\n                jedis.set("normal:key" + i, "value" + i);\n            }\n        }\n        \n        return System.currentTimeMillis() - startTime;\n    }\n    \n    private long testPipelineOperations(int count) {\n        long startTime = System.currentTimeMillis();\n        \n        try (Jedis jedis = jedisPool.getResource()) {\n            Pipeline pipeline = jedis.pipelined();\n            \n            for (int i = 0; i < count; i++) {\n                pipeline.set("pipeline:key" + i, "value" + i);\n            }\n            \n            pipeline.sync();\n        }\n        \n        return System.currentTimeMillis() - startTime;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6ce8\u610f\u4e8b\u9879\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u5185\u5b58\u4f7f\u7528"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Pipeline\u4f1a\u5728\u5ba2\u6237\u7aef\u7f13\u5b58\u54cd\u5e94\uff0c\u6ce8\u610f\u5185\u5b58\u4f7f\u7528\npublic void largePipelineHandling() {\n    try (Jedis jedis = jedisPool.getResource()) {\n        int maxBatchSize = 1000; // \u9650\u5236\u6279\u6b21\u5927\u5c0f\n        \n        Pipeline pipeline = jedis.pipelined();\n        int currentBatch = 0;\n        \n        for (int i = 0; i < 100000; i++) {\n            pipeline.set("key" + i, "value" + i);\n            currentBatch++;\n            \n            if (currentBatch >= maxBatchSize) {\n                pipeline.sync();\n                pipeline = jedis.pipelined(); // \u91cd\u65b0\u521b\u5efaPipeline\n                currentBatch = 0;\n            }\n        }\n        \n        if (currentBatch > 0) {\n            pipeline.sync();\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u9519\u8bef\u5904\u7406"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public void pipelineErrorHandling() {\n    try (Jedis jedis = jedisPool.getResource()) {\n        Pipeline pipeline = jedis.pipelined();\n        \n        List<Response<String>> responses = new ArrayList<>();\n        \n        for (int i = 0; i < 100; i++) {\n            responses.add(pipeline.set("key" + i, "value" + i));\n        }\n        \n        pipeline.sync();\n        \n        // \u68c0\u67e5\u6bcf\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\n        for (int i = 0; i < responses.size(); i++) {\n            try {\n                String result = responses.get(i).get();\n                // \u5904\u7406\u6210\u529f\u7ed3\u679c\n            } catch (Exception e) {\n                System.err.println("Operation " + i + " failed: " + e.getMessage());\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5408\u7406\u63a7\u5236Pipeline\u5927\u5c0f\uff08\u901a\u5e381000-10000\u4e2a\u547d\u4ee4\uff09"}),"\n",(0,i.jsx)(e.li,{children:"\u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u64cd\u4f5c\uff0c\u5206\u6279\u4f7f\u7528Pipeline"}),"\n",(0,i.jsx)(e.li,{children:"\u6ce8\u610f\u5185\u5b58\u4f7f\u7528\uff0c\u907f\u514dPipeline\u8fc7\u5927"}),"\n",(0,i.jsx)(e.li,{children:"\u5728\u9ad8\u5ef6\u8fdf\u7f51\u7edc\u73af\u5883\u4e0b\u6548\u679c\u66f4\u660e\u663e"}),"\n",(0,i.jsx)(e.li,{children:"\u7ed3\u5408\u4e1a\u52a1\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u6279\u6b21\u5927\u5c0f"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"153-\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f-id-\u53d1\u53f7\u5668\u600e\u4e48\u8bbe\u8ba1",children:"153. \u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f ID \u53d1\u53f7\u5668\uff0c\u600e\u4e48\u8bbe\u8ba1\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--danger",children:"\u56f0\u96be"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u7cfb\u7edf\u8bbe\u8ba1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u573a\u666f\u9898"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5206\u5e03\u5f0fID\u8bbe\u8ba1\u8981\u6c42\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u552f\u4e00\u6027"}),"\uff1a\u5168\u5c40\u552f\u4e00\uff0c\u4e0d\u80fd\u91cd\u590d"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6709\u5e8f\u6027"}),"\uff1a\u8d8b\u52bf\u9012\u589e\uff0c\u4fbf\u4e8e\u6570\u636e\u5e93\u7d22\u5f15"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u6027\u80fd"}),"\uff1a\u9ad8\u5e76\u53d1\u4e0b\u5feb\u901f\u751f\u6210"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u53ef\u7528"}),"\uff1a\u7cfb\u7edf\u6545\u969c\u4e0d\u5f71\u54cd\u670d\u52a1"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u53ef\u6269\u5c55"}),"\uff1a\u652f\u6301\u6c34\u5e73\u6269\u5c55"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e00\uff1a\u96ea\u82b1\u7b97\u6cd5\uff08Snowflake\uff09"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7b97\u6cd5\u7ed3\u6784\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"64\u4f4dID\u7ed3\u6784:\n| 1\u4f4d\u7b26\u53f7\u4f4d | 41\u4f4d\u65f6\u95f4\u6233 | 10\u4f4d\u673a\u5668ID | 12\u4f4d\u5e8f\u5217\u53f7 |\n|    0     |  \u65f6\u95f4\u5dee\u503c  | \u673a\u5668\u6807\u8bc6   |  \u9012\u589e\u5e8f\u5217  |\n\n- \u7b26\u53f7\u4f4d\uff1a\u56fa\u5b9a\u4e3a0\n- \u65f6\u95f4\u6233\uff1a\u5f53\u524d\u65f6\u95f4\u4e0e\u8d77\u59cb\u65f6\u95f4\u7684\u5dee\u503c\uff08\u6beb\u79d2\uff09\n- \u673a\u5668ID\uff1a\u6570\u636e\u4e2d\u5fc3ID(5\u4f4d) + \u5de5\u4f5c\u673a\u5668ID(5\u4f4d)\n- \u5e8f\u5217\u53f7\uff1a\u540c\u4e00\u6beb\u79d2\u5185\u7684\u9012\u589e\u5e8f\u5217\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java\u5b9e\u73b0\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class SnowflakeIdGenerator {\n    \n    // \u8d77\u59cb\u65f6\u95f4\u6233 (2020-01-01)\n    private final long EPOCH = 1577836800000L;\n    \n    // \u673a\u5668ID\u4f4d\u6570\n    private final long WORKER_ID_BITS = 5L;\n    private final long DATACENTER_ID_BITS = 5L;\n    \n    // \u5e8f\u5217\u53f7\u4f4d\u6570\n    private final long SEQUENCE_BITS = 12L;\n    \n    // \u6700\u5927\u503c\u8ba1\u7b97\n    private final long MAX_WORKER_ID = ~(-1L << WORKER_ID_BITS);\n    private final long MAX_DATACENTER_ID = ~(-1L << DATACENTER_ID_BITS);\n    private final long MAX_SEQUENCE = ~(-1L << SEQUENCE_BITS);\n    \n    // \u4f4d\u79fb\u504f\u79fb\n    private final long WORKER_ID_SHIFT = SEQUENCE_BITS;\n    private final long DATACENTER_ID_SHIFT = SEQUENCE_BITS + WORKER_ID_BITS;\n    private final long TIMESTAMP_SHIFT = SEQUENCE_BITS + WORKER_ID_BITS + DATACENTER_ID_BITS;\n    \n    private final long workerId;\n    private final long datacenterId;\n    private long sequence = 0L;\n    private long lastTimestamp = -1L;\n    \n    public SnowflakeIdGenerator(long workerId, long datacenterId) {\n        if (workerId > MAX_WORKER_ID || workerId < 0) {\n            throw new IllegalArgumentException("Worker ID must be between 0 and " + MAX_WORKER_ID);\n        }\n        if (datacenterId > MAX_DATACENTER_ID || datacenterId < 0) {\n            throw new IllegalArgumentException("Datacenter ID must be between 0 and " + MAX_DATACENTER_ID);\n        }\n        \n        this.workerId = workerId;\n        this.datacenterId = datacenterId;\n    }\n    \n    public synchronized long nextId() {\n        long timestamp = System.currentTimeMillis();\n        \n        // \u65f6\u949f\u56de\u62e8\u68c0\u67e5\n        if (timestamp < lastTimestamp) {\n            throw new RuntimeException("Clock moved backwards. Refusing to generate id");\n        }\n        \n        // \u540c\u4e00\u6beb\u79d2\u5185\n        if (timestamp == lastTimestamp) {\n            sequence = (sequence + 1) & MAX_SEQUENCE;\n            \n            // \u5e8f\u5217\u53f7\u6ea2\u51fa\uff0c\u7b49\u5f85\u4e0b\u4e00\u6beb\u79d2\n            if (sequence == 0) {\n                timestamp = waitNextMillis(timestamp);\n            }\n        } else {\n            // \u65b0\u7684\u6beb\u79d2\uff0c\u5e8f\u5217\u53f7\u91cd\u7f6e\n            sequence = 0L;\n        }\n        \n        lastTimestamp = timestamp;\n        \n        // \u7ec4\u88c5ID\n        return ((timestamp - EPOCH) << TIMESTAMP_SHIFT) |\n               (datacenterId << DATACENTER_ID_SHIFT) |\n               (workerId << WORKER_ID_SHIFT) |\n               sequence;\n    }\n    \n    private long waitNextMillis(long lastTimestamp) {\n        long timestamp = System.currentTimeMillis();\n        while (timestamp <= lastTimestamp) {\n            timestamp = System.currentTimeMillis();\n        }\n        return timestamp;\n    }\n    \n    // ID\u89e3\u6790\n    public IdInfo parseId(long id) {\n        long timestamp = ((id >> TIMESTAMP_SHIFT) + EPOCH);\n        long datacenterId = (id >> DATACENTER_ID_SHIFT) & MAX_DATACENTER_ID;\n        long workerId = (id >> WORKER_ID_SHIFT) & MAX_WORKER_ID;\n        long sequence = id & MAX_SEQUENCE;\n        \n        return new IdInfo(timestamp, datacenterId, workerId, sequence);\n    }\n    \n    @Data\n    public static class IdInfo {\n        private final long timestamp;\n        private final long datacenterId;\n        private final long workerId;\n        private final long sequence;\n        \n        public IdInfo(long timestamp, long datacenterId, long workerId, long sequence) {\n            this.timestamp = timestamp;\n            this.datacenterId = datacenterId;\n            this.workerId = workerId;\n            this.sequence = sequence;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e8c\uff1a\u57fa\u4e8e\u6570\u636e\u5e93\u7684\u53d1\u53f7\u5668"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6570\u636e\u5e93\u8868\u8bbe\u8ba1\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE id_generator (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    business_type VARCHAR(50) NOT NULL,\n    max_id BIGINT NOT NULL DEFAULT 0,\n    step INT NOT NULL DEFAULT 1000,\n    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    UNIQUE KEY uk_business_type (business_type)\n);\n\n-- \u521d\u59cb\u5316\u6570\u636e\nINSERT INTO id_generator (business_type, max_id, step) VALUES \n('user_id', 0, 1000),\n('order_id', 0, 1000);\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java\u5b9e\u73b0\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class DatabaseIdGenerator {\n    \n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n    \n    private final Map<String, IdSegment> segmentCache = new ConcurrentHashMap<>();\n    private final ReentrantLock lock = new ReentrantLock();\n    \n    public long nextId(String businessType) {\n        IdSegment segment = segmentCache.get(businessType);\n        \n        if (segment == null || segment.isExhausted()) {\n            lock.lock();\n            try {\n                // \u53cc\u91cd\u68c0\u67e5\n                segment = segmentCache.get(businessType);\n                if (segment == null || segment.isExhausted()) {\n                    segment = getNewSegment(businessType);\n                    segmentCache.put(businessType, segment);\n                }\n            } finally {\n                lock.unlock();\n            }\n        }\n        \n        return segment.nextId();\n    }\n    \n    private IdSegment getNewSegment(String businessType) {\n        String sql = "UPDATE id_generator SET max_id = max_id + step WHERE business_type = ?";\n        \n        int updated = jdbcTemplate.update(sql, businessType);\n        if (updated == 0) {\n            throw new RuntimeException("Business type not found: " + businessType);\n        }\n        \n        String querySql = "SELECT max_id, step FROM id_generator WHERE business_type = ?";\n        return jdbcTemplate.queryForObject(querySql, (rs, rowNum) -> {\n            long maxId = rs.getLong("max_id");\n            int step = rs.getInt("step");\n            return new IdSegment(maxId - step + 1, maxId);\n        }, businessType);\n    }\n    \n    @Data\n    private static class IdSegment {\n        private final long start;\n        private final long end;\n        private final AtomicLong current;\n        \n        public IdSegment(long start, long end) {\n            this.start = start;\n            this.end = end;\n            this.current = new AtomicLong(start - 1);\n        }\n        \n        public long nextId() {\n            long id = current.incrementAndGet();\n            if (id > end) {\n                throw new RuntimeException("Segment exhausted");\n            }\n            return id;\n        }\n        \n        public boolean isExhausted() {\n            return current.get() >= end;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e09\uff1a\u57fa\u4e8eRedis\u7684\u53d1\u53f7\u5668"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class RedisIdGenerator {\n    \n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n    \n    // \u7b80\u5355\u9012\u589e\n    public long nextId(String businessType) {\n        String key = "id_generator:" + businessType;\n        return redisTemplate.opsForValue().increment(key);\n    }\n    \n    // \u6279\u91cf\u83b7\u53d6ID\u6bb5\n    private static final String BATCH_ID_SCRIPT = \n        "local key = KEYS[1] " +\n        "local step = tonumber(ARGV[1]) " +\n        "local current = redis.call(\'GET\', key) " +\n        "if current == false then " +\n        "    current = 0 " +\n        "else " +\n        "    current = tonumber(current) " +\n        "end " +\n        "local max = current + step " +\n        "redis.call(\'SET\', key, max) " +\n        "return {current + 1, max}";\n    \n    public IdSegment getBatchIds(String businessType, int step) {\n        String key = "id_generator:" + businessType;\n        \n        DefaultRedisScript<List> script = new DefaultRedisScript<>();\n        script.setScriptText(BATCH_ID_SCRIPT);\n        script.setResultType(List.class);\n        \n        List<Object> result = redisTemplate.execute(script,\n                Collections.singletonList(key),\n                String.valueOf(step));\n        \n        if (result != null && result.size() == 2) {\n            long start = Long.parseLong(result.get(0).toString());\n            long end = Long.parseLong(result.get(1).toString());\n            return new IdSegment(start, end);\n        }\n        \n        throw new RuntimeException("Failed to get batch IDs");\n    }\n    \n    // \u5e26\u8fc7\u671f\u65f6\u95f4\u7684ID\u751f\u6210\n    public String nextIdWithExpire(String businessType, long expireSeconds) {\n        String key = "id_generator:" + businessType;\n        String timeKey = key + ":time";\n        \n        // \u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u7f6e\n        String lastResetTime = redisTemplate.opsForValue().get(timeKey);\n        long currentTime = System.currentTimeMillis() / 1000;\n        \n        if (lastResetTime == null || \n            currentTime - Long.parseLong(lastResetTime) > expireSeconds) {\n            \n            // \u91cd\u7f6e\u8ba1\u6570\u5668\n            redisTemplate.opsForValue().set(key, "0");\n            redisTemplate.opsForValue().set(timeKey, String.valueOf(currentTime));\n        }\n        \n        long id = redisTemplate.opsForValue().increment(key);\n        return String.format("%d_%06d", currentTime, id);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u56db\uff1a\u5206\u6bb5\u7f13\u5b58\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class SegmentIdGenerator {\n    \n    private final Map<String, DoubleBuffer> bufferMap = new ConcurrentHashMap<>();\n    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(5);\n    \n    @Autowired\n    private DatabaseIdGenerator databaseGenerator;\n    \n    public long nextId(String businessType) {\n        DoubleBuffer buffer = bufferMap.computeIfAbsent(businessType, \n            k -> new DoubleBuffer(businessType));\n        \n        return buffer.nextId();\n    }\n    \n    private class DoubleBuffer {\n        private final String businessType;\n        private volatile IdSegment currentSegment;\n        private volatile IdSegment nextSegment;\n        private volatile boolean isLoadingNext = false;\n        \n        public DoubleBuffer(String businessType) {\n            this.businessType = businessType;\n            this.currentSegment = loadNewSegment();\n        }\n        \n        public long nextId() {\n            // \u5f53\u524d\u6bb5\u4f7f\u7528\u7387\u8d85\u8fc775%\u65f6\uff0c\u5f02\u6b65\u52a0\u8f7d\u4e0b\u4e00\u6bb5\n            if (currentSegment.getUsagePercent() > 0.75 && \n                nextSegment == null && !isLoadingNext) {\n                \n                synchronized (this) {\n                    if (nextSegment == null && !isLoadingNext) {\n                        isLoadingNext = true;\n                        scheduler.submit(this::loadNextSegment);\n                    }\n                }\n            }\n            \n            long id = currentSegment.nextId();\n            \n            // \u5f53\u524d\u6bb5\u7528\u5b8c\uff0c\u5207\u6362\u5230\u4e0b\u4e00\u6bb5\n            if (currentSegment.isExhausted()) {\n                synchronized (this) {\n                    if (currentSegment.isExhausted()) {\n                        if (nextSegment != null) {\n                            currentSegment = nextSegment;\n                            nextSegment = null;\n                            isLoadingNext = false;\n                        } else {\n                            // \u7d27\u6025\u52a0\u8f7d\u65b0\u6bb5\n                            currentSegment = loadNewSegment();\n                        }\n                    }\n                }\n            }\n            \n            return id;\n        }\n        \n        private void loadNextSegment() {\n            try {\n                nextSegment = loadNewSegment();\n            } catch (Exception e) {\n                log.error("Failed to load next segment for " + businessType, e);\n            } finally {\n                isLoadingNext = false;\n            }\n        }\n        \n        private IdSegment loadNewSegment() {\n            return databaseGenerator.getNewSegment(businessType);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e94\uff1a\u7f8e\u56e2Leaf\u65b9\u6848"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class LeafIdGenerator {\n    \n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n    \n    private final Map<String, LeafSegment> segmentMap = new ConcurrentHashMap<>();\n    \n    // Leaf-segment\u65b9\u6848\n    public long nextId(String businessType) {\n        LeafSegment segment = segmentMap.computeIfAbsent(businessType, \n            this::createLeafSegment);\n        \n        return segment.nextId();\n    }\n    \n    private LeafSegment createLeafSegment(String businessType) {\n        return new LeafSegment(businessType, redisTemplate);\n    }\n    \n    private static class LeafSegment {\n        private final String businessType;\n        private final RedisTemplate<String, String> redisTemplate;\n        private volatile Segment currentSegment;\n        private volatile Segment nextSegment;\n        private final ReentrantLock lock = new ReentrantLock();\n        \n        public LeafSegment(String businessType, RedisTemplate<String, String> redisTemplate) {\n            this.businessType = businessType;\n            this.redisTemplate = redisTemplate;\n            this.currentSegment = getNewSegment();\n        }\n        \n        public long nextId() {\n            if (currentSegment.getUsagePercent() > 0.9 && nextSegment == null) {\n                lock.lock();\n                try {\n                    if (nextSegment == null) {\n                        nextSegment = getNewSegment();\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n            \n            long id = currentSegment.nextId();\n            \n            if (currentSegment.isExhausted()) {\n                lock.lock();\n                try {\n                    if (currentSegment.isExhausted()) {\n                        currentSegment = nextSegment != null ? nextSegment : getNewSegment();\n                        nextSegment = null;\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n            \n            return id;\n        }\n        \n        private Segment getNewSegment() {\n            // \u57fa\u4e8eRedis\u7684\u5206\u6bb5\u83b7\u53d6\u903b\u8f91\n            String key = "leaf:segment:" + businessType;\n            Long start = redisTemplate.opsForValue().increment(key, 1000);\n            return new Segment(start - 999, start);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd\u6d4b\u8bd5\u548c\u76d1\u63a7\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class IdGeneratorBenchmark {\n    \n    @Autowired\n    private SnowflakeIdGenerator snowflakeGenerator;\n    \n    @Autowired\n    private DatabaseIdGenerator databaseGenerator;\n    \n    @Autowired\n    private RedisIdGenerator redisGenerator;\n    \n    public void performanceBenchmark() {\n        int threadCount = 10;\n        int operationsPerThread = 100000;\n        \n        // \u6d4b\u8bd5Snowflake\n        long snowflakeTime = testGenerator("Snowflake", \n            () -> snowflakeGenerator.nextId(), threadCount, operationsPerThread);\n        \n        // \u6d4b\u8bd5Database\n        long databaseTime = testGenerator("Database", \n            () -> databaseGenerator.nextId("test"), threadCount, operationsPerThread);\n        \n        // \u6d4b\u8bd5Redis\n        long redisTime = testGenerator("Redis", \n            () -> redisGenerator.nextId("test"), threadCount, operationsPerThread);\n        \n        System.out.println("Snowflake QPS: " + calculateQPS(snowflakeTime, threadCount, operationsPerThread));\n        System.out.println("Database QPS: " + calculateQPS(databaseTime, threadCount, operationsPerThread));\n        System.out.println("Redis QPS: " + calculateQPS(redisTime, threadCount, operationsPerThread));\n    }\n    \n    private long testGenerator(String name, Supplier<Long> generator, \n                              int threadCount, int operationsPerThread) {\n        CountDownLatch latch = new CountDownLatch(threadCount);\n        long startTime = System.currentTimeMillis();\n        \n        for (int i = 0; i < threadCount; i++) {\n            new Thread(() -> {\n                try {\n                    for (int j = 0; j < operationsPerThread; j++) {\n                        generator.get();\n                    }\n                } finally {\n                    latch.countDown();\n                }\n            }).start();\n        }\n        \n        try {\n            latch.await();\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n        \n        long endTime = System.currentTimeMillis();\n        System.out.println(name + " execution time: " + (endTime - startTime) + "ms");\n        \n        return endTime - startTime;\n    }\n    \n    private long calculateQPS(long timeMs, int threadCount, int operationsPerThread) {\n        long totalOperations = (long) threadCount * operationsPerThread;\n        return totalOperations * 1000 / timeMs;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u9009\u62e9\u5efa\u8bae\uff1a"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"\u65b9\u6848"}),(0,i.jsx)(e.th,{children:"QPS"}),(0,i.jsx)(e.th,{children:"\u4f18\u70b9"}),(0,i.jsx)(e.th,{children:"\u7f3a\u70b9"}),(0,i.jsx)(e.th,{children:"\u9002\u7528\u573a\u666f"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Snowflake"}),(0,i.jsx)(e.td,{children:">100\u4e07"}),(0,i.jsx)(e.td,{children:"\u6027\u80fd\u9ad8\uff0c\u65e0\u4f9d\u8d56"}),(0,i.jsx)(e.td,{children:"\u65f6\u949f\u56de\u62e8\u95ee\u9898"}),(0,i.jsx)(e.td,{children:"\u9ad8\u5e76\u53d1\u7cfb\u7edf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u6570\u636e\u5e93"}),(0,i.jsx)(e.td,{children:"<1\u4e07"}),(0,i.jsx)(e.td,{children:"\u7b80\u5355\u53ef\u9760"}),(0,i.jsx)(e.td,{children:"\u6027\u80fd\u4f4e\uff0c\u5355\u70b9"}),(0,i.jsx)(e.td,{children:"\u5c0f\u89c4\u6a21\u7cfb\u7edf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Redis"}),(0,i.jsx)(e.td,{children:"10-50\u4e07"}),(0,i.jsx)(e.td,{children:"\u9ad8\u6027\u80fd\uff0c\u652f\u6301\u96c6\u7fa4"}),(0,i.jsx)(e.td,{children:"\u4f9d\u8d56Redis"}),(0,i.jsx)(e.td,{children:"\u4e2d\u5927\u578b\u7cfb\u7edf"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"\u5206\u6bb5\u7f13\u5b58"}),(0,i.jsx)(e.td,{children:"50-100\u4e07"}),(0,i.jsx)(e.td,{children:"\u9ad8\u6027\u80fd\uff0c\u964d\u7ea7\u80fd\u529b"}),(0,i.jsx)(e.td,{children:"\u590d\u6742\u5ea6\u9ad8"}),(0,i.jsx)(e.td,{children:"\u5927\u578b\u7cfb\u7edf"})]})]})]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"154-\u4ec0\u4e48\u662f\u670d\u52a1\u96ea\u5d29",children:"154. \u4ec0\u4e48\u662f\u670d\u52a1\u96ea\u5d29\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--success",children:"\u7b80\u5355"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u670d\u52a1\u5bb9\u707e"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Spring Cloud"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u5fae\u670d\u52a1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u670d\u52a1\u96ea\u5d29\u5b9a\u4e49\uff1a"}),"\n\u670d\u52a1\u96ea\u5d29\u662f\u6307\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u5f53\u4e00\u4e2a\u670d\u52a1\u53d1\u751f\u6545\u969c\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4f9d\u8d56\u5b83\u7684\u5176\u4ed6\u670d\u52a1\u4e5f\u53d1\u751f\u6545\u969c\uff0c\u8fdb\u800c\u5f15\u53d1\u8fde\u9501\u53cd\u5e94\uff0c\u6700\u7ec8\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u7684\u73b0\u8c61\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u96ea\u5d29\u4ea7\u751f\u7684\u539f\u56e0\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u670d\u52a1\u4f9d\u8d56\u94fe\u8fc7\u957f"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\u7528\u6237\u8bf7\u6c42 -> \u670d\u52a1A -> \u670d\u52a1B -> \u670d\u52a1C -> \u6570\u636e\u5e93\n                \u2193\n            \u670d\u52a1C\u6545\u969c\n                \u2193\n        \u670d\u52a1B\u7b49\u5f85\u8d85\u65f6\n                \u2193\n        \u670d\u52a1A\u7b49\u5f85\u8d85\u65f6\n                \u2193\n         \u6574\u4e2a\u94fe\u8def\u963b\u585e\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8d44\u6e90\u8017\u5c3d"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u7ebf\u7a0b\u6c60\u8017\u5c3d\u793a\u4f8b\n@Service\npublic class UserService {\n    \n    // \u56fa\u5b9a\u5927\u5c0f\u7ebf\u7a0b\u6c60\n    private final ExecutorService executor = Executors.newFixedThreadPool(10);\n    \n    public User getUserInfo(Long userId) {\n        // \u8c03\u7528\u4e0b\u6e38\u670d\u52a1\u83b7\u53d6\u7528\u6237\u57fa\u672c\u4fe1\u606f\n        CompletableFuture<UserBasic> basicFuture = CompletableFuture.supplyAsync(() -> {\n            return userBasicService.getBasic(userId); // \u5047\u8bbe\u8fd9\u4e2a\u670d\u52a1\u54cd\u5e94\u7f13\u6162\n        }, executor);\n        \n        // \u8c03\u7528\u4e0b\u6e38\u670d\u52a1\u83b7\u53d6\u7528\u6237\u6269\u5c55\u4fe1\u606f\n        CompletableFuture<UserExtra> extraFuture = CompletableFuture.supplyAsync(() -> {\n            return userExtraService.getExtra(userId); // \u8fd9\u4e2a\u670d\u52a1\u4e5f\u54cd\u5e94\u7f13\u6162\n        }, executor);\n        \n        try {\n            UserBasic basic = basicFuture.get(5, TimeUnit.SECONDS);\n            UserExtra extra = extraFuture.get(5, TimeUnit.SECONDS);\n            return buildUser(basic, extra);\n        } catch (Exception e) {\n            // \u5982\u679c\u4e0b\u6e38\u670d\u52a1\u4e00\u76f4\u4e0d\u54cd\u5e94\uff0c\u7ebf\u7a0b\u6c60\u4f1a\u88ab\u8017\u5c3d\n            throw new ServiceException("Get user info failed", e);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u7f13\u5b58\u51fb\u7a7f"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class ProductService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    @Autowired\n    private ProductRepository productRepository;\n    \n    public Product getProduct(Long productId) {\n        String key = "product:" + productId;\n        \n        // \u4ece\u7f13\u5b58\u83b7\u53d6\n        Product product = (Product) redisTemplate.opsForValue().get(key);\n        if (product != null) {\n            return product;\n        }\n        \n        // \u7f13\u5b58\u5931\u6548\uff0c\u5927\u91cf\u8bf7\u6c42\u6253\u5230\u6570\u636e\u5e93\n        product = productRepository.findById(productId);\n        \n        if (product != null) {\n            // \u8bbe\u7f6e\u7f13\u5b58\n            redisTemplate.opsForValue().set(key, product, 30, TimeUnit.MINUTES);\n        }\n        \n        return product;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u96ea\u5d29\u7684\u5f71\u54cd\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u7cfb\u7edf\u54cd\u5e94\u65f6\u95f4\u6025\u5267\u589e\u52a0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u6a21\u62df\u96ea\u5d29\u6548\u5e94\n@RestController\npublic class OrderController {\n    \n    @Autowired\n    private UserService userService;\n    \n    @Autowired\n    private ProductService productService;\n    \n    @Autowired\n    private InventoryService inventoryService;\n    \n    @PostMapping("/orders")\n    public ResponseEntity<Order> createOrder(@RequestBody OrderRequest request) {\n        long startTime = System.currentTimeMillis();\n        \n        try {\n            // \u6b65\u9aa41\uff1a\u9a8c\u8bc1\u7528\u6237 (\u5047\u8bbe\u7528\u6237\u670d\u52a1\u6b63\u5e38)\n            User user = userService.getUser(request.getUserId());\n            \n            // \u6b65\u9aa42\uff1a\u83b7\u53d6\u5546\u54c1\u4fe1\u606f (\u5047\u8bbe\u5546\u54c1\u670d\u52a1\u6545\u969c)\n            Product product = productService.getProduct(request.getProductId());\n            \n            // \u6b65\u9aa43\uff1a\u68c0\u67e5\u5e93\u5b58 (\u7531\u4e8e\u6b65\u9aa42\u963b\u585e\uff0c\u8fd9\u6b65\u65e0\u6cd5\u6267\u884c)\n            boolean hasStock = inventoryService.checkStock(request.getProductId(), request.getQuantity());\n            \n            // \u521b\u5efa\u8ba2\u5355\n            Order order = createOrderInternal(user, product, request);\n            \n            return ResponseEntity.ok(order);\n            \n        } catch (Exception e) {\n            long endTime = System.currentTimeMillis();\n            log.error("Create order failed, cost: {}ms", endTime - startTime, e);\n            \n            // \u54cd\u5e94\u65f6\u95f4\u4ece\u6b63\u5e38\u7684100ms\u589e\u52a0\u52305000ms\u751a\u81f3\u66f4\u591a\n            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u7cfb\u7edf\u8d44\u6e90\u6d88\u8017\u6fc0\u589e"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u76d1\u63a7\u7cfb\u7edf\u8d44\u6e90\n@Component\npublic class SystemMonitor {\n    \n    private final MeterRegistry meterRegistry;\n    \n    public SystemMonitor(MeterRegistry meterRegistry) {\n        this.meterRegistry = meterRegistry;\n    }\n    \n    @EventListener\n    public void handleServiceCall(ServiceCallEvent event) {\n        // \u8bb0\u5f55\u670d\u52a1\u8c03\u7528\u6307\u6807\n        Timer.Sample sample = Timer.start(meterRegistry);\n        \n        try {\n            // \u4e1a\u52a1\u903b\u8f91\n        } finally {\n            sample.stop(Timer.builder("service.call")\n                    .tag("service", event.getServiceName())\n                    .tag("status", event.getStatus())\n                    .register(meterRegistry));\n        }\n        \n        // \u76d1\u63a7\u7ebf\u7a0b\u6c60\u72b6\u6001\n        ThreadPoolTaskExecutor executor = getExecutor();\n        Gauge.builder("thread.pool.active")\n                .register(meterRegistry, executor, ThreadPoolTaskExecutor::getActiveCount);\n        \n        Gauge.builder("thread.pool.queue.size")\n                .register(meterRegistry, executor, e -> e.getThreadPoolExecutor().getQueue().size());\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9884\u9632\u670d\u52a1\u96ea\u5d29\u7684\u7b56\u7565\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u670d\u52a1\u7194\u65ad\uff08Circuit Breaker\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class CircuitBreakerService {\n    \n    private final CircuitBreaker circuitBreaker;\n    \n    public CircuitBreakerService() {\n        this.circuitBreaker = CircuitBreaker.ofDefaults("userService");\n        \n        // \u914d\u7f6e\u7194\u65ad\u5668\n        circuitBreaker.getEventPublisher()\n                .onStateTransition(event -> \n                    log.info("Circuit breaker state transition: {}", event));\n    }\n    \n    public User getUser(Long userId) {\n        Supplier<User> decoratedSupplier = CircuitBreaker\n                .decorateSupplier(circuitBreaker, () -> {\n                    return userServiceClient.getUser(userId);\n                });\n        \n        try {\n            return decoratedSupplier.get();\n        } catch (CallNotPermittedException e) {\n            // \u7194\u65ad\u5668\u5f00\u542f\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u7f13\u5b58\u6570\u636e\n            return getDefaultUser(userId);\n        }\n    }\n    \n    private User getDefaultUser(Long userId) {\n        // \u8fd4\u56de\u9ed8\u8ba4\u7528\u6237\u4fe1\u606f\u6216\u4ece\u7f13\u5b58\u83b7\u53d6\n        return User.builder()\n                .id(userId)\n                .name("\u9ed8\u8ba4\u7528\u6237")\n                .status("UNKNOWN")\n                .build();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u670d\u52a1\u9650\u6d41\uff08Rate Limiting\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class RateLimiterService {\n    \n    private final RateLimiter rateLimiter;\n    \n    public RateLimiterService() {\n        // \u521b\u5efa\u9650\u6d41\u5668\uff1a\u6bcf\u79d2\u6700\u591a100\u4e2a\u8bf7\u6c42\n        this.rateLimiter = RateLimiter.create(100.0);\n    }\n    \n    @PostMapping("/api/orders")\n    public ResponseEntity<?> createOrder(@RequestBody OrderRequest request) {\n        // \u5c1d\u8bd5\u83b7\u53d6\u8bb8\u53ef\n        if (!rateLimiter.tryAcquire(1, TimeUnit.SECONDS)) {\n            return ResponseEntity.status(HttpStatus.TOO_MANY_REQUESTS)\n                    .body("\u8bf7\u6c42\u8fc7\u4e8e\u9891\u7e41\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5");\n        }\n        \n        try {\n            Order order = orderService.createOrder(request);\n            return ResponseEntity.ok(order);\n        } catch (Exception e) {\n            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)\n                    .body("\u8ba2\u5355\u521b\u5efa\u5931\u8d25");\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u670d\u52a1\u964d\u7ea7\uff08Fallback\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class RecommendationService {\n    \n    @Autowired\n    private RecommendationClient recommendationClient;\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    public List<Product> getRecommendations(Long userId) {\n        try {\n            // \u5c1d\u8bd5\u8c03\u7528\u63a8\u8350\u670d\u52a1\n            return recommendationClient.getRecommendations(userId);\n        } catch (Exception e) {\n            log.warn("\u63a8\u8350\u670d\u52a1\u8c03\u7528\u5931\u8d25\uff0c\u4f7f\u7528\u964d\u7ea7\u7b56\u7565", e);\n            return getFallbackRecommendations(userId);\n        }\n    }\n    \n    private List<Product> getFallbackRecommendations(Long userId) {\n        // \u964d\u7ea7\u7b56\u75651\uff1a\u4ece\u7f13\u5b58\u83b7\u53d6\n        String cacheKey = "recommendations:fallback:" + userId;\n        List<Product> cached = (List<Product>) redisTemplate.opsForValue().get(cacheKey);\n        if (cached != null) {\n            return cached;\n        }\n        \n        // \u964d\u7ea7\u7b56\u75652\uff1a\u8fd4\u56de\u70ed\u95e8\u5546\u54c1\n        List<Product> hotProducts = getHotProducts();\n        \n        // \u7f13\u5b58\u964d\u7ea7\u7ed3\u679c\n        redisTemplate.opsForValue().set(cacheKey, hotProducts, 10, TimeUnit.MINUTES);\n        \n        return hotProducts;\n    }\n    \n    private List<Product> getHotProducts() {\n        // \u8fd4\u56de\u9884\u8bbe\u7684\u70ed\u95e8\u5546\u54c1\u5217\u8868\n        return Arrays.asList(\n            Product.builder().id(1L).name("\u70ed\u95e8\u5546\u54c11").build(),\n            Product.builder().id(2L).name("\u70ed\u95e8\u5546\u54c12").build(),\n            Product.builder().id(3L).name("\u70ed\u95e8\u5546\u54c13").build()\n        );\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u7ebf\u7a0b\u6c60\u9694\u79bb"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Configuration\npublic class ThreadPoolConfig {\n    \n    // \u7528\u6237\u670d\u52a1\u7ebf\u7a0b\u6c60\n    @Bean("userServiceExecutor")\n    public ThreadPoolTaskExecutor userServiceExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setCorePoolSize(10);\n        executor.setMaxPoolSize(20);\n        executor.setQueueCapacity(100);\n        executor.setThreadNamePrefix("user-service-");\n        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n        executor.initialize();\n        return executor;\n    }\n    \n    // \u8ba2\u5355\u670d\u52a1\u7ebf\u7a0b\u6c60\n    @Bean("orderServiceExecutor")\n    public ThreadPoolTaskExecutor orderServiceExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setCorePoolSize(15);\n        executor.setMaxPoolSize(30);\n        executor.setQueueCapacity(200);\n        executor.setThreadNamePrefix("order-service-");\n        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n        executor.initialize();\n        return executor;\n    }\n}\n\n@Service\npublic class IsolatedService {\n    \n    @Autowired\n    @Qualifier("userServiceExecutor")\n    private ThreadPoolTaskExecutor userServiceExecutor;\n    \n    @Autowired\n    @Qualifier("orderServiceExecutor")\n    private ThreadPoolTaskExecutor orderServiceExecutor;\n    \n    public CompletableFuture<User> getUserAsync(Long userId) {\n        return CompletableFuture.supplyAsync(() -> {\n            return userService.getUser(userId);\n        }, userServiceExecutor);\n    }\n    \n    public CompletableFuture<Order> createOrderAsync(OrderRequest request) {\n        return CompletableFuture.supplyAsync(() -> {\n            return orderService.createOrder(request);\n        }, orderServiceExecutor);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u8d85\u65f6\u63a7\u5236"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class TimeoutService {\n    \n    @Async\n    @Retryable(value = {Exception.class}, maxAttempts = 3, backoff = @Backoff(delay = 1000))\n    public CompletableFuture<String> callExternalService(String request) {\n        return CompletableFuture.supplyAsync(() -> {\n            try {\n                // \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\n                return restTemplate.exchange(\n                    "http://external-service/api",\n                    HttpMethod.POST,\n                    new HttpEntity<>(request),\n                    String.class\n                ).getBody();\n            } catch (Exception e) {\n                throw new ServiceException("External service call failed", e);\n            }\n        }).orTimeout(3, TimeUnit.SECONDS) // 3\u79d2\u8d85\u65f6\n          .exceptionally(throwable -> {\n              log.error("Service call timeout or failed", throwable);\n              return "DEFAULT_RESPONSE";\n          });\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u7f13\u5b58\u7b56\u7565"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class CacheService {\n    \n    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n    \n    // \u591a\u7ea7\u7f13\u5b58\n    public Product getProduct(Long productId) {\n        String key = "product:" + productId;\n        \n        // L1\u7f13\u5b58\uff1a\u672c\u5730\u7f13\u5b58\n        Product product = localCache.get(key);\n        if (product != null) {\n            return product;\n        }\n        \n        // L2\u7f13\u5b58\uff1aRedis\u7f13\u5b58\n        product = (Product) redisTemplate.opsForValue().get(key);\n        if (product != null) {\n            localCache.put(key, product, 5, TimeUnit.MINUTES);\n            return product;\n        }\n        \n        // \u7f13\u5b58\u7a7f\u900f\u4fdd\u62a4\n        try {\n            product = productRepository.findById(productId);\n            if (product != null) {\n                // \u5199\u5165\u591a\u7ea7\u7f13\u5b58\n                redisTemplate.opsForValue().set(key, product, 30, TimeUnit.MINUTES);\n                localCache.put(key, product, 5, TimeUnit.MINUTES);\n            } else {\n                // \u7a7a\u503c\u7f13\u5b58\uff0c\u9632\u6b62\u7f13\u5b58\u7a7f\u900f\n                redisTemplate.opsForValue().set(key, "NULL", 5, TimeUnit.MINUTES);\n            }\n        } catch (Exception e) {\n            // \u6570\u636e\u5e93\u5f02\u5e38\u65f6\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c\n            return getDefaultProduct(productId);\n        }\n        \n        return product;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u548c\u544a\u8b66\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class AvalancheMonitor {\n    \n    private final MeterRegistry meterRegistry;\n    private final AlertService alertService;\n    \n    // \u76d1\u63a7\u670d\u52a1\u8c03\u7528\u5931\u8d25\u7387\n    @EventListener\n    public void onServiceCallFailed(ServiceCallFailedEvent event) {\n        Counter.builder("service.call.failed")\n                .tag("service", event.getServiceName())\n                .tag("error", event.getErrorType())\n                .register(meterRegistry)\n                .increment();\n        \n        // \u68c0\u67e5\u5931\u8d25\u7387\u662f\u5426\u8d85\u8fc7\u9608\u503c\n        double failureRate = calculateFailureRate(event.getServiceName());\n        if (failureRate > 0.5) { // \u5931\u8d25\u7387\u8d85\u8fc750%\n            alertService.sendAlert("\u670d\u52a1\u96ea\u5d29\u9884\u8b66", \n                String.format("\u670d\u52a1 %s \u5931\u8d25\u7387\u8fbe\u5230 %.2f%%", event.getServiceName(), failureRate * 100));\n        }\n    }\n    \n    // \u76d1\u63a7\u54cd\u5e94\u65f6\u95f4\n    @EventListener\n    public void onServiceCallCompleted(ServiceCallCompletedEvent event) {\n        Timer.Sample sample = Timer.start(meterRegistry);\n        sample.stop(Timer.builder("service.call.duration")\n                .tag("service", event.getServiceName())\n                .register(meterRegistry));\n        \n        // \u68c0\u67e5\u54cd\u5e94\u65f6\u95f4\u662f\u5426\u5f02\u5e38\n        if (event.getDuration().toMillis() > 5000) { // \u8d85\u8fc75\u79d2\n            alertService.sendAlert("\u670d\u52a1\u54cd\u5e94\u7f13\u6162", \n                String.format("\u670d\u52a1 %s \u54cd\u5e94\u65f6\u95f4 %d ms", event.getServiceName(), event.getDuration().toMillis()));\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8bbe\u8ba1\u65f6\u8003\u8651\u6545\u969c"}),"\uff1a\u5047\u8bbe\u4f9d\u8d56\u670d\u52a1\u4f1a\u5931\u8d25"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5b9e\u65bd\u591a\u5c42\u9632\u62a4"}),"\uff1a\u7194\u65ad + \u9650\u6d41 + \u964d\u7ea7 + \u8d85\u65f6"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u5173\u952e\u6307\u6807"}),"\uff1a\u54cd\u5e94\u65f6\u95f4\u3001\u9519\u8bef\u7387\u3001\u8d44\u6e90\u4f7f\u7528\u7387"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5b9a\u671f\u6f14\u7ec3"}),"\uff1a\u6df7\u6c8c\u5de5\u7a0b\uff0c\u4e3b\u52a8\u5236\u9020\u6545\u969c"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5feb\u901f\u6062\u590d"}),"\uff1a\u81ea\u52a8\u5316\u90e8\u7f72\u548c\u56de\u6eda\u673a\u5236"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"155-jvm-\u7531\u54ea\u4e9b\u90e8\u5206\u7ec4\u6210",children:"155. JVM \u7531\u54ea\u4e9b\u90e8\u5206\u7ec4\u6210\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"JVM"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"JVM\u6574\u4f53\u67b6\u6784\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:"JVM\uff08Java Virtual Machine\uff09\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u7c7b\u52a0\u8f7d\u5b50\u7cfb\u7edf\uff08Class Loading Subsystem\uff09"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7ec4\u6210\u90e8\u5206\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"\u7c7b\u52a0\u8f7d\u5668\uff08ClassLoader\uff09"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"\u52a0\u8f7d\uff08Loading\uff09"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"\u94fe\u63a5\uff08Linking\uff09"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"\u521d\u59cb\u5316\uff08Initialization\uff09"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u7c7b\u52a0\u8f7d\u5668\u5c42\u6b21\u7ed3\u6784\u793a\u4f8b\npublic class ClassLoaderExample {\n    \n    public static void main(String[] args) {\n        // \u83b7\u53d6\u4e0d\u540c\u7684\u7c7b\u52a0\u8f7d\u5668\n        ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n        ClassLoader extClassLoader = systemClassLoader.getParent();\n        ClassLoader bootstrapClassLoader = extClassLoader.getParent();\n        \n        System.out.println("Bootstrap ClassLoader: " + bootstrapClassLoader); // null\n        System.out.println("Extension ClassLoader: " + extClassLoader);\n        System.out.println("System ClassLoader: " + systemClassLoader);\n        \n        // \u67e5\u770b\u7c7b\u7684\u52a0\u8f7d\u5668\n        System.out.println("String class loader: " + String.class.getClassLoader()); // null (Bootstrap)\n        System.out.println("ArrayList class loader: " + java.util.ArrayList.class.getClassLoader()); // null (Bootstrap)\n        System.out.println("Current class loader: " + ClassLoaderExample.class.getClassLoader()); // System\n    }\n}\n\n// \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\npublic class CustomClassLoader extends ClassLoader {\n    \n    private String classpath;\n    \n    public CustomClassLoader(String classpath) {\n        this.classpath = classpath;\n    }\n    \n    @Override\n    protected Class<?> findClass(String name) throws ClassNotFoundException {\n        try {\n            byte[] classData = loadClassData(name);\n            if (classData == null) {\n                throw new ClassNotFoundException();\n            }\n            return defineClass(name, classData, 0, classData.length);\n        } catch (Exception e) {\n            throw new ClassNotFoundException();\n        }\n    }\n    \n    private byte[] loadClassData(String className) {\n        // \u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u7c7b\u6587\u4ef6\n        String path = classpath + File.separatorChar + \n                     className.replace(\'.\', File.separatorChar) + ".class";\n        try {\n            return Files.readAllBytes(Paths.get(path));\n        } catch (IOException e) {\n            return null;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8fd0\u884c\u65f6\u6570\u636e\u533a\uff08Runtime Data Area\uff09"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2.1 \u65b9\u6cd5\u533a\uff08Method Area\uff09/ \u5143\u7a7a\u95f4\uff08Metaspace\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u65b9\u6cd5\u533a\u5b58\u50a8\u7684\u5185\u5bb9\u793a\u4f8b\npublic class MethodAreaExample {\n    \n    // \u5e38\u91cf\u6c60\u4e2d\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\n    private static final String CONSTANT = "Hello World";\n    \n    // \u7c7b\u53d8\u91cf\u5b58\u50a8\u5728\u65b9\u6cd5\u533a\n    private static int classVariable = 100;\n    \n    // \u5b9e\u4f8b\u53d8\u91cf\u5b58\u50a8\u5728\u5806\u4e2d\uff0c\u4f46\u53d8\u91cf\u5b9a\u4e49\u4fe1\u606f\u5728\u65b9\u6cd5\u533a\n    private int instanceVariable;\n    \n    // \u65b9\u6cd5\u5b57\u8282\u7801\u5b58\u50a8\u5728\u65b9\u6cd5\u533a\n    public void method() {\n        System.out.println("Method bytecode stored in Method Area");\n    }\n    \n    // \u4f7f\u7528jcmd\u67e5\u770b\u5143\u7a7a\u95f4\u4fe1\u606f\n    public static void printMetaspaceInfo() {\n        MemoryMXBean memoryMX = ManagementFactory.getMemoryMXBean();\n        MemoryUsage metaspaceUsage = memoryMX.getNonHeapMemoryUsage();\n        \n        System.out.println("Metaspace Used: " + metaspaceUsage.getUsed() / 1024 / 1024 + " MB");\n        System.out.println("Metaspace Committed: " + metaspaceUsage.getCommitted() / 1024 / 1024 + " MB");\n        System.out.println("Metaspace Max: " + metaspaceUsage.getMax() / 1024 / 1024 + " MB");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2.2 \u5806\u5185\u5b58\uff08Heap Memory\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u5806\u5185\u5b58\u7ed3\u6784\u793a\u4f8b\npublic class HeapMemoryExample {\n    \n    public static void main(String[] args) {\n        printHeapInfo();\n        \n        // \u521b\u5efa\u5bf9\u8c61\uff0c\u5206\u914d\u5728\u5806\u4e2d\n        List<String> list = new ArrayList<>();\n        \n        // \u5e74\u8f7b\u4ee3\u5206\u914d\n        for (int i = 0; i < 1000; i++) {\n            list.add("String " + i); // \u8fd9\u4e9b\u5bf9\u8c61\u9996\u5148\u5728Eden\u533a\u5206\u914d\n        }\n        \n        // \u89e6\u53d1Minor GC\n        System.gc();\n        \n        printHeapInfo();\n        \n        // \u521b\u5efa\u5927\u5bf9\u8c61\uff0c\u53ef\u80fd\u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3\n        int[] largeArray = new int[1024 * 1024]; // 4MB\u6570\u7ec4\n        \n        printHeapInfo();\n    }\n    \n    private static void printHeapInfo() {\n        MemoryMXBean memoryMX = ManagementFactory.getMemoryMXBean();\n        MemoryUsage heapUsage = memoryMX.getHeapMemoryUsage();\n        \n        System.out.println("=== Heap Memory Info ===");\n        System.out.println("Heap Used: " + heapUsage.getUsed() / 1024 / 1024 + " MB");\n        System.out.println("Heap Committed: " + heapUsage.getCommitted() / 1024 / 1024 + " MB");\n        System.out.println("Heap Max: " + heapUsage.getMax() / 1024 / 1024 + " MB");\n        \n        // \u83b7\u53d6\u5404\u4e2a\u5185\u5b58\u6c60\u7684\u4fe1\u606f\n        List<MemoryPoolMXBean> memoryPools = ManagementFactory.getMemoryPoolMXBeans();\n        for (MemoryPoolMXBean pool : memoryPools) {\n            if (pool.getType() == MemoryType.HEAP) {\n                MemoryUsage usage = pool.getUsage();\n                System.out.println(pool.getName() + ": " + \n                                 usage.getUsed() / 1024 / 1024 + " MB");\n            }\n        }\n        System.out.println();\n    }\n}\n\n// GC\u76d1\u63a7\u793a\u4f8b\npublic class GCMonitor {\n    \n    public static void setupGCMonitoring() {\n        List<GarbageCollectorMXBean> gcBeans = ManagementFactory.getGarbageCollectorMXBeans();\n        \n        for (GarbageCollectorMXBean gcBean : gcBeans) {\n            NotificationEmitter emitter = (NotificationEmitter) gcBean;\n            emitter.addNotificationListener(new NotificationListener() {\n                @Override\n                public void handleNotification(Notification notification, Object handback) {\n                    if (notification.getType().equals(GarbageCollectionNotificationInfo.GARBAGE_COLLECTION_NOTIFICATION)) {\n                        GarbageCollectionNotificationInfo info = \n                            GarbageCollectionNotificationInfo.from((CompositeData) notification.getUserData());\n                        \n                        System.out.println("GC Event: " + info.getGcName());\n                        System.out.println("Duration: " + info.getGcInfo().getDuration() + " ms");\n                        System.out.println("Cause: " + info.getGcCause());\n                        \n                        Map<String, MemoryUsage> before = info.getGcInfo().getMemoryUsageBeforeGc();\n                        Map<String, MemoryUsage> after = info.getGcInfo().getMemoryUsageAfterGc();\n                        \n                        for (String poolName : before.keySet()) {\n                            MemoryUsage beforeUsage = before.get(poolName);\n                            MemoryUsage afterUsage = after.get(poolName);\n                            \n                            System.out.println(poolName + ": " + \n                                             beforeUsage.getUsed() / 1024 / 1024 + " MB -> " +\n                                             afterUsage.getUsed() / 1024 / 1024 + " MB");\n                        }\n                    }\n                }\n            }, null, null);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2.3 \u865a\u62df\u673a\u6808\uff08VM Stack\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u865a\u62df\u673a\u6808\u793a\u4f8b\npublic class VMStackExample {\n    \n    // \u5c40\u90e8\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570\u6808\u3001\u52a8\u6001\u94fe\u63a5\u3001\u65b9\u6cd5\u8fd4\u56de\u5730\u5740\n    public int calculate(int a, int b) {\n        // \u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u5728\u5c40\u90e8\u53d8\u91cf\u8868\u4e2d\n        int result = 0;\n        int temp = a + b;\n        \n        // \u64cd\u4f5c\u6570\u6808\u7528\u4e8e\u8ba1\u7b97\n        result = temp * 2;\n        \n        // \u65b9\u6cd5\u8c03\u7528\uff0c\u6808\u5e27\u538b\u6808\n        int doubled = doubleValue(result);\n        \n        // \u8fd4\u56de\u5730\u5740\u6307\u5411\u8c03\u7528\u8005\n        return doubled;\n    }\n    \n    private int doubleValue(int value) {\n        return value * 2;\n    }\n    \n    // \u6808\u6ea2\u51fa\u793a\u4f8b\n    public void stackOverflowExample() {\n        try {\n            recursiveMethod(1);\n        } catch (StackOverflowError e) {\n            System.out.println("Stack overflow occurred!");\n        }\n    }\n    \n    private void recursiveMethod(int depth) {\n        System.out.println("Recursion depth: " + depth);\n        // \u65e0\u9650\u9012\u5f52\u5bfc\u81f4\u6808\u6ea2\u51fa\n        recursiveMethod(depth + 1);\n    }\n    \n    // \u67e5\u770b\u6808\u4fe1\u606f\n    public static void printStackInfo() {\n        ThreadMXBean threadMX = ManagementFactory.getThreadMXBean();\n        ThreadInfo[] threadInfos = threadMX.dumpAllThreads(false, false);\n        \n        for (ThreadInfo threadInfo : threadInfos) {\n            System.out.println("Thread: " + threadInfo.getThreadName());\n            System.out.println("State: " + threadInfo.getThreadState());\n            \n            StackTraceElement[] stackTrace = threadInfo.getStackTrace();\n            for (StackTraceElement element : stackTrace) {\n                System.out.println("  " + element.toString());\n            }\n            System.out.println();\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2.4 \u672c\u5730\u65b9\u6cd5\u6808\uff08Native Method Stack\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u672c\u5730\u65b9\u6cd5\u6808\u793a\u4f8b\npublic class NativeMethodExample {\n    \n    // \u58f0\u660e\u672c\u5730\u65b9\u6cd5\n    public native void nativeMethod();\n    \n    // \u52a0\u8f7d\u672c\u5730\u5e93\n    static {\n        System.loadLibrary("nativelib");\n    }\n    \n    // \u4f7f\u7528JNI\u7684\u4f8b\u5b50\n    public void useNativeMethod() {\n        // \u8c03\u7528\u672c\u5730\u65b9\u6cd5\uff0c\u4f1a\u4f7f\u7528\u672c\u5730\u65b9\u6cd5\u6808\n        nativeMethod();\n        \n        // \u7cfb\u7edf\u65b9\u6cd5\u4e5f\u662f\u672c\u5730\u65b9\u6cd5\n        long currentTime = System.currentTimeMillis();\n        System.out.println("Current time: " + currentTime);\n        \n        // \u6570\u7ec4\u590d\u5236\u4e5f\u662f\u672c\u5730\u65b9\u6cd5\n        int[] source = {1, 2, 3, 4, 5};\n        int[] dest = new int[5];\n        System.arraycopy(source, 0, dest, 0, 5);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2.5 \u7a0b\u5e8f\u8ba1\u6570\u5668\uff08Program Counter Register\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u7a0b\u5e8f\u8ba1\u6570\u5668\u793a\u4f8b\npublic class PCRegisterExample {\n    \n    public void demonstratePC() {\n        int a = 1;        // PC\u6307\u5411\u8fd9\u6761\u6307\u4ee4\u7684\u5730\u5740\n        int b = 2;        // PC\u9012\u589e\uff0c\u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4\n        int c = a + b;    // PC\u7ee7\u7eed\u9012\u589e\n        \n        if (c > 2) {      // \u6761\u4ef6\u8df3\u8f6c\uff0cPC\u53ef\u80fd\u8df3\u8f6c\n            System.out.println("c > 2");\n        } else {\n            System.out.println("c <= 2");\n        }\n        \n        // \u5faa\u73af\u4e2d\u7684PC\u53d8\u5316\n        for (int i = 0; i < 3; i++) {  // PC\u5728\u5faa\u73af\u4e2d\u8df3\u8f6c\n            System.out.println("i = " + i);\n        }\n    }\n    \n    // \u591a\u7ebf\u7a0b\u4e2d\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684PC\u5bc4\u5b58\u5668\n    public void multiThreadPC() {\n        Thread thread1 = new Thread(() -> {\n            for (int i = 0; i < 5; i++) {\n                System.out.println("Thread1: " + i);\n                Thread.yield(); // \u7ebf\u7a0b\u5207\u6362\uff0cPC\u5bc4\u5b58\u5668\u4fdd\u5b58\u5f53\u524d\u6267\u884c\u4f4d\u7f6e\n            }\n        });\n        \n        Thread thread2 = new Thread(() -> {\n            for (int i = 0; i < 5; i++) {\n                System.out.println("Thread2: " + i);\n                Thread.yield();\n            }\n        });\n        \n        thread1.start();\n        thread2.start();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u6267\u884c\u5f15\u64ce\uff08Execution Engine\uff09"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3.1 \u89e3\u91ca\u5668\uff08Interpreter\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u89e3\u91ca\u5668\u6267\u884c\u793a\u4f8b\npublic class InterpreterExample {\n    \n    // \u89e3\u91ca\u5668\u9010\u884c\u6267\u884c\u5b57\u8282\u7801\n    public void interpretedMethod() {\n        System.out.println("This method is interpreted");\n        \n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;  // \u6bcf\u6b21\u5faa\u73af\u90fd\u89e3\u91ca\u6267\u884c\n        }\n        \n        System.out.println("Sum: " + sum);\n    }\n    \n    // \u67e5\u770b\u65b9\u6cd5\u662f\u5426\u88abJIT\u7f16\u8bd1\n    public static void checkCompilation() {\n        CompilerMXBean compilerMX = ManagementFactory.getCompilerMXBean();\n        System.out.println("JIT Compiler: " + compilerMX.getName());\n        System.out.println("Total compilation time: " + compilerMX.getTotalCompilationTime() + " ms");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3.2 \u5373\u65f6\u7f16\u8bd1\u5668\uff08JIT Compiler\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// JIT\u7f16\u8bd1\u793a\u4f8b\npublic class JITCompilerExample {\n    \n    private static final int LOOP_COUNT = 100000;\n    \n    // \u70ed\u70b9\u65b9\u6cd5\uff0c\u4f1a\u88abJIT\u7f16\u8bd1\n    public static int hotMethod(int x) {\n        return x * x + 2 * x + 1;\n    }\n    \n    public static void main(String[] args) {\n        // \u9884\u70ed\uff0c\u8ba9\u65b9\u6cd5\u6210\u4e3a\u70ed\u70b9\n        for (int i = 0; i < LOOP_COUNT; i++) {\n            hotMethod(i);\n        }\n        \n        // \u6d4b\u8bd5JIT\u7f16\u8bd1\u540e\u7684\u6027\u80fd\n        long startTime = System.nanoTime();\n        \n        int result = 0;\n        for (int i = 0; i < LOOP_COUNT; i++) {\n            result += hotMethod(i);\n        }\n        \n        long endTime = System.nanoTime();\n        System.out.println("JIT compiled execution time: " + \n                          (endTime - startTime) / 1000000.0 + " ms");\n        System.out.println("Result: " + result);\n        \n        // \u663e\u793a\u7f16\u8bd1\u4fe1\u606f\uff08\u9700\u8981JVM\u53c2\u6570\uff1a-XX:+PrintCompilation\uff09\n        printCompilationInfo();\n    }\n    \n    private static void printCompilationInfo() {\n        try {\n            MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n            ObjectName objectName = new ObjectName("java.lang:type=Compilation");\n            \n            if (server.isRegistered(objectName)) {\n                Long compilationTime = (Long) server.getAttribute(objectName, "TotalCompilationTime");\n                System.out.println("Total JIT compilation time: " + compilationTime + " ms");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n// C1\u548cC2\u7f16\u8bd1\u5668\u914d\u7f6e\u793a\u4f8b\npublic class TieredCompilationExample {\n    \n    public static void demonstrateTieredCompilation() {\n        // JVM\u53c2\u6570\u793a\u4f8b\uff1a\n        // -XX:+TieredCompilation          // \u5f00\u542f\u5206\u5c42\u7f16\u8bd1\n        // -XX:TieredStopAtLevel=1         // \u53ea\u4f7f\u7528C1\u7f16\u8bd1\u5668\n        // -XX:TieredStopAtLevel=4         // \u4f7f\u7528C1\u548cC2\u7f16\u8bd1\u5668\uff08\u9ed8\u8ba4\uff09\n        // -XX:CompileThreshold=10000      // \u8bbe\u7f6e\u7f16\u8bd1\u9608\u503c\n        \n        System.out.println("Demonstrating tiered compilation...");\n        \n        // \u65b9\u6cd5\u8c03\u7528\u6b21\u6570\u7edf\u8ba1\n        int threshold = 0;\n        RuntimeMXBean runtimeMX = ManagementFactory.getRuntimeMXBean();\n        List<String> jvmArgs = runtimeMX.getInputArguments();\n        \n        for (String arg : jvmArgs) {\n            if (arg.startsWith("-XX:CompileThreshold=")) {\n                threshold = Integer.parseInt(arg.substring(21));\n                break;\n            }\n        }\n        \n        System.out.println("Compile threshold: " + threshold);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u672c\u5730\u65b9\u6cd5\u63a5\u53e3\uff08Native Method Interface\uff09"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// JNI\u793a\u4f8b\npublic class NativeInterfaceExample {\n    \n    // \u672c\u5730\u65b9\u6cd5\u58f0\u660e\n    public native String stringFromJNI();\n    public native int addNumbers(int a, int b);\n    \n    static {\n        // \u52a0\u8f7d\u672c\u5730\u5e93\n        try {\n            System.loadLibrary("nativeinterface");\n        } catch (UnsatisfiedLinkError e) {\n            System.err.println("Native library failed to load: " + e);\n        }\n    }\n    \n    public void demonstrateJNI() {\n        try {\n            String message = stringFromJNI();\n            System.out.println("Message from native: " + message);\n            \n            int result = addNumbers(10, 20);\n            System.out.println("Native addition result: " + result);\n        } catch (UnsatisfiedLinkError e) {\n            System.err.println("Native method call failed: " + e);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"JVM\u53c2\u6570\u914d\u7f6e\u793a\u4f8b\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u5806\u5185\u5b58\u914d\u7f6e\n-Xms2g                    # \u521d\u59cb\u5806\u5927\u5c0f\n-Xmx4g                    # \u6700\u5927\u5806\u5927\u5c0f\n-Xmn1g                    # \u5e74\u8f7b\u4ee3\u5927\u5c0f\n-XX:SurvivorRatio=8       # Eden:Survivor\u6bd4\u4f8b\n\n# \u5143\u7a7a\u95f4\u914d\u7f6e\n-XX:MetaspaceSize=256m    # \u521d\u59cb\u5143\u7a7a\u95f4\u5927\u5c0f\n-XX:MaxMetaspaceSize=512m # \u6700\u5927\u5143\u7a7a\u95f4\u5927\u5c0f\n\n# \u5783\u573e\u6536\u96c6\u5668\u914d\u7f6e\n-XX:+UseG1GC              # \u4f7f\u7528G1\u5783\u573e\u6536\u96c6\u5668\n-XX:MaxGCPauseMillis=200  # \u6700\u5927GC\u6682\u505c\u65f6\u95f4\n\n# JIT\u7f16\u8bd1\u5668\u914d\u7f6e\n-XX:+TieredCompilation    # \u5f00\u542f\u5206\u5c42\u7f16\u8bd1\n-XX:CompileThreshold=10000 # \u7f16\u8bd1\u9608\u503c\n\n# \u76d1\u63a7\u548c\u8c03\u8bd5\n-XX:+PrintGC              # \u6253\u5370GC\u4fe1\u606f\n-XX:+PrintGCDetails       # \u6253\u5370\u8be6\u7ec6GC\u4fe1\u606f\n-XX:+HeapDumpOnOutOfMemoryError # OOM\u65f6\u751f\u6210\u5806\u8f6c\u50a8\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5185\u5b58\u5206\u6790\u5de5\u5177\u4f7f\u7528\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u5185\u5b58\u5206\u6790\u793a\u4f8b\npublic class MemoryAnalysisExample {\n    \n    public static void analyzeMemory() {\n        Runtime runtime = Runtime.getRuntime();\n        \n        System.out.println("=== Memory Analysis ===");\n        System.out.println("Max memory: " + runtime.maxMemory() / 1024 / 1024 + " MB");\n        System.out.println("Total memory: " + runtime.totalMemory() / 1024 / 1024 + " MB");\n        System.out.println("Free memory: " + runtime.freeMemory() / 1024 / 1024 + " MB");\n        System.out.println("Used memory: " + \n                          (runtime.totalMemory() - runtime.freeMemory()) / 1024 / 1024 + " MB");\n        \n        // \u83b7\u53d6\u8be6\u7ec6\u7684\u5185\u5b58\u6c60\u4fe1\u606f\n        List<MemoryPoolMXBean> memoryPools = ManagementFactory.getMemoryPoolMXBeans();\n        for (MemoryPoolMXBean pool : memoryPools) {\n            MemoryUsage usage = pool.getUsage();\n            System.out.println(pool.getName() + ":");\n            System.out.println("  Used: " + usage.getUsed() / 1024 / 1024 + " MB");\n            System.out.println("  Committed: " + usage.getCommitted() / 1024 / 1024 + " MB");\n            System.out.println("  Max: " + (usage.getMax() == -1 ? "Unlimited" : \n                                          usage.getMax() / 1024 / 1024 + " MB"));\n        }\n    }\n    \n    // \u751f\u6210\u5185\u5b58\u5feb\u7167\n    public static void generateHeapDump() {\n        try {\n            MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n            HotSpotDiagnosticMXBean hotspotMBean = \n                ManagementFactory.newPlatformMXBeanProxy(server,\n                    "com.sun.management:type=HotSpotDiagnostic",\n                    HotSpotDiagnosticMXBean.class);\n            \n            String dumpFile = "heapdump_" + System.currentTimeMillis() + ".hprof";\n            hotspotMBean.dumpHeap(dumpFile, true);\n            System.out.println("Heap dump generated: " + dumpFile);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u603b\u7ed3\uff1a"}),"\nJVM\u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\u534f\u540c\u5de5\u4f5c\uff0c\u4e3aJava\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u8fd0\u884c\u73af\u5883\uff1a"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7c7b\u52a0\u8f7d\u5b50\u7cfb\u7edf"}),"\uff1a\u8d1f\u8d23\u52a0\u8f7d\u3001\u94fe\u63a5\u548c\u521d\u59cb\u5316\u7c7b"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8fd0\u884c\u65f6\u6570\u636e\u533a"}),"\uff1a\u63d0\u4f9b\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6267\u884c\u5f15\u64ce"}),"\uff1a\u89e3\u91ca\u548c\u7f16\u8bd1\u6267\u884c\u5b57\u8282\u7801"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u672c\u5730\u65b9\u6cd5\u63a5\u53e3"}),"\uff1a\u652f\u6301\u8c03\u7528\u672c\u5730\u65b9\u6cd5"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"156-redis-\u901a\u5e38\u5e94\u7528\u4e8e\u54ea\u4e9b\u573a\u666f",children:"156. Redis \u901a\u5e38\u5e94\u7528\u4e8e\u54ea\u4e9b\u573a\u666f\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--success",children:"\u7b80\u5355"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Redis"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Redis\u5e94\u7528\u573a\u666f\u8be6\u89e3\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u7f13\u5b58\uff08Cache\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9875\u9762\u7f13\u5b58"}),"\uff1a\u7f13\u5b58\u6574\u9875HTML"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6570\u636e\u7f13\u5b58"}),"\uff1a\u7f13\u5b58\u6570\u636e\u5e93\u67e5\u8be2\u7ed3\u679c"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5bf9\u8c61\u7f13\u5b58"}),"\uff1a\u7f13\u5b58\u5e8f\u5217\u5316\u5bf9\u8c61"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u591a\u7ea7\u7f13\u5b58"}),"\uff1a\u4e0e\u672c\u5730\u7f13\u5b58\u914d\u5408"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u4f1a\u8bdd\u5b58\u50a8\uff08Session Store\uff09"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Web\u4f1a\u8bdd"}),"\uff1a\u5b58\u50a8\u7528\u6237\u767b\u5f55\u72b6\u6001"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8d2d\u7269\u8f66"}),"\uff1a\u7535\u5546\u8d2d\u7269\u8f66\u6570\u636e"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7528\u6237\u504f\u597d"}),"\uff1a\u4e2a\u6027\u5316\u8bbe\u7f6e"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5206\u5e03\u5f0f\u9501"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8d44\u6e90\u4e92\u65a5"}),"\uff1a\u9632\u6b62\u5e76\u53d1\u4fee\u6539"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4efb\u52a1\u8c03\u5ea6"}),"\uff1a\u5206\u5e03\u5f0f\u4efb\u52a1\u9501"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9650\u6d41\u63a7\u5236"}),"\uff1aAPI\u8bbf\u95ee\u9650\u5236"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u8ba1\u6570\u5668"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8bbf\u95ee\u7edf\u8ba1"}),"\uff1a\u9875\u9762PV/UV\u7edf\u8ba1"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u70b9\u8d5e\u6536\u85cf"}),"\uff1a\u793e\u4ea4\u529f\u80fd\u8ba1\u6570"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5e93\u5b58\u7ba1\u7406"}),"\uff1a\u5546\u54c1\u5e93\u5b58\u8ba1\u6570"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u6d88\u606f\u961f\u5217"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4efb\u52a1\u961f\u5217"}),"\uff1a\u5f02\u6b65\u4efb\u52a1\u5904\u7406"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u53d1\u5e03\u8ba2\u9605"}),"\uff1a\u5b9e\u65f6\u6d88\u606f\u63a8\u9001"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5ef6\u65f6\u961f\u5217"}),"\uff1a\u5b9a\u65f6\u4efb\u52a1\u5904\u7406"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u6392\u884c\u699c"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6e38\u620f\u6392\u884c"}),"\uff1a\u5206\u6570\u6392\u5e8f"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u70ed\u641c\u699c"}),"\uff1a\u5b9e\u65f6\u70ed\u70b9"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9500\u91cf\u6392\u884c"}),"\uff1a\u5546\u54c1\u9500\u91cf\u7edf\u8ba1"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"7. \u5730\u7406\u4f4d\u7f6e"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9644\u8fd1\u7684\u4eba"}),"\uff1aLBS\u5e94\u7528"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u914d\u9001\u8303\u56f4"}),"\uff1a\u5916\u5356\u914d\u9001"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8f68\u8ff9\u8ddf\u8e2a"}),"\uff1a\u4f4d\u7f6e\u8bb0\u5f55"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"8. \u5b9e\u65f6\u7cfb\u7edf"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5728\u7ebf\u72b6\u6001"}),"\uff1a\u7528\u6237\u5728\u7ebf\u68c0\u6d4b"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5b9e\u65f6\u7edf\u8ba1"}),"\uff1a\u76d1\u63a7\u6307\u6807"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6d3b\u52a8\u9650\u65f6"}),"\uff1a\u79d2\u6740\u6d3b\u52a8"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"157-\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u77ed\u94fe\u7cfb\u7edf\u600e\u4e48\u8bbe\u8ba1",children:"157. \u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u77ed\u94fe\u7cfb\u7edf\uff0c\u600e\u4e48\u8bbe\u8ba1\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--danger",children:"\u56f0\u96be"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u7cfb\u7edf\u8bbe\u8ba1"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u573a\u666f\u9898"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u77ed\u94fe\u7cfb\u7edf\u8bbe\u8ba1\u8981\u6c42\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u5e76\u53d1"}),"\uff1a\u652f\u6301\u5927\u91cf\u77ed\u94fe\u751f\u6210\u548c\u8bbf\u95ee"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u53ef\u7528"}),"\uff1a7x24\u5c0f\u65f6\u7a33\u5b9a\u670d\u52a1"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u552f\u4e00\u6027"}),"\uff1a\u77ed\u94fe\u4e0d\u80fd\u91cd\u590d"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u65f6\u6548\u6027"}),"\uff1a\u652f\u6301\u94fe\u63a5\u8fc7\u671f"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7edf\u8ba1\u6027"}),"\uff1a\u8bbf\u95ee\u6570\u636e\u7edf\u8ba1"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u67b6\u6784\u8bbe\u8ba1\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u6574\u4f53\u67b6\u6784"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"[\u5ba2\u6237\u7aef] -> [CDN] -> [\u8d1f\u8f7d\u5747\u8861] -> [API\u7f51\u5173] -> [\u77ed\u94fe\u670d\u52a1\u96c6\u7fa4]\n                                                     \u2193\n[Redis\u96c6\u7fa4] <- [\u77ed\u94fe\u670d\u52a1] -> [MySQL\u4e3b\u4ece] -> [\u5927\u6570\u636e\u5206\u6790]\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u6838\u5fc3\u7b97\u6cd5"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e00\uff1aBase62\u7f16\u7801"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class Base62ShortUrlService {\n    \n    private static final String BASE62 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";\n    private static final int BASE = 62;\n    \n    @Autowired\n    private DistributedIdGenerator idGenerator;\n    \n    public String generateShortUrl(String longUrl) {\n        // \u751f\u6210\u552f\u4e00ID\n        long id = idGenerator.nextId();\n        \n        // Base62\u7f16\u7801\n        String shortCode = encodeBase62(id);\n        \n        // \u5b58\u50a8\u6620\u5c04\u5173\u7cfb\n        saveMapping(shortCode, longUrl);\n        \n        return "https://short.ly/" + shortCode;\n    }\n    \n    private String encodeBase62(long num) {\n        if (num == 0) return "0";\n        \n        StringBuilder sb = new StringBuilder();\n        while (num > 0) {\n            sb.append(BASE62.charAt((int)(num % BASE)));\n            num /= BASE;\n        }\n        return sb.reverse().toString();\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u65b9\u6848\u4e8c\uff1a\u54c8\u5e0c\u7b97\u6cd5"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service  \npublic class HashShortUrlService {\n    \n    public String generateShortUrl(String longUrl) {\n        // MD5\u54c8\u5e0c\n        String hash = DigestUtils.md5Hex(longUrl + System.currentTimeMillis());\n        \n        // \u53d6\u524d6\u4f4d\u4f5c\u4e3a\u77ed\u7801\n        String shortCode = hash.substring(0, 6);\n        \n        // \u51b2\u7a81\u68c0\u6d4b\u548c\u5904\u7406\n        int retry = 0;\n        while (exists(shortCode) && retry < 5) {\n            hash = DigestUtils.md5Hex(longUrl + System.currentTimeMillis() + retry);\n            shortCode = hash.substring(0, 6);\n            retry++;\n        }\n        \n        saveMapping(shortCode, longUrl);\n        return "https://short.ly/" + shortCode;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u6570\u636e\u5b58\u50a8"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"MySQL\u8bbe\u8ba1"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"-- \u77ed\u94fe\u6620\u5c04\u8868\nCREATE TABLE short_url_mapping (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    short_code VARCHAR(10) NOT NULL UNIQUE,\n    long_url TEXT NOT NULL,\n    create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    expire_time TIMESTAMP NULL,\n    creator_id BIGINT,\n    status TINYINT DEFAULT 1,\n    INDEX idx_short_code (short_code),\n    INDEX idx_creator_time (creator_id, create_time)\n);\n\n-- \u8bbf\u95ee\u7edf\u8ba1\u8868\nCREATE TABLE url_access_stats (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    short_code VARCHAR(10) NOT NULL,\n    access_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    ip_address VARCHAR(45),\n    user_agent TEXT,\n    referer TEXT,\n    INDEX idx_short_code_time (short_code, access_time)\n);\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Redis\u7f13\u5b58"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Service\npublic class ShortUrlCacheService {\n    \n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n    \n    private static final String URL_CACHE_PREFIX = "short_url:";\n    private static final String STATS_PREFIX = "stats:";\n    \n    public void cacheMapping(String shortCode, String longUrl, int expireHours) {\n        String key = URL_CACHE_PREFIX + shortCode;\n        redisTemplate.opsForValue().set(key, longUrl, expireHours, TimeUnit.HOURS);\n    }\n    \n    public String getLongUrl(String shortCode) {\n        String key = URL_CACHE_PREFIX + shortCode;\n        return redisTemplate.opsForValue().get(key);\n    }\n    \n    public void incrementAccessCount(String shortCode) {\n        String key = STATS_PREFIX + shortCode;\n        redisTemplate.opsForValue().increment(key);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u6838\u5fc3\u670d\u52a1\u5b9e\u73b0"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@RestController\n@RequestMapping("/api/shorturl")\npublic class ShortUrlController {\n    \n    @Autowired\n    private ShortUrlService shortUrlService;\n    \n    // \u751f\u6210\u77ed\u94fe\n    @PostMapping("/generate")\n    public ResponseEntity<ShortUrlResponse> generateShortUrl(@RequestBody ShortUrlRequest request) {\n        try {\n            String shortUrl = shortUrlService.generateShortUrl(\n                request.getLongUrl(), \n                request.getExpireHours(),\n                request.getUserId()\n            );\n            \n            return ResponseEntity.ok(ShortUrlResponse.builder()\n                .shortUrl(shortUrl)\n                .originalUrl(request.getLongUrl())\n                .build());\n        } catch (Exception e) {\n            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)\n                .body(ShortUrlResponse.builder().error("\u751f\u6210\u5931\u8d25").build());\n        }\n    }\n    \n    // \u8bbf\u95ee\u91cd\u5b9a\u5411\n    @GetMapping("/{shortCode}")\n    public ResponseEntity<?> redirect(@PathVariable String shortCode, HttpServletRequest request) {\n        try {\n            String longUrl = shortUrlService.getLongUrl(shortCode);\n            \n            if (longUrl == null) {\n                return ResponseEntity.notFound().build();\n            }\n            \n            // \u5f02\u6b65\u8bb0\u5f55\u8bbf\u95ee\u7edf\u8ba1\n            shortUrlService.recordAccess(shortCode, request);\n            \n            // \u91cd\u5b9a\u5411\n            return ResponseEntity.status(HttpStatus.MOVED_PERMANENTLY)\n                .location(URI.create(longUrl))\n                .build();\n                \n        } catch (Exception e) {\n            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"5. \u9ad8\u6027\u80fd\u4f18\u5316"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5206\u5e93\u5206\u8868"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class ShardingStrategy {\n    \n    private static final int SHARD_COUNT = 64;\n    \n    public String getShardTableName(String shortCode) {\n        int hash = shortCode.hashCode();\n        int shardIndex = Math.abs(hash) % SHARD_COUNT;\n        return "short_url_mapping_" + String.format("%02d", shardIndex);\n    }\n    \n    public String getStatsTableName(String shortCode) {\n        int hash = shortCode.hashCode();\n        int shardIndex = Math.abs(hash) % SHARD_COUNT;\n        return "url_access_stats_" + String.format("%02d", shardIndex);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5e03\u9686\u8fc7\u6ee4\u5668"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"@Component\npublic class BloomFilterService {\n    \n    private BloomFilter<String> bloomFilter;\n    \n    @PostConstruct\n    public void init() {\n        // \u9884\u671f1000\u4e07\u4e2a\u77ed\u7801\uff0c\u8bef\u5224\u73870.01%\n        bloomFilter = BloomFilter.create(\n            Funnels.stringFunnel(Charset.defaultCharset()),\n            10_000_000,\n            0.0001\n        );\n    }\n    \n    public boolean mightExist(String shortCode) {\n        return bloomFilter.mightContain(shortCode);\n    }\n    \n    public void addToFilter(String shortCode) {\n        bloomFilter.put(shortCode);\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"6. \u76d1\u63a7\u544a\u8b66"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class ShortUrlMonitor {\n    \n    @Autowired\n    private MeterRegistry meterRegistry;\n    \n    public void recordGeneration(boolean success) {\n        Counter.builder("shorturl.generation")\n            .tag("result", success ? "success" : "failure")\n            .register(meterRegistry)\n            .increment();\n    }\n    \n    public void recordAccess(String shortCode, long responseTime) {\n        Timer.builder("shorturl.access")\n            .tag("code", shortCode)\n            .register(meterRegistry)\n            .record(responseTime, TimeUnit.MILLISECONDS);\n    }\n    \n    @Scheduled(fixedRate = 60000) // \u6bcf\u5206\u949f\u68c0\u67e5\n    public void checkSystemHealth() {\n        // \u68c0\u67e5\u6570\u636e\u5e93\u8fde\u63a5\n        // \u68c0\u67e5Redis\u8fde\u63a5  \n        // \u68c0\u67e5\u9519\u8bef\u7387\n        // \u53d1\u9001\u544a\u8b66\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6269\u5c55\u529f\u80fd\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u81ea\u5b9a\u4e49\u77ed\u94fe"}),"\uff1a\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u77ed\u7801"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6279\u91cf\u751f\u6210"}),"\uff1a\u6279\u91cf\u5904\u7406\u957f\u94fe\u63a5"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8bbf\u95ee\u63a7\u5236"}),"\uff1a\u5bc6\u7801\u4fdd\u62a4\u3001\u8bbf\u95ee\u9650\u5236"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6570\u636e\u5206\u6790"}),"\uff1a\u8be6\u7ec6\u7684\u8bbf\u95ee\u7edf\u8ba1\u548c\u5206\u6790"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"158-\u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\u5e38\u95ee",children:"158. \u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\uff08\u5e38\u95ee\uff09\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Spring"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u5faa\u73af\u4f9d\u8d56\u5b9a\u4e49\uff1a"}),"\n\u5faa\u73af\u4f9d\u8d56\u662f\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\uff0c\u5f62\u6210\u95ed\u73af\u7684\u60c5\u51b5\u3002\u5728Spring\u4e2d\uff0c\u6700\u5e38\u89c1\u7684\u662fBean\u4e4b\u95f4\u7684\u76f8\u4e92\u5f15\u7528\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5faa\u73af\u4f9d\u8d56\u7c7b\u578b\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u6784\u9020\u5668\u5faa\u73af\u4f9d\u8d56"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u65e0\u6cd5\u89e3\u51b3\u7684\u5faa\u73af\u4f9d\u8d56\n@Component\npublic class ServiceA {\n    private ServiceB serviceB;\n    \n    public ServiceA(ServiceB serviceB) {  // \u6784\u9020\u5668\u6ce8\u5165\n        this.serviceB = serviceB;\n    }\n}\n\n@Component  \npublic class ServiceB {\n    private ServiceA serviceA;\n    \n    public ServiceB(ServiceA serviceA) {  // \u6784\u9020\u5668\u6ce8\u5165\n        this.serviceA = serviceA;\n    }\n}\n// \u7ed3\u679c\uff1aBeanCurrentlyInCreationException\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. Setter\u5faa\u73af\u4f9d\u8d56"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Spring\u53ef\u4ee5\u89e3\u51b3\u7684\u5faa\u73af\u4f9d\u8d56\n@Component\npublic class ServiceA {\n    \n    @Autowired\n    private ServiceB serviceB;  // Setter\u6ce8\u5165\n    \n    public void doSomething() {\n        serviceB.process();\n    }\n}\n\n@Component\npublic class ServiceB {\n    \n    @Autowired\n    private ServiceA serviceA;  // Setter\u6ce8\u5165\n    \n    public void process() {\n        serviceA.doSomething();\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Spring\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u7684\u673a\u5236\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4e09\u7ea7\u7f13\u5b58"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Spring\u5185\u90e8\u7684\u4e09\u7ea7\u7f13\u5b58\u673a\u5236\npublic class DefaultSingletonBeanRegistry {\n    \n    // \u4e00\u7ea7\u7f13\u5b58\uff1a\u5b8c\u6574\u7684\u5355\u4f8b\u5bf9\u8c61\n    private final Map<String, Object> singletonObjects = new ConcurrentHashMap<>(256);\n    \n    // \u4e8c\u7ea7\u7f13\u5b58\uff1a\u65e9\u671f\u66b4\u9732\u7684\u5bf9\u8c61\uff08\u5df2\u5b9e\u4f8b\u5316\u4f46\u672a\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\uff09\n    private final Map<String, Object> earlySingletonObjects = new HashMap<>(16);\n    \n    // \u4e09\u7ea7\u7f13\u5b58\uff1a\u5355\u4f8b\u5de5\u5382\n    private final Map<String, ObjectFactory<?>> singletonFactories = new HashMap<>(16);\n    \n    // \u6b63\u5728\u521b\u5efa\u7684Bean\u540d\u79f0\n    private final Set<String> singletonsCurrentlyInCreation = Collections.newSetFromMap(new ConcurrentHashMap<>(16));\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u89e3\u51b3\u8fc7\u7a0b\u793a\u4f8b\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u6a21\u62dfSpring\u521b\u5efaBean\u7684\u8fc7\u7a0b\npublic class CircularDependencyResolver {\n    \n    private Map<String, Object> singletonObjects = new ConcurrentHashMap<>();\n    private Map<String, Object> earlySingletonObjects = new HashMap<>();\n    private Map<String, ObjectFactory<?>> singletonFactories = new HashMap<>();\n    private Set<String> singletonsCurrentlyInCreation = new HashSet<>();\n    \n    public Object getBean(String beanName) {\n        // 1. \u4ece\u4e00\u7ea7\u7f13\u5b58\u83b7\u53d6\n        Object singletonObject = singletonObjects.get(beanName);\n        if (singletonObject != null) {\n            return singletonObject;\n        }\n        \n        // 2. \u68c0\u67e5\u662f\u5426\u6b63\u5728\u521b\u5efa\u4e2d\n        if (singletonsCurrentlyInCreation.contains(beanName)) {\n            // \u4ece\u4e8c\u7ea7\u7f13\u5b58\u83b7\u53d6\n            singletonObject = earlySingletonObjects.get(beanName);\n            if (singletonObject == null) {\n                // \u4ece\u4e09\u7ea7\u7f13\u5b58\u83b7\u53d6\n                ObjectFactory<?> factory = singletonFactories.get(beanName);\n                if (factory != null) {\n                    singletonObject = factory.getObject();\n                    // \u79fb\u5230\u4e8c\u7ea7\u7f13\u5b58\n                    earlySingletonObjects.put(beanName, singletonObject);\n                    singletonFactories.remove(beanName);\n                }\n            }\n            return singletonObject;\n        }\n        \n        // 3. \u521b\u5efa\u65b0\u7684Bean\n        return createBean(beanName);\n    }\n    \n    private Object createBean(String beanName) {\n        // \u6807\u8bb0\u4e3a\u6b63\u5728\u521b\u5efa\n        singletonsCurrentlyInCreation.add(beanName);\n        \n        try {\n            // 1. \u5b9e\u4f8b\u5316\n            Object bean = instantiate(beanName);\n            \n            // 2. \u63d0\u524d\u66b4\u9732\u5230\u4e09\u7ea7\u7f13\u5b58\n            singletonFactories.put(beanName, () -> getEarlyBeanReference(beanName, bean));\n            \n            // 3. \u5c5e\u6027\u6ce8\u5165\n            populateBean(bean);\n            \n            // 4. \u521d\u59cb\u5316\n            initializeBean(bean);\n            \n            // 5. \u6dfb\u52a0\u5230\u4e00\u7ea7\u7f13\u5b58\n            singletonObjects.put(beanName, bean);\n            earlySingletonObjects.remove(beanName);\n            singletonFactories.remove(beanName);\n            \n            return bean;\n        } finally {\n            singletonsCurrentlyInCreation.remove(beanName);\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5faa\u73af\u4f9d\u8d56\u7684\u89e3\u51b3\u65b9\u6848\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u4f7f\u7528@Lazy\u6ce8\u89e3"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"@Component\npublic class ServiceA {\n    \n    @Autowired\n    @Lazy  // \u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6253\u7834\u5faa\u73af\n    private ServiceB serviceB;\n    \n    public void doSomething() {\n        serviceB.process();\n    }\n}\n\n@Component\npublic class ServiceB {\n    \n    @Autowired\n    private ServiceA serviceA;\n    \n    public void process() {\n        serviceA.doSomething();\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u4f7f\u7528@PostConstruct"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"@Component\npublic class ServiceA {\n    \n    @Autowired\n    private ApplicationContext applicationContext;\n    \n    private ServiceB serviceB;\n    \n    @PostConstruct\n    public void init() {\n        this.serviceB = applicationContext.getBean(ServiceB.class);\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5b9e\u73b0ApplicationContextAware"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"@Component\npublic class ServiceA implements ApplicationContextAware {\n    \n    private ApplicationContext applicationContext;\n    private ServiceB serviceB;\n    \n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) {\n        this.applicationContext = applicationContext;\n    }\n    \n    public ServiceB getServiceB() {\n        if (serviceB == null) {\n            serviceB = applicationContext.getBean(ServiceB.class);\n        }\n        return serviceB;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u91cd\u65b0\u8bbe\u8ba1\u67b6\u6784"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5f15\u5165\u4e2d\u95f4\u5c42\u6253\u7834\u5faa\u73af\n@Component\npublic class ServiceA {\n    \n    @Autowired\n    private CommonService commonService;\n    \n    public void doSomething() {\n        commonService.processForA();\n    }\n}\n\n@Component\npublic class ServiceB {\n    \n    @Autowired\n    private CommonService commonService;\n    \n    public void process() {\n        commonService.processForB();\n    }\n}\n\n@Component\npublic class CommonService {\n    // \u5171\u540c\u7684\u4e1a\u52a1\u903b\u8f91\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u907f\u514d\u6784\u9020\u5668\u5faa\u73af\u4f9d\u8d56"}),"\n",(0,i.jsx)(e.li,{children:"\u4f18\u5148\u4f7f\u7528Setter\u6ce8\u5165"}),"\n",(0,i.jsx)(e.li,{children:"\u5408\u7406\u4f7f\u7528@Lazy\u6ce8\u89e3"}),"\n",(0,i.jsx)(e.li,{children:"\u91cd\u65b0\u8bbe\u8ba1\u7c7b\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb"}),"\n",(0,i.jsx)(e.li,{children:"\u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u6a21\u5f0f\u89e3\u8026"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"159-jvm-\u5783\u573e\u56de\u6536\u8c03\u4f18\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4ec0\u4e48",children:"159. JVM \u5783\u573e\u56de\u6536\u8c03\u4f18\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4ec0\u4e48\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"JVM"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Java"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"GC\u8c03\u4f18\u4e3b\u8981\u76ee\u6807\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u964d\u4f4eGC\u505c\u987f\u65f6\u95f4"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u51cf\u5c11STW\uff08Stop-The-World\uff09\u65f6\u95f4"}),"\n",(0,i.jsx)(e.li,{children:"\u63d0\u9ad8\u5e94\u7528\u54cd\u5e94\u901f\u5ea6"}),"\n",(0,i.jsx)(e.li,{children:"\u6539\u5584\u7528\u6237\u4f53\u9a8c"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u63d0\u9ad8\u541e\u5410\u91cf"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u51cf\u5c11GC\u9891\u7387"}),"\n",(0,i.jsx)(e.li,{children:"\u964d\u4f4eGC\u5f00\u9500\u5360\u6bd4"}),"\n",(0,i.jsx)(e.li,{children:"\u63d0\u9ad8\u6574\u4f53\u6027\u80fd"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u51cf\u5c11\u5185\u5b58\u5360\u7528"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u4f18\u5316\u5806\u5185\u5b58\u4f7f\u7528"}),"\n",(0,i.jsx)(e.li,{children:"\u907f\u514d\u5185\u5b58\u6cc4\u6f0f"}),"\n",(0,i.jsx)(e.li,{children:"\u5408\u7406\u914d\u7f6e\u5404\u4ee3\u5927\u5c0f"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u8c03\u4f18\u7b56\u7565\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Young GC\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u5e74\u8f7b\u4ee3\u8c03\u4f18\u53c2\u6570\n-Xmn2g                    # \u5e74\u8f7b\u4ee3\u5927\u5c0f\n-XX:SurvivorRatio=8       # Eden:Survivor = 8:1:1\n-XX:MaxTenuringThreshold=15 # \u664b\u5347\u8001\u5e74\u4ee3\u7684\u5e74\u9f84\u9608\u503c\n-XX:PretenureSizeThreshold=1m # \u5927\u5bf9\u8c61\u76f4\u63a5\u8fdb\u8001\u5e74\u4ee3\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Old GC\u4f18\u5316"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u8001\u5e74\u4ee3\u8c03\u4f18\u53c2\u6570\n-XX:+UseG1GC              # \u4f7f\u7528G1\u6536\u96c6\u5668\n-XX:MaxGCPauseMillis=200  # \u6700\u5927\u505c\u987f\u65f6\u95f4\u76ee\u6807\n-XX:G1HeapRegionSize=16m  # G1 Region\u5927\u5c0f\n-XX:G1NewSizePercent=30   # \u5e74\u8f7b\u4ee3\u521d\u59cb\u5360\u6bd4\n-XX:G1MaxNewSizePercent=40 # \u5e74\u8f7b\u4ee3\u6700\u5927\u5360\u6bd4\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u548c\u5206\u6790\u5de5\u5177\uff1a"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// GC\u65e5\u5fd7\u5206\u6790\npublic class GCAnalyzer {\n    \n    public void analyzeGCLogs() {\n        // \u4f7f\u7528jstat\u76d1\u63a7GC\n        // jstat -gc -t pid 1s\n        \n        // \u4f7f\u7528jmap\u5206\u6790\u5806\u5185\u5b58\n        // jmap -histo pid\n        // jmap -dump:format=b,file=heap.hprof pid\n        \n        // \u4f7f\u7528MAT\u5206\u6790\u5185\u5b58\u6cc4\u6f0f\n        // Eclipse Memory Analyzer Tool\n    }\n    \n    // \u7a0b\u5e8f\u5185\u76d1\u63a7GC\n    public void monitorGC() {\n        List<GarbageCollectorMXBean> gcBeans = ManagementFactory.getGarbageCollectorMXBeans();\n        \n        for (GarbageCollectorMXBean gcBean : gcBeans) {\n            System.out.println("GC Name: " + gcBean.getName());\n            System.out.println("Collection Count: " + gcBean.getCollectionCount());\n            System.out.println("Collection Time: " + gcBean.getCollectionTime() + " ms");\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u8c03\u4f18\u6b65\u9aa4\uff1a"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u73b0\u72b6"}),"\uff1a\u6536\u96c6GC\u65e5\u5fd7\u548c\u6027\u80fd\u6307\u6807"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5206\u6790\u95ee\u9898"}),"\uff1a\u8bc6\u522b\u6027\u80fd\u74f6\u9888"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5236\u5b9a\u7b56\u7565"}),"\uff1a\u9009\u62e9\u5408\u9002\u7684\u6536\u96c6\u5668\u548c\u53c2\u6570"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6d4b\u8bd5\u9a8c\u8bc1"}),"\uff1a\u5728\u6d4b\u8bd5\u73af\u5883\u9a8c\u8bc1\u6548\u679c"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4e0a\u7ebf\u76d1\u63a7"}),"\uff1a\u6301\u7eed\u76d1\u63a7\u548c\u8c03\u6574"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"160-redis-\u4e2d\u7684-big-key-\u95ee\u9898\u662f\u4ec0\u4e48\u5982\u4f55\u89e3\u51b3",children:"160. Redis \u4e2d\u7684 Big Key \u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u89e3\u51b3\uff1f"}),"\n",(0,i.jsxs)(e.details,{children:["\n",(0,i.jsxs)(e.summary,{children:["\u5c55\u5f00 ",(0,i.jsx)(e.span,{className:"badge badge--info",children:"\u4e2d\u7b49"})," ",(0,i.jsx)(e.span,{className:"badge badge--primary",children:"VIP"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"\u540e\u7aef"})," ",(0,i.jsx)(e.span,{className:"badge badge--secondary",children:"Redis"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Big Key\u5b9a\u4e49\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"String\u7c7b\u578b"}),"\uff1avalue\u5927\u4e8e10KB"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Hash/List/Set/ZSet"}),"\uff1a\u5143\u7d20\u4e2a\u6570\u8d85\u8fc75000"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5185\u5b58\u5360\u7528"}),"\uff1a\u5355\u4e2akey\u5360\u7528\u5185\u5b58\u8d85\u8fc71MB"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Big Key\u7684\u5371\u5bb3\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u7f51\u7edc\u963b\u585e"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"# \u5927key\u4f20\u8f93\u5360\u7528\u5e26\u5bbd\nGET large_key  # \u4f20\u8f9310MB\u6570\u636e\nHGETALL large_hash  # \u8fd4\u56de10\u4e07\u4e2a\u5b57\u6bb5\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u8d85\u65f6\u963b\u585e"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"# \u5220\u9664\u5927key\u5bfc\u81f4\u963b\u585e\nDEL large_list  # \u5220\u9664100\u4e07\u5143\u7d20\u7684\u5217\u8868\nEXPIRE large_set 0  # \u8fc7\u671f\u5220\u9664\u5927\u96c6\u5408\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5185\u5b58\u4e0d\u5747"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u67d0\u4e2aRedis\u8282\u70b9\u5185\u5b58\u5360\u7528\u8fc7\u9ad8"}),"\n",(0,i.jsx)(e.li,{children:"\u96c6\u7fa4\u8282\u70b9\u8d1f\u8f7d\u4e0d\u5747\u8861"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u68c0\u6d4bBig Key\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. redis-cli\u626b\u63cf"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u626b\u63cfbig key\nredis-cli --bigkeys -h 127.0.0.1 -p 6379\n\n# \u81ea\u5b9a\u4e49\u9608\u503c\u626b\u63cf\nredis-cli --bigkeys --bigkeys-threshold=1000000\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u76d1\u63a7\u811a\u672c"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import redis\n\ndef find_big_keys():\n    r = redis.Redis(host='localhost', port=6379)\n    \n    # \u626b\u63cf\u6240\u6709key\n    for key in r.scan_iter():\n        key_type = r.type(key).decode()\n        size = 0\n        \n        if key_type == 'string':\n            size = len(r.get(key) or b'')\n        elif key_type == 'hash':\n            size = r.hlen(key)\n        elif key_type == 'list':\n            size = r.llen(key)\n        elif key_type in ['set', 'zset']:\n            size = r.scard(key) if key_type == 'set' else r.zcard(key)\n        \n        # \u5224\u65ad\u662f\u5426\u4e3abig key\n        if (key_type == 'string' and size > 10*1024) or \\\n           (key_type in ['hash', 'list', 'set', 'zset'] and size > 5000):\n            print(f\"Big Key: {key}, Type: {key_type}, Size: {size}\")\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u89e3\u51b3\u65b9\u6848\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u62c6\u5206\u5927key"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u62c6\u5206\u5927Hash\npublic class HashSplitter {\n    \n    public void splitLargeHash(String largeKey) {\n        // \u539fkey: user:1001\n        // \u62c6\u5206\u4e3a: user:1001:0, user:1001:1, user:1001:2...\n        \n        Map<String, String> largeHash = redisTemplate.opsForHash().entries(largeKey);\n        int batchSize = 100;\n        int batchIndex = 0;\n        \n        Map<String, String> batch = new HashMap<>();\n        for (Map.Entry<String, String> entry : largeHash.entrySet()) {\n            batch.put(entry.getKey(), entry.getValue());\n            \n            if (batch.size() >= batchSize) {\n                String newKey = largeKey + ":" + batchIndex++;\n                redisTemplate.opsForHash().putAll(newKey, batch);\n                batch.clear();\n            }\n        }\n        \n        // \u4fdd\u5b58\u5269\u4f59\u6570\u636e\n        if (!batch.isEmpty()) {\n            String newKey = largeKey + ":" + batchIndex;\n            redisTemplate.opsForHash().putAll(newKey, batch);\n        }\n        \n        // \u5220\u9664\u539fkey\n        redisTemplate.delete(largeKey);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u5206\u9875\u8bfb\u53d6"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// \u5206\u9875\u83b7\u53d6\u5927\u96c6\u5408\npublic class PaginatedReader {\n    \n    public List<String> getListByPage(String key, int page, int pageSize) {\n        int start = page * pageSize;\n        int end = start + pageSize - 1;\n        return redisTemplate.opsForList().range(key, start, end);\n    }\n    \n    public Set<String> getSetByPage(String key, int count) {\n        return redisTemplate.opsForSet().distinctRandomMembers(key, count);\n    }\n    \n    public Map<String, String> getHashByPattern(String key, String pattern) {\n        Cursor<Map.Entry<String, String>> cursor = redisTemplate.opsForHash()\n            .scan(key, ScanOptions.scanOptions().match(pattern).count(100).build());\n        \n        Map<String, String> result = new HashMap<>();\n        while (cursor.hasNext()) {\n            Map.Entry<String, String> entry = cursor.next();\n            result.put(entry.getKey(), entry.getValue());\n        }\n        return result;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"3. \u5f02\u6b65\u5220\u9664"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// \u5f02\u6b65\u5220\u9664\u5927key\npublic class AsyncDeleter {\n    \n    public void asyncDeleteLargeKey(String key) {\n        String keyType = redisTemplate.type(key).code();\n        \n        switch (keyType) {\n            case "hash":\n                asyncDeleteHash(key);\n                break;\n            case "list":\n                asyncDeleteList(key);\n                break;\n            case "set":\n                asyncDeleteSet(key);\n                break;\n            case "zset":\n                asyncDeleteZSet(key);\n                break;\n            default:\n                redisTemplate.delete(key);\n        }\n    }\n    \n    private void asyncDeleteHash(String key) {\n        // \u4f7f\u7528HSCAN + HDEL\u5206\u6279\u5220\u9664\n        Cursor<Map.Entry<String, String>> cursor = redisTemplate.opsForHash()\n            .scan(key, ScanOptions.scanOptions().count(100).build());\n        \n        while (cursor.hasNext()) {\n            List<String> fields = new ArrayList<>();\n            for (int i = 0; i < 100 && cursor.hasNext(); i++) {\n                fields.add(cursor.next().getKey());\n            }\n            redisTemplate.opsForHash().delete(key, fields.toArray());\n        }\n        \n        redisTemplate.delete(key);\n    }\n    \n    private void asyncDeleteList(String key) {\n        // \u4f7f\u7528LTRIM\u9010\u6b65\u7f29\u77ed\u5217\u8868\n        while (redisTemplate.opsForList().size(key) > 0) {\n            redisTemplate.opsForList().trim(key, 100, -1);\n        }\n        redisTemplate.delete(key);\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"4. \u4f7f\u7528UNLINK\u547d\u4ee4"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \u4f7f\u7528UNLINK\u4ee3\u66ffDEL\nUNLINK large_key  # \u5f02\u6b65\u5220\u9664\uff0c\u4e0d\u963b\u585e\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u9884\u9632\u63aa\u65bd\uff1a"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. \u8bbe\u8ba1\u89c4\u8303"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// key\u8bbe\u8ba1\u89c4\u8303\npublic class KeyDesignGuidelines {\n    \n    // 1. \u63a7\u5236value\u5927\u5c0f\n    private static final int MAX_STRING_SIZE = 10 * 1024; // 10KB\n    private static final int MAX_COLLECTION_SIZE = 5000;   // 5000\u4e2a\u5143\u7d20\n    \n    // 2. \u4f7f\u7528\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\n    public void useAppropriateDataStructure() {\n        // \u5c11\u91cf\u5b57\u6bb5\u7528Hash\n        // \u5927\u91cf\u5b57\u6bb5\u8003\u8651\u62c6\u5206\u6216\u4f7f\u7528String + JSON\n        \n        // \u6709\u5e8f\u6570\u636e\u7528ZSet\n        // \u65e0\u5e8f\u6570\u636e\u7528Set\n        \n        // \u961f\u5217\u7528List\n        // \u6808\u7528List\n    }\n    \n    // 3. \u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n    public void setExpiration(String key, Object value) {\n        redisTemplate.opsForValue().set(key, value, 3600, TimeUnit.SECONDS);\n    }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"2. \u76d1\u63a7\u544a\u8b66"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@Component\npublic class BigKeyMonitor {\n    \n    @Scheduled(fixedRate = 3600000) // \u6bcf\u5c0f\u65f6\u68c0\u67e5\n    public void scanBigKeys() {\n        // \u626b\u63cf\u5927key\u5e76\u544a\u8b66\n        List<String> bigKeys = findBigKeys();\n        \n        if (!bigKeys.isEmpty()) {\n            alertService.sendAlert("\u53d1\u73b0Big Key", \n                "\u53d1\u73b0 " + bigKeys.size() + " \u4e2aBig Key: " + String.join(", ", bigKeys));\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6700\u4f73\u5b9e\u8df5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9884\u9632\u4e3a\u4e3b"}),"\uff1a\u8bbe\u8ba1\u65f6\u907f\u514d\u5927key"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u76d1\u63a7\u9884\u8b66"}),"\uff1a\u5b9a\u671f\u626b\u63cf\u548c\u76d1\u63a7"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5206\u62c6\u7b56\u7565"}),"\uff1a\u5408\u7406\u62c6\u5206\u5927key"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5f02\u6b65\u64cd\u4f5c"}),"\uff1a\u4f7f\u7528UNLINK\u5f02\u6b65\u5220\u9664"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4e1a\u52a1\u4f18\u5316"}),"\uff1a\u4ece\u4e1a\u52a1\u5c42\u9762\u4f18\u5316\u6570\u636e\u7ed3\u6784"]}),"\n"]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}}}]);